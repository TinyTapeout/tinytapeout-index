{
  "version": 3,
  "id": "tt08",
  "name": "Tiny Tapeout 8",
  "repo": "https://github.com/TinyTapeout/tinytapeout-08",
  "commit": "77030ee6edcbbc33d6769803a39ec97d0d7eba25",
  "updated": "2024-09-07T07:45:02Z",
  "projects": [
    {
      "macro": "tt_um_08_sws",
      "address": 526,
      "title": "Sine Wave Synthesizer",
      "author": "Maximilian Scherzer",
      "description": "Generate Sine Wave",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11,
        6,
        10,
        7,
        9
      ],
      "repo": "https://github.com/m-scherzer/tt_um_08_sws",
      "commit": "3d3e7fc404dc191f1df6fc66083188738b8b917e",
      "pinout": {
        "ui[0]": "reset",
        "ui[1]": "dem_dis",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "bias",
        "ua[1]": "ib_hi",
        "ua[2]": "ib_lo",
        "ua[3]": "iop",
        "ua[4]": "ion",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_16_mic_beamformer_arghunter",
      "address": 644,
      "title": "16 Mic Beamformer",
      "author": "Armaan Gomes",
      "description": "A 0 delays fixed delay and sum beamformer that can utilize up to 16 input microphones",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/arghunter/CIC-Filter-Verilog",
      "commit": "dbdd7c07f17e7abcd619f34b3c8fa26e3e5d2ef4",
      "pinout": {
        "ui[0]": "PDM Input Mics 0,1",
        "ui[1]": "PDM Input Mics 2,3",
        "ui[2]": "PDM Input Mics 4,5",
        "ui[3]": "PDM Input Mics 6,7",
        "ui[4]": "PDM Input Mics 8,9",
        "ui[5]": "PDM Input Mics 10,11",
        "ui[6]": "PDM Input Mics 12,13",
        "ui[7]": "PDM Input Mics 14,15",
        "uo[0]": "I2S Out",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "Bit Clock (3.072 MHz)",
        "uio[1]": "LR Clock (48kHz)",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_2048_vga_game",
      "address": 482,
      "title": "2048 sliding tile puzzle game (VGA)",
      "author": "Uri Shaked",
      "description": "Slide numbered tiles on a grid to combine them to create a tile with the number 2048.",
      "clock_hz": 0,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt08-2048-game",
      "commit": "dc44f905c2a5e514a65eb4a88548ac17f5ef821e",
      "pinout": {
        "ui[0]": "btn_up",
        "ui[1]": "btn_down",
        "ui[2]": "btn_left",
        "ui[3]": "btn_right",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "debug_mode",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "debug_cmd",
        "uio[1]": "debug_cmd",
        "uio[2]": "debug_cmd",
        "uio[3]": "debug_cmd",
        "uio[4]": "debug_data",
        "uio[5]": "debug_data",
        "uio[6]": "debug_data",
        "uio[7]": "debug_data"
      }
    },
    {
      "macro": "tt_um_Electom_cla_4bits",
      "address": 328,
      "title": "4-bit CLA",
      "author": "Wei Zhang",
      "description": "A 4 bit carry look-ahead adder",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Electom/tt08_CSA_4bits",
      "commit": "213ea903e947a2fbc5415d67e893da5d43385ffe",
      "pinout": {
        "ui[0]": "a[0]",
        "ui[1]": "a[1]",
        "ui[2]": "a[2]",
        "ui[3]": "a[3]",
        "ui[4]": "b[0]",
        "ui[5]": "b[1]",
        "ui[6]": "b[2]",
        "ui[7]": "b[3]",
        "uo[0]": "s[0]",
        "uo[1]": "s[1]",
        "uo[2]": "s[2]",
        "uo[3]": "s[3]",
        "uo[4]": "co",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "ci",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_JAC_EE_segdecode",
      "address": 456,
      "title": "7 Segment Decode",
      "author": "Jack Clayton",
      "description": "ASIC implementation of a university CPLD project which drives 4 multiplexed 7 segment displays, and scans a multiplexed keypad.",
      "clock_hz": 5000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JAC-EE/tt08-SegDecode-ASIC",
      "commit": "8029a33959ac51fe8c0fcfa9570b4cc15f07a72c",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "MOSI",
        "ui[2]": "EN",
        "ui[3]": "RESET",
        "ui[4]": "KeyPlxr[0]",
        "ui[5]": "KeyPlxr[1]",
        "ui[6]": "KeyPlxr[2]",
        "ui[7]": "KeyPlxr[3]",
        "uo[0]": "Out7S[0]",
        "uo[1]": "Out7S[1]",
        "uo[2]": "Out7S[2]",
        "uo[3]": "Out7S[3]",
        "uo[4]": "Out7S[4]",
        "uo[5]": "Out7S[5]",
        "uo[6]": "Out7S[6]",
        "uo[7]": "MISO",
        "uio[0]": "ScreenSel[0]",
        "uio[1]": "ScreenSel[1]",
        "uio[2]": "ScreenSel[2]",
        "uio[3]": "ScreenSel[3]",
        "uio[4]": "High-Z",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_LnL_SoC",
      "address": 963,
      "title": "Lab and Lectures SoC",
      "author": "Aloke Kumar Das",
      "description": "A tiny SoC comprising of a cpu, memory and SPI protocol",
      "clock_hz": 50,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/alokerdas/tt_um_LnL_SoC",
      "commit": "a4173d4221c48a84ceab672bdb7bbaacc3c591f8",
      "pinout": {
        "ui[0]": "keyboard 0",
        "ui[1]": "keyboard 1",
        "ui[2]": "keyboard 2",
        "ui[3]": "keyboard 3",
        "ui[4]": "keyboard 4",
        "ui[5]": "keyboard 5",
        "ui[6]": "keyboard 6",
        "ui[7]": "keyboard 7",
        "uo[0]": "display 0",
        "uo[1]": "display 1",
        "uo[2]": "display 2",
        "uo[3]": "display 3",
        "uo[4]": "display 4",
        "uo[5]": "display 5",
        "uo[6]": "display 6",
        "uo[7]": "display 7",
        "uio[0]": "cpu keyboard in flag",
        "uio[1]": "miso of spi",
        "uio[2]": "ssn in of spi",
        "uio[3]": "clock of spi (future use)",
        "uio[4]": "ssn out of spi",
        "uio[5]": "mosi of spi",
        "uio[6]": "sclk of spi",
        "uio[7]": "cpu display flag"
      }
    },
    {
      "macro": "tt_um_MichaelBell_canon",
      "address": 768,
      "title": "TT08 Pachelbel's Canon demo",
      "author": "Mike Bell",
      "description": "Tiny Tapeout visuals with the classic Canon soundtrack",
      "clock_hz": 36000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/tt08-canon",
      "commit": "76d44c18c1139fab761e65768c159eb3e7a102c3",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R[1]",
        "uo[1]": "G[1]",
        "uo[2]": "B[1]",
        "uo[3]": "vsync",
        "uo[4]": "R[0]",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "PWM output"
      }
    },
    {
      "macro": "tt_um_MichaelBell_mandelbrot",
      "address": 844,
      "title": "VGA Mandelbrot",
      "author": "Mike Bell",
      "description": "Mandelbrot on VGA, racing the beam",
      "clock_hz": 100000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/tt08-mandelbrot",
      "commit": "c1644c8feae6fdf4f0d76114e2a361654e785504",
      "pinout": {
        "ui[0]": "Ctrl 0",
        "ui[1]": "Ctrl 1",
        "ui[2]": "Ctrl 2",
        "ui[3]": "Input 0",
        "ui[4]": "Input 1",
        "ui[5]": "Input 2",
        "ui[6]": "Input 3",
        "ui[7]": "Input 4",
        "uo[0]": "R[1]",
        "uo[1]": "G[1]",
        "uo[2]": "B[1]",
        "uo[3]": "vsync",
        "uo[4]": "R[0]",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "Input 5",
        "uio[1]": "Input 6",
        "uio[2]": "Input 7",
        "uio[3]": "Input 8",
        "uio[4]": "Input 9",
        "uio[5]": "Input 10",
        "uio[6]": "Input 11",
        "uio[7]": "Input 12"
      }
    },
    {
      "macro": "tt_um_NicklausThompson_SkyKing",
      "address": 326,
      "title": "SkyKing Demo",
      "author": "Nicklaus Thompson",
      "description": "Types some text over an image of a plane flying into the sunset",
      "clock_hz": 25200000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/FangameEmpire/tt08_skyking",
      "commit": "6346dd0a2a31cec81d6e90ce4540dc08e2bb2e84",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "HS",
        "uo[1]": "R0",
        "uo[2]": "G0",
        "uo[3]": "B0",
        "uo[4]": "VS",
        "uo[5]": "R1",
        "uo[6]": "G1",
        "uo[7]": "B1",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_Richard28277",
      "address": 578,
      "title": "4-bit ALU",
      "author": "Richard Xu, Louis Barbosa, Hallie Ho, Emmy Xu, Gia Bhatia, Emily Chen",
      "description": "The 4-bit ALU is designed to perform basic arithmetic and logical operations on 4-bit binary numbers",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Richard28277/4bit_alu",
      "commit": "cbe1d323580ab6f76fbbe0389392dcea2947bb92",
      "pinout": {
        "ui[0]": "a[0]",
        "ui[1]": "a[1]",
        "ui[2]": "a[2]",
        "ui[3]": "a[3]",
        "ui[4]": "b[0]",
        "ui[5]": "b[1]",
        "ui[6]": "b[2]",
        "ui[7]": "b[3]",
        "uo[0]": "result[0]",
        "uo[1]": "result[1]",
        "uo[2]": "result[2]",
        "uo[3]": "result[3]",
        "uo[4]": "result[4]",
        "uo[5]": "result[5]",
        "uo[6]": "result[6]",
        "uo[7]": "result[7]",
        "uio[0]": "opcode[0]",
        "uio[1]": "opcode[1]",
        "uio[2]": "opcode[2]",
        "uio[3]": "opcode[3]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "carry_out",
        "uio[7]": "overflow"
      }
    },
    {
      "macro": "tt_um_a1k0n_demo",
      "address": 484,
      "title": "Demo by a1k0n",
      "author": "Andy Sloane",
      "description": "Tiny Tapeout demo competition entry",
      "clock_hz": 48000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/a1k0n/tt08-vgademo",
      "commit": "3c307ec9d3c559bf81d7cb05dcb0c7897d4faab5",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "AudioPWM"
      }
    },
    {
      "macro": "tt_um_a1k0n_nyancat",
      "address": 646,
      "title": "VGA Nyan Cat",
      "author": "Andy Sloane",
      "description": "Displays the classic nyan.cat animation",
      "clock_hz": 25175000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/a1k0n/tt08-nyan",
      "commit": "fc668641dbaf3b85531a56d81da7b411cafaeddd",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "AudioPWM"
      }
    },
    {
      "macro": "tt_um_a1k0n_vgadonut",
      "address": 227,
      "title": "VGA donut",
      "author": "Andy Sloane",
      "description": "Renders a 3D torus on a VGA display",
      "clock_hz": 48000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/a1k0n/tt08-vga-donut",
      "commit": "4354b71f9415cbb04f7805a3dbb1edfad27f322c",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_alexjaeger_ringoscillator",
      "address": 486,
      "title": "5MHz Ring Oscillator",
      "author": "Alex Jaeger",
      "description": "A _very_ simple 5MHz ring oscillator",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        4
      ],
      "repo": "https://github.com/AlexJaeger/tt_um_alexjaeger_ringoscillator",
      "commit": "b375255e1704e8ba96fdc71b086ecbf678b80de9",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "Oscillator Output",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_algofoogle_tt08_vga_fun",
      "address": 267,
      "title": "TT08 VGA FUN!",
      "author": "algofoogle (Anton Maurovic)",
      "description": "Rough 24-bit VGA DAC tests with digital control block",
      "clock_hz": 25000000,
      "tiles": "1x2",
      "analog_pins": [
        10,
        7,
        9,
        8
      ],
      "repo": "https://github.com/algofoogle/tt08-vga-fun",
      "commit": "2146326ea1f37737ccfb8b8cec533b77a8a39da1",
      "pinout": {
        "ui[0]": "mode[0] / dac_in[0]",
        "ui[1]": "mode[1] / dac_in[1]",
        "ui[2]": "mode[2] / dac_in[2]",
        "ui[3]": "mode[3] / dac_in[3]",
        "ui[4]": "mode[4] / dac_in[4]",
        "ui[5]": "mode[5] / dac_in[5]",
        "ui[6]": "mode[6] / dac_in[6]",
        "ui[7]": "mode[7] / dac_in[7]",
        "uo[0]": "r7",
        "uo[1]": "g7",
        "uo[2]": "b7",
        "uo[3]": "vsync",
        "uo[4]": "r6",
        "uo[5]": "g6",
        "uo[6]": "b6",
        "uo[7]": "hsync",
        "uio[0]": "vblank_out",
        "uio[1]": "hblank_out",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "bias1_in",
        "uio[6]": "bias2_in",
        "uio[7]": "bias3_in",
        "ua[0]": "VbiasR",
        "ua[1]": "r",
        "ua[2]": "g",
        "ua[3]": "b",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_analog_factory_test",
      "address": 271,
      "title": "TT08 Analog Factory Test",
      "author": "Sylvain Munaut",
      "description": "Test structures for TT08 analog support",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11,
        6,
        10,
        7,
        9,
        8
      ],
      "repo": "https://github.com/smunaut/tt08-analog-factory-test",
      "commit": "f5c890aabdb3108969012fbcae65c82fe2c507fb",
      "pinout": {
        "ui[0]": "ena_1v8_n",
        "ui[1]": "ena_3v3_n",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "uio_oe",
        "ui[7]": "digital_in",
        "uo[0]": "digital_out",
        "uo[1]": "digital_out",
        "uo[2]": "digital_out",
        "uo[3]": "digital_out",
        "uo[4]": "digital_out",
        "uo[5]": "digital_out",
        "uo[6]": "digital_out",
        "uo[7]": "digital_out",
        "uio[0]": "digital_out",
        "uio[1]": "digital_out",
        "uio[2]": "digital_out",
        "uio[3]": "digital_out",
        "uio[4]": "digital_out",
        "uio[5]": "digital_out",
        "uio[6]": "digital_out",
        "uio[7]": "digital_out",
        "ua[0]": "ibias",
        "ua[1]": "vapwr_sense",
        "ua[2]": "vgnd_sense",
        "ua[3]": "vdpwr_sense",
        "ua[4]": "loopback_a",
        "ua[5]": "loopback_b"
      }
    },
    {
      "macro": "tt_um_benpayne_ps2_decoder",
      "address": 462,
      "title": "PS2 Decoder",
      "author": "Ben Payne",
      "description": "A PS2 keyboard decoder",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/benpayne/tt08-ps2-68k",
      "commit": "a1691c78f5e5c58e79b57d67b1867b62f78c7867",
      "pinout": {
        "ui[0]": "ps2_clk",
        "ui[1]": "ps2_data",
        "ui[2]": "clear_int",
        "ui[3]": "cs",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "valid",
        "uo[1]": "interupt",
        "uo[2]": "data_rdy",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "data_out[0]",
        "uio[1]": "data_out[1]",
        "uio[2]": "data_out[2]",
        "uio[3]": "data_out[3]",
        "uio[4]": "data_out[4]",
        "uio[5]": "data_out[5]",
        "uio[6]": "data_out[6]",
        "uio[7]": "data_out[7]"
      }
    },
    {
      "macro": "tt_um_betz_morse_keyer",
      "address": 580,
      "title": "Morse Code Keyer",
      "author": "Brady Etz",
      "description": "Convert a keyed CW input to morse tones and 7-segment character output",
      "clock_hz": 12000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/b-etz/tt08-morse-keyer",
      "commit": "0fbb3c5c77f2acc871ad060cdc5da30bd89080c4",
      "pinout": {
        "ui[0]": "Paddle Selection (1 = Iambic)",
        "ui[1]": "Iambic-A/B Type Selection (1 = B)",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "WPM Select [0] (LSB)",
        "ui[5]": "WPM Select [1]",
        "ui[6]": "WPM Select [2]",
        "ui[7]": "WPM Select [3] (MSB)",
        "uo[0]": "7-Seg. Display A",
        "uo[1]": "7-Seg. Display B",
        "uo[2]": "7-Seg. Display C",
        "uo[3]": "7-Seg. Display D",
        "uo[4]": "7-Seg. Display E",
        "uo[5]": "7-Seg. Display F",
        "uo[6]": "7-Seg. Display G",
        "uo[7]": "7-Seg. Display .",
        "uio[0]": "External Dit / Straight In (active-high)",
        "uio[1]": "External Dah In (active-high)",
        "uio[2]": "Aux. Dit Paddle Out (active-high)",
        "uio[3]": "Aux. Dah Paddle Out (active-high)",
        "uio[4]": "Aux. Morse Out (active-high)",
        "uio[5]": "Buzzer Tone Out",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_bgr_agolmanesh",
      "address": 524,
      "title": "Bandgap Reference",
      "author": "Asal Golmanesh",
      "description": "Bandgap 1.2V at 1.8 supply with skywater 130nm from 0 to 80deg",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        10,
        7,
        9,
        8
      ],
      "repo": "https://github.com/AsalGolmanesh/tt08-bgr",
      "commit": "649b1597884b0fdb2e0cf979833fb23245441b4c",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "Vbgr",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_brailliance",
      "address": 463,
      "title": "Brailliance",
      "author": "Akshat B, Evana T, John L, Rittrija M, Riley Gu ",
      "description": "ASCII-to-Braille Converter",
      "clock_hz": 5000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/rileyguu/tt08-brailliance",
      "commit": "ee388fdc052bc78bef367db190e3a65b54227605",
      "pinout": {
        "ui[0]": "clk",
        "ui[1]": "reset",
        "ui[2]": "next",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "reader1_out[0]",
        "uo[1]": "reader1_out[1]",
        "uo[2]": "reader1_out[2]",
        "uo[3]": "reader1_out[3]",
        "uo[4]": "reader1_out[4]",
        "uo[5]": "reader1_out[5]",
        "uo[6]": "reader1_out[6]",
        "uo[7]": "reader1_out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_brandonramos_VGA_Pong_with_NES_Controllers",
      "address": 257,
      "title": "VGA Pong with NES Controllers",
      "author": "Brandon S. Ramos",
      "description": "Pong using 2 NES Controllers with a VGA display",
      "clock_hz": 25175000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/J0NTrollston/tt08-VGA-Pong-with-NES-Controllers",
      "commit": "53e38925cb7987a9b900e4312febe1aaf9af7625",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "h_sync",
        "uo[1]": "v_sync",
        "uo[2]": "r",
        "uo[3]": "g",
        "uo[4]": "b",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "NES_Controller_Left[0]",
        "uio[1]": "NES_Controller_Left[1]",
        "uio[2]": "NES_Controller_Left[2]",
        "uio[3]": "NES_Controller_Right[0]",
        "uio[4]": "NES_Controller_Right[1]",
        "uio[5]": "NES_Controller_Right[2]",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_bytex64_munch",
      "address": 589,
      "title": "Munch",
      "author": "bytex64",
      "description": "Displays munching squares through VGA PMOD",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/bytex64/tt-munch",
      "commit": "7428bdc8ceb4d3c4ed4c7be23137f9e19d85cb27",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSYNC",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSYNC",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "beat clock bit 1 (output)",
        "uio[5]": "beat clock bit 2 (output)",
        "uio[6]": "beat clock bit 3 (output)",
        "uio[7]": "audio (output)"
      }
    },
    {
      "macro": "tt_um_cattuto_sr_latch",
      "address": 329,
      "title": "TT08 - experiments with latch-based shift registers",
      "author": "Ciro Cattuto",
      "description": "A 512-bit latch-based shift register in 1 tile",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ccattuto/tt08-sr-latch",
      "commit": "39def64a3648573854a12fad811a9771b0d83ec2",
      "pinout": {
        "ui[0]": "shift register input",
        "ui[1]": "shift control (edge-triggered)",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "shift register output",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_cejmu",
      "address": 268,
      "title": "CEJMU Beers and Adders",
      "author": "Prof. Dr.-Ing. Matthias Jung, Philipp Wetzstein, Derek Christ, Jonathan Hager",
      "description": "Several projects to show in lectures. Includes a simple state-machine, a decoder and two 24 bit adders. Refer to documentation for details",
      "clock_hz": 12000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/CEJMU/tt08_cejmu",
      "commit": "1bb3170854e6de87bc143b817f58d1d9aeab84ca",
      "pinout": {
        "ui[0]": "Multiplexed to all designs (refer to documentation for details)",
        "ui[1]": "...",
        "ui[2]": "...",
        "ui[3]": "...",
        "ui[4]": "...",
        "ui[5]": "...",
        "ui[6]": "...",
        "ui[7]": "...",
        "uo[0]": "Multiplexed from all designs (refer to documentation for details)",
        "uo[1]": "...",
        "uo[2]": "...",
        "uo[3]": "...",
        "uo[4]": "...",
        "uo[5]": "...",
        "uo[6]": "...",
        "uo[7]": "...",
        "uio[0]": "Select design (input)",
        "uio[1]": "Select design (input)",
        "uio[2]": "start_calc",
        "uio[3]": "output_result",
        "uio[4]": "unused",
        "uio[5]": "unused",
        "uio[6]": "overflow bit of RCA (output)",
        "uio[7]": "overflow bit of CLA (output)"
      }
    },
    {
      "macro": "tt_um_cfib_demo",
      "address": 591,
      "title": "cfib Demoscene Entry",
      "author": "Christian Fibich",
      "description": "Generates VGA video and PWM audio",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/cfib/tt08-cfib-demo",
      "commit": "6a8ba7c70c6913362b0ef2009978116ee7ec5f80",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "r[1]",
        "uo[1]": "g[1]",
        "uo[2]": "b[1]",
        "uo[3]": "vsync",
        "uo[4]": "r[0]",
        "uo[5]": "g[0]",
        "uo[6]": "b[0]",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "pwm"
      }
    },
    {
      "macro": "tt_um_chip_rom",
      "address": 0,
      "title": "Chip ROM",
      "author": "Uri Shaked",
      "description": "ROM with information about the chip",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt-chip-rom",
      "commit": "e22570f04abf0fd86c947af862c72f491abb1716",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "addr[4]",
        "ui[5]": "addr[5]",
        "ui[6]": "addr[6]",
        "ui[7]": "addr[7]",
        "uo[0]": "data[0]",
        "uo[1]": "data[1]",
        "uo[2]": "data[2]",
        "uo[3]": "data[3]",
        "uo[4]": "data[4]",
        "uo[5]": "data[5]",
        "uo[6]": "data[6]",
        "uo[7]": "data[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_clock_divider_arghunter",
      "address": 334,
      "title": "Clock Divider ",
      "author": "Armaan Gomes",
      "description": "A clock divider with lag correction",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/arghunter/Clock-Divider-Verilog",
      "commit": "e154d5c88f06e9d05e202bdde1934b123c04ee67",
      "pinout": {
        "ui[0]": "Bit Clock (3.072 Mhz)",
        "ui[1]": "LR Clock (48Khz)",
        "ui[2]": "PDM Input Mics 0,1",
        "ui[3]": "PDM Input Mics 2,3",
        "ui[4]": "PDM Input Mics 4,5",
        "ui[5]": "PDM Input Mics 6,7",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "PCM Out Mic 0",
        "uo[1]": "PCM Out Mic 1",
        "uo[2]": "PCM Out Mic 2",
        "uo[3]": "PCM Out Mic 3",
        "uo[4]": "PCM Out Mic 4",
        "uo[5]": "PCM Out Mic 5",
        "uo[6]": "PCM Out Mic 6",
        "uo[7]": "PCM Out Mic 7",
        "uio[0]": "Delay Select 0",
        "uio[1]": "Delay Select 1",
        "uio[2]": "Delay Select 2",
        "uio[3]": "Delay Select 3",
        "uio[4]": "Delay Select 4",
        "uio[5]": "Beamformed PCM Output",
        "uio[6]": "Mic Clock",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_comm_ic_bhavuk",
      "address": 652,
      "title": "Comm_IC",
      "author": "Bhavuk",
      "description": "Communication protcols: UART, SPI, I2C",
      "clock_hz": 20000000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/Bhavuk-HDL/tty8_comm_ic",
      "commit": "f1cb2df40ff540ad3d8a22d0b6d4bc27a5150aaa",
      "pinout": {
        "ui[0]": "UART_RX",
        "ui[1]": "MISO",
        "ui[2]": "data_en",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "UART_TX",
        "uo[1]": "SEN",
        "uo[2]": "SCLK",
        "uo[3]": "MOSI",
        "uo[4]": "SCL",
        "uo[5]": "busy_uart",
        "uo[6]": "busy_spi",
        "uo[7]": "busy_i2c",
        "uio[0]": "SDA_out",
        "uio[1]": "new_uart",
        "uio[2]": "data_out[0]",
        "uio[3]": "data_out[1]",
        "uio[4]": "data_out[2]",
        "uio[5]": "data_out[3]",
        "uio[6]": "error_i2c",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_crispy_vga",
      "address": 967,
      "title": "Crispy VGA",
      "author": "James Meech",
      "description": "The scrolling VGA example from the vga playground but as you set more inputs high it gets successively more crispy",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JamesTimothyMeech/James-Meech-TT08-Demoscene",
      "commit": "94292fa606f901a5e31c8383e54cdac67b513909",
      "pinout": {
        "ui[0]": "R[1] vga input",
        "ui[1]": "G[1] vga input",
        "ui[2]": "B[1] vga input",
        "ui[3]": "vsync vga input",
        "ui[4]": "R[0] vga input",
        "ui[5]": "G[0] vga input",
        "ui[6]": "B[0] vga input",
        "ui[7]": "hsync vga input",
        "uo[0]": "R[1] vga input",
        "uo[1]": "G[1] vga input",
        "uo[2]": "B[1] vga input",
        "uo[3]": "vsync vga input",
        "uo[4]": "R[0] vga input",
        "uo[5]": "G[0] vga input",
        "uo[6]": "B[0] vga input",
        "uo[7]": "hsync vga input",
        "uio[0]": "Crispy input bit 0 that toggles the noise on the hsync signal on or off. Also adds one bit of noise to audio.",
        "uio[1]": "Crispy input bit 1 toggles the noise on the B signal on or off. Also adds one bit of noise to audio.",
        "uio[2]": "Crispy input bit 2 toggles the noise on the G signal on or off. Also adds one bit of noise to audio.",
        "uio[3]": "Crispy input bit 3 toggles the noise on the R signal on or off. Also adds one bit of noise to audio.",
        "uio[4]": "Crispy input bit 4 that toggles the noise on the vsync signal on or off. Also adds one bit of noise to audio.",
        "uio[5]": "Crispy input bit 5 that sets the noise level applied to the R, G, and B wires to high or low. Also adds one bit of noise to audio.",
        "uio[6]": "Audio input bit",
        "uio[7]": "Audio output bit"
      }
    },
    {
      "macro": "tt_um_daosvik_aesinvsbox",
      "address": 323,
      "title": "AES Inverse S-box",
      "author": "Dag Arne Osvik",
      "description": "Advanced Encryption Standard (AES) Inverse S-box",
      "clock_hz": 125000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/daosvik/tt08-aes-invsbox",
      "commit": "e78636840df3af0a11027db7fe2a0d3a82821521",
      "pinout": {
        "ui[0]": "x[0]",
        "ui[1]": "x[1]",
        "ui[2]": "x[2]",
        "ui[3]": "x[3]",
        "ui[4]": "x[4]",
        "ui[5]": "x[5]",
        "ui[6]": "x[6]",
        "ui[7]": "x[7]",
        "uo[0]": "y[0]",
        "uo[1]": "y[1]",
        "uo[2]": "y[2]",
        "uo[3]": "y[3]",
        "uo[4]": "y[4]",
        "uo[5]": "y[5]",
        "uo[6]": "y[6]",
        "uo[7]": "y[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ddc_arghunter",
      "address": 974,
      "title": "DDC",
      "author": "Armaan Gomes",
      "description": "Converts I2S input to PDM output",
      "clock_hz": 0,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/arghunter/DDC-Digital-to-DIgital-Converter",
      "commit": "73d05d45cedb8eda8526502c03179d0eb99dc122",
      "pinout": {
        "ui[0]": "Bit Clock (3.072 Mhz)",
        "ui[1]": "LR Clock (48Khz)",
        "ui[2]": "PDM Input Mics 0,1",
        "ui[3]": "PDM Input Mics 2,3",
        "ui[4]": "PDM Input Mics 4,5",
        "ui[5]": "PDM Input Mics 6,7",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "PCM Out Mic 0",
        "uo[1]": "PCM Out Mic 1",
        "uo[2]": "PCM Out Mic 2",
        "uo[3]": "PCM Out Mic 3",
        "uo[4]": "PCM Out Mic 4",
        "uo[5]": "PCM Out Mic 5",
        "uo[6]": "PCM Out Mic 6",
        "uo[7]": "PCM Out Mic 7",
        "uio[0]": "Delay Select 0",
        "uio[1]": "Delay Select 1",
        "uio[2]": "Delay Select 2",
        "uio[3]": "Delay Select 3",
        "uio[4]": "Delay Select 4",
        "uio[5]": "Beamformed PCM Output",
        "uio[6]": "Mic Clock",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_demosiine_sda",
      "address": 587,
      "title": "DemoSiine",
      "author": "SagarDevAchar",
      "description": "A Wavy and Rainbowy TT08 Demoscene Submission",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/SagarDevAchar/tt08-demosiine",
      "commit": "396391b25440e8c8202c4723a872cdd98d2e3a8e",
      "pinout": {
        "ui[0]": "Frame Positive / Negative",
        "ui[1]": "Enable / Disable Little Sine Layer",
        "ui[2]": "Enable / Disable Big Sine Layer",
        "ui[3]": "Enable / Disable Overlay",
        "ui[4]": "Toggle Overlay Style",
        "ui[5]": "Toggle Background Style",
        "ui[6]": "Run / Stop Animation",
        "ui[7]": "Play / Pause Audio",
        "uo[0]": "Video Red MSB",
        "uo[1]": "Video Green MSB",
        "uo[2]": "Video Blue MSB",
        "uo[3]": "Video V-Sync",
        "uo[4]": "Video Red LSB",
        "uo[5]": "Video Green LSB",
        "uo[6]": "Video Blue LSB",
        "uo[7]": "Video H-Sync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Audio Output"
      }
    },
    {
      "macro": "tt_um_dendraws_donut",
      "address": 710,
      "title": "donut",
      "author": "Daniel Endraws",
      "description": "Showing a Donut",
      "clock_hz": 50350000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/daniel-endraws/tt08-donut",
      "commit": "7b69c908d0541b151c67b8543aeb44cced6a3892",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R[1]",
        "uo[1]": "G[1]",
        "uo[2]": "B[1]",
        "uo[3]": "vsync",
        "uo[4]": "R[0]",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_devstdin_LDO_OSC",
      "address": 229,
      "title": "LDO BG IREF OSC",
      "author": "Lukas Baumann",
      "description": "Analog building-blocks for Tiny Tapeout 8",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        0
      ],
      "repo": "https://github.com/devstdin/tt08-ldo-bg-ref-osc",
      "commit": "b0af14e2dfc7f1f358d7c684fa234ef10d7308ea",
      "pinout": {
        "ui[0]": "OSC_EN",
        "ui[1]": "OSC_RESET",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "OSC_OUT",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "LDO_OUT",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_dlfloatmac",
      "address": 838,
      "title": "DL float MAC",
      "author": "Ananya P & Nidhi M D",
      "description": "MAC unit for 16 bit DL float data type",
      "clock_hz": 40000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/ananya343B/tt08_dlfloat_mac",
      "commit": "7ea09d55d6d3b1f9bea796369bdb7c2436280ff1",
      "pinout": {
        "ui[0]": "FP16 in[0]",
        "ui[1]": "FP16 in[1]",
        "ui[2]": "FP16 in[2]",
        "ui[3]": "FP16 in[3]",
        "ui[4]": "FP16 in[4]",
        "ui[5]": "FP16 in[5]",
        "ui[6]": "FP16 in[6]",
        "ui[7]": "FP16 in[7]",
        "uo[0]": "FP16 out[0]/FP16 out[8]",
        "uo[1]": "FP16 out[1]/FP16 out[9]",
        "uo[2]": "FP16 out[2]/FP16 out[10]",
        "uo[3]": "FP16 out[3]/FP16 out[11]",
        "uo[4]": "FP16 out[4]/FP16 out[12]",
        "uo[5]": "FP16 out[5]/FP16 out[13]",
        "uo[6]": "FP16 out[6]/FP16 out[14]",
        "uo[7]": "FP16 out[7]/FP16 out[15]",
        "uio[0]": "FP16 in[8]",
        "uio[1]": "FP16 in[9]",
        "uio[2]": "FP16 in[10]",
        "uio[3]": "FP16 in[11]",
        "uio[4]": "FP16 in[12]",
        "uio[5]": "FP16 in[13]",
        "uio[6]": "FP16 in[14]",
        "uio[7]": "FP16 in[15]"
      }
    },
    {
      "macro": "tt_um_dlmiles_poc_fskmodem_hdlctrx",
      "address": 706,
      "title": "FSK Modem +HDLC +UART (PoC)",
      "author": "Darryl Miles",
      "description": "FSK Modem w/ HDLC transciever + UART (PoC digital side)",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/dlmiles/tt06-poc-fskmodem-hdlctrx",
      "commit": "3d019d43c111ae1054eccc71a2c5a618149fb888",
      "pinout": {
        "ui[0]": "Rx Data",
        "ui[1]": "Tx Data",
        "ui[2]": "UART RTS",
        "ui[3]": "TableData[0]",
        "ui[4]": "TableData[1]",
        "ui[5]": "TableData[2]",
        "ui[6]": "TableData[3]",
        "ui[7]": "UART RX",
        "uo[0]": "UART TX",
        "uo[1]": "UART CTS",
        "uo[2]": "UART DCD",
        "uo[3]": "Rx Error",
        "uo[4]": "Tx Error",
        "uo[5]": "Sending",
        "uo[6]": "",
        "uo[7]": "Tx Clock Stobe",
        "uio[0]": "Rx Clock (bidi)",
        "uio[1]": "Up/Down (bidi)",
        "uio[2]": "TableAddr[0]",
        "uio[3]": "TableAddr[1]",
        "uio[4]": "TableAddr[2]",
        "uio[5]": "TableAddr[3]",
        "uio[6]": "TableAddr[4]",
        "uio[7]": "TableAddr[5]"
      }
    },
    {
      "macro": "tt_um_dlmiles_tt08_poc_uart",
      "address": 708,
      "title": "UART",
      "author": "Darryl Miles",
      "description": "UART",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/dlmiles/tt08-poc-uart",
      "commit": "218ea32926b5ca52a5ad40a87cc74225b6cfc274",
      "pinout": {
        "ui[0]": "altclk",
        "ui[1]": "busMode0",
        "ui[2]": "busMode1",
        "ui[3]": "rxd",
        "ui[4]": "dsr",
        "ui[5]": "dcd",
        "ui[6]": "cts",
        "ui[7]": "ri",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "dtr",
        "uo[4]": "txd",
        "uo[5]": "rts",
        "uo[6]": "intTx",
        "uo[7]": "intRx",
        "uio[0]": "busData0",
        "uio[1]": "busData1",
        "uio[2]": "busData2",
        "uio[3]": "busData3",
        "uio[4]": "busData4",
        "uio[5]": "busData5",
        "uio[6]": "busData6",
        "uio[7]": "busData7"
      }
    },
    {
      "macro": "tt_um_dmtd_arghunter",
      "address": 264,
      "title": "DMTD ",
      "author": "Armaan Gomes",
      "description": "A Dual Mixer Timer DIfferential",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/arghunter/DMTD-Verilog",
      "commit": "ee10c00040748583f4fcd2091524dc684b20e68f",
      "pinout": {
        "ui[0]": "Bit Clock (3.072 Mhz)",
        "ui[1]": "LR Clock (48Khz)",
        "ui[2]": "PDM Input Mics 0,1",
        "ui[3]": "PDM Input Mics 2,3",
        "ui[4]": "PDM Input Mics 4,5",
        "ui[5]": "PDM Input Mics 6,7",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "PCM Out Mic 0",
        "uo[1]": "PCM Out Mic 1",
        "uo[2]": "PCM Out Mic 2",
        "uo[3]": "PCM Out Mic 3",
        "uo[4]": "PCM Out Mic 4",
        "uo[5]": "PCM Out Mic 5",
        "uo[6]": "PCM Out Mic 6",
        "uo[7]": "PCM Out Mic 7",
        "uio[0]": "Delay Select 0",
        "uio[1]": "Delay Select 1",
        "uio[2]": "Delay Select 2",
        "uio[3]": "Delay Select 3",
        "uio[4]": "Delay Select 4",
        "uio[5]": "Beamformed PCM Output",
        "uio[6]": "Mic Clock",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_dpmu",
      "address": 454,
      "title": "DPMU",
      "author": "Sanjay Kumar M, Shylashree N, Ravish Aradhya H V, RV College Of Engineering, Neha R V, PES Unoversity",
      "description": "Design and Implementation of Dynamic Power management unit",
      "clock_hz": 100,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE/TT8_DPMU",
      "commit": "d9926024aba9d13d125d2bd36b6745fbcb3bfc0c",
      "pinout": {
        "ui[0]": "ui_in[[0]",
        "ui[1]": "ui_in[[1]",
        "ui[2]": "ui_in[[2]",
        "ui[3]": "ui_in[[3]",
        "ui[4]": "ui_in[[4]",
        "ui[5]": "ui_in[[5]",
        "ui[6]": "ui_in[[6]",
        "ui[7]": "ui_in[[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_out[0]",
        "uio[1]": "uio_out[1]",
        "uio[2]": "uio_out[2]",
        "uio[3]": "uio_out[3]",
        "uio[4]": "uio_out[4]",
        "uio[5]": "uio_out[5]",
        "uio[6]": "uio_out[6]",
        "uio[7]": "uio_out[7]"
      }
    },
    {
      "macro": "tt_um_dpmunit",
      "address": 332,
      "title": "DPM_Unit",
      "author": "Sanjay Kumar M, Shylashree N, Ravish Aradhya H V, RV College Of Engineering, Neha R V, PES University",
      "description": "Design and Implementation of Dynamic Power management unit",
      "clock_hz": 100,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE-Shylashree/TT8-DPMU",
      "commit": "ee9c8ae44e1cba03c5315015d6c293d8f2386969",
      "pinout": {
        "ui[0]": "ui_in[[0]",
        "ui[1]": "ui_in[[1]",
        "ui[2]": "ui_in[[2]",
        "ui[3]": "ui_in[[3]",
        "ui[4]": "ui_in[[4]",
        "ui[5]": "ui_in[[5]",
        "ui[6]": "ui_in[[6]",
        "ui[7]": "ui_in[[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_out[0]",
        "uio[1]": "uio_out[1]",
        "uio[2]": "uio_out[2]",
        "uio[3]": "uio_out[3]",
        "uio[4]": "uio_out[4]",
        "uio[5]": "uio_out[5]",
        "uio[6]": "uio_out[6]",
        "uio[7]": "uio_out[7]"
      }
    },
    {
      "macro": "tt_um_edwintorok",
      "address": 846,
      "title": "Rounding error",
      "author": "Edwin T\u00f6r\u00f6k",
      "description": "Competition entry",
      "clock_hz": 25250000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/edwintorok/roundingerror",
      "commit": "8112ebf8e3af3ccb973fee884d74da65eeb4e6da",
      "pinout": {
        "ui[0]": "test mode (0=no, 1=yes)",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "r1",
        "uo[1]": "g1",
        "uo[2]": "b1",
        "uo[3]": "vsync",
        "uo[4]": "r0",
        "uo[5]": "g0",
        "uo[6]": "b0",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "PWM output"
      }
    },
    {
      "macro": "tt_um_emilian_muxpga",
      "address": 143,
      "title": "TinyFPGA resubmit for TT08",
      "author": "Emilian Miron",
      "description": "TinyFPGA",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/diferential/tt08-muxpga",
      "commit": "657f0cb0e7ab650246a923e8eb298a7425950be3",
      "pinout": {
        "ui[0]": "input0",
        "ui[1]": "input1",
        "ui[2]": "input2",
        "ui[3]": "input3",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "cmd0",
        "ui[7]": "cmd1",
        "uo[0]": "output0",
        "uo[1]": "output1",
        "uo[2]": "output2",
        "uo[3]": "output3",
        "uo[4]": "output4",
        "uo[5]": "output5",
        "uo[6]": "output6",
        "uo[7]": "output7",
        "uio[0]": "n/a",
        "uio[1]": "n/a",
        "uio[2]": "n/a",
        "uio[3]": "n/a",
        "uio[4]": "n/a",
        "uio[5]": "n/a",
        "uio[6]": "n/a",
        "uio[7]": "n/a"
      }
    },
    {
      "macro": "tt_um_emmyxu_obstacle_detection",
      "address": 333,
      "title": "Obstacle Detection",
      "author": "Emmy Xu",
      "description": "Does the logic of when to send certain signals when objects are close.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/emmyz00/Obstacle-Detector",
      "commit": "04e008c35a39bcf573038b9d03fb13908f7f1412",
      "pinout": {
        "ui[0]": "sensor_left",
        "ui[1]": "sensor_right",
        "ui[2]": "reset",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "left_buzz",
        "uo[1]": "right_buzz",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ephrenm_tsal",
      "address": 449,
      "title": "TSAL_TT",
      "author": "Ephren Manning",
      "description": "FSAE EV Tractive System Active Light",
      "clock_hz": 8000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ephrenm/tt08-tsal",
      "commit": "62b99cb60c630ef7c77ac90e2f50a3cfd6d8a795",
      "pinout": {
        "ui[0]": "Comparison Value Bit 0",
        "ui[1]": "Comparison Value Bit 1",
        "ui[2]": "Comparison Value Bit 2",
        "ui[3]": "Comparison Value Bit 3",
        "ui[4]": "Comparison Value Bit 4",
        "ui[5]": "Comparison Value Bit 5",
        "ui[6]": "Comparison Value Bit 6",
        "ui[7]": "Comparison Value Bit 7",
        "uo[0]": "Green Led",
        "uo[1]": "Red Led",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "Chip Select",
        "uio[1]": "Serial Data",
        "uio[2]": "",
        "uio[3]": "Serial Clock",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ezchips_calc",
      "address": 586,
      "title": "8-Bit Calculator",
      "author": "Randy Zhu",
      "description": "ChipCraft Page 157 Lab ID: C-EQUALS",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ezchips/tt08-my-calc",
      "commit": "02fd6ad4d986964c07b40b556936cda2556afeec",
      "pinout": {
        "ui[0]": "Unused",
        "ui[1]": "Unused",
        "ui[2]": "Unused",
        "ui[3]": "Unused",
        "ui[4]": "Unused",
        "ui[5]": "Unused",
        "ui[6]": "Unused",
        "ui[7]": "Unused",
        "uo[0]": "Unused",
        "uo[1]": "Unused",
        "uo[2]": "Unused",
        "uo[3]": "Unused",
        "uo[4]": "Unused",
        "uo[5]": "Unused",
        "uo[6]": "Unused",
        "uo[7]": "Unused",
        "uio[0]": "Unused",
        "uio[1]": "Unused",
        "uio[2]": "Unused",
        "uio[3]": "Unused",
        "uio[4]": "Unused",
        "uio[5]": "Unused",
        "uio[6]": "Unused",
        "uio[7]": "Unused"
      }
    },
    {
      "macro": "tt_um_factory_test",
      "address": 1,
      "title": "TinyTapeout 8 Factory Test",
      "author": "Tiny Tapeout",
      "description": "Factory test module",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt08-factory-test",
      "commit": "2107fdb9fe4535da53beaab44d8f5b08afa2147b",
      "pinout": {
        "ui[0]": "sel / in_a[0]",
        "ui[1]": "in_a[1]",
        "ui[2]": "in_a[2]",
        "ui[3]": "in_a[3]",
        "ui[4]": "in_a[4]",
        "ui[5]": "in_a[5]",
        "ui[6]": "in_a[6]",
        "ui[7]": "in_a[7]",
        "uo[0]": "output[0] / counter[0]",
        "uo[1]": "output[1] / counter[1]",
        "uo[2]": "output[2] / counter[2]",
        "uo[3]": "output[3] / counter[3]",
        "uo[4]": "output[4] / counter[4]",
        "uo[5]": "output[5] / counter[5]",
        "uo[6]": "output[6] / counter[6]",
        "uo[7]": "output[7] / counter[7]",
        "uio[0]": "in_b[0] / counter[0]",
        "uio[1]": "in_b[1] / counter[1]",
        "uio[2]": "in_b[2] / counter[2]",
        "uio[3]": "in_b[3] / counter[3]",
        "uio[4]": "in_b[4] / counter[4]",
        "uio[5]": "in_b[5] / counter[5]",
        "uio[6]": "in_b[6] / counter[6]",
        "uio[7]": "in_b[7] / counter[7]"
      }
    },
    {
      "macro": "tt_um_faramire_rotary_ring_wrapper",
      "address": 455,
      "title": "Rotary Encoder WS2812B Control",
      "author": "Fabio Ramirez Stern",
      "description": "A rotary encoder controls 12 WS2812B LEDs on a ring PCB.",
      "clock_hz": 40000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/faramire/TT08-rotary-encoder-WS2812B",
      "commit": "2c862dda73a8edf372cdf47c51cf926e36af8848",
      "pinout": {
        "ui[0]": "rotary encoder: CLK",
        "ui[1]": "rotary encoder: DT",
        "ui[2]": "rotary encoder: SW",
        "ui[3]": "green",
        "ui[4]": "red",
        "ui[5]": "blue",
        "ui[6]": "intensity1",
        "ui[7]": "intensity2",
        "uo[0]": "DOUT",
        "uo[1]": "inverted",
        "uo[2]": "count0",
        "uo[3]": "count1",
        "uo[4]": "count2",
        "uo[5]": "count3",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_faramire_stopwatch",
      "address": 256,
      "title": "Simple Stopwatch",
      "author": "Fabio Ramirez Stern",
      "description": "A simple stopwatch counting in 100th seconds and outputing it via SPI to a MAX7219 chip controlling an 8 digit 7-segment display.",
      "clock_hz": 1000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/faramire/TT08-simple-stopwatch",
      "commit": "e59bca8b8ee0cdc9306480880c2eaa7d2565fb41",
      "pinout": {
        "ui[0]": "start/stop",
        "ui[1]": "lap time",
        "ui[2]": "reset (active high)",
        "ui[3]": "skip display setup (only output time, active high during reset)",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "SPI MOSI",
        "uo[1]": "SPI CS (active low)",
        "uo[2]": "SPI CLK",
        "uo[3]": "stopwatch enabled (counting up)",
        "uo[4]": "display enabled (goes low when showing lap time)",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_favoritohjs_scroller",
      "address": 973,
      "title": "VGA Scroller",
      "author": "FavoritoHJS",
      "description": "Scrolls across a very pixelated cityscape",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/FavoritoHJS/tt08-favoritohjs-scroller",
      "commit": "38c700b6e2a04212e34f9b74e5a21c62d5963aff",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Rh",
        "uo[1]": "Gh",
        "uo[2]": "Bh",
        "uo[3]": "vsync",
        "uo[4]": "Rl",
        "uo[5]": "Gl",
        "uo[6]": "Bl",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_find_the_damn_issue",
      "address": 261,
      "title": "Find The Damn Issue",
      "author": "Leonel Gouveia Ergin (Synogate), Michael Offel (Synogate)",
      "description": "USB to UART/SPI/I2C/JTAG/GPIO adapter",
      "clock_hz": 12000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/synogate/find-the-damn-issue",
      "commit": "bb975a7237d4172c944dcb732847af394732c89a",
      "pinout": {
        "ui[0]": "GPIOh0",
        "ui[1]": "GPIOh1",
        "ui[2]": "GPIOh2",
        "ui[3]": "GPIOh3",
        "ui[4]": "GPIOh4",
        "ui[5]": "GPIOh5",
        "ui[6]": "GPIOh6",
        "ui[7]": "GPIOh7",
        "uo[0]": "GPIOh0/DTR",
        "uo[1]": "GPIOh1/RTS",
        "uo[2]": "GPIOh2",
        "uo[3]": "GPIOh3",
        "uo[4]": "GPIOh4",
        "uo[5]": "GPIOh5",
        "uo[6]": "GPIOh6",
        "uo[7]": "GPIOh7",
        "uio[0]": "GPIOl0-CS",
        "uio[1]": "GPIOl1-MOSI/TX",
        "uio[2]": "GPIOl2-MISO/RX",
        "uio[3]": "GPIOl3-CLK",
        "uio[4]": "GPIOl4-TMS",
        "uio[5]": "GPIOl5-WAIT",
        "uio[6]": "USB_DP",
        "uio[7]": "USB_DN"
      }
    },
    {
      "macro": "tt_um_fountaincoder_top_ad",
      "address": 450,
      "title": "pulse_add",
      "author": "Jonny Edwards",
      "description": "a temporal add in digital",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Fountaincoder/trueadd",
      "commit": "4cccbb089a163f1dc47d2474de174cdf7266720b",
      "pinout": {
        "ui[0]": "in[0]",
        "ui[1]": "in[1]",
        "ui[2]": "in[2]",
        "ui[3]": "in[3]",
        "ui[4]": "in[4]",
        "ui[5]": "in[5]",
        "ui[6]": "in[6]",
        "ui[7]": "in[7]",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_frequency_counter",
      "address": 840,
      "title": "Frequency Counter SSD1306 OLED",
      "author": "Pawel Sitarz (embelon)",
      "description": "Simple Frequency Counter displaying result on SSD1306 SPI OLED",
      "clock_hz": 1000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/embelon/tt08-frequency-counter-oled",
      "commit": "09605b807a37aa3bfa2664416d4badd3a92a02bb",
      "pinout": {
        "ui[0]": "clk_x - measured frequency input",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "OLED nRST",
        "uo[1]": "OLED nVBAT",
        "uo[2]": "OLED nVDC",
        "uo[3]": "OLED nCS",
        "uo[4]": "OLED Data/Command",
        "uo[5]": "OLED CLK",
        "uo[6]": "OLED Data Out",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_georgboecherer_vco",
      "address": 490,
      "title": "Analog Voltage Controlled Oscillator",
      "author": "Georg Boecherer",
      "description": "A voltage controlled oscillator",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        3,
        2
      ],
      "repo": "https://github.com/gbsha/tt08-analog-vco",
      "commit": "61f07d3b05e52b759f13286fd08bc60e70dacdb7",
      "pinout": {
        "ui[0]": "bit in 0",
        "ui[1]": "bit in 1",
        "ui[2]": "bit in 2",
        "ui[3]": "bit in 3",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "bit out 0",
        "uo[1]": "bit out 1",
        "uo[2]": "bit out 2",
        "uo[3]": "bit out 3",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "control signal",
        "ua[1]": "optional control signal",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_gfg_development_tinymandelbrot",
      "address": 772,
      "title": "TinyMandelbrot",
      "author": "Gerrit Grutzeck",
      "description": "A mandelbrot generator",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/gfg-development/tt08-tiny-mandelbrot",
      "commit": "10eeed2afdf5cfaf34288f3fe2b833865a597fbc",
      "pinout": {
        "ui[0]": "serial enable",
        "ui[1]": "serial data",
        "ui[2]": "serial clock",
        "ui[3]": "output select",
        "ui[4]": "frame data[0]",
        "ui[5]": "frame data[1]",
        "ui[6]": "frame data[2]",
        "ui[7]": "frame data[3]",
        "uo[0]": "R[1] or ctr[0]",
        "uo[1]": "G[1] or ctr[0]",
        "uo[2]": "B[1] or ctr[0]",
        "uo[3]": "vsync or ctr[0]",
        "uo[4]": "R[0] or new counter",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "write data[0]",
        "uio[1]": "write data[1]",
        "uio[2]": "write data[2]",
        "uio[3]": "write data[3]",
        "uio[4]": "reset write pointer",
        "uio[5]": "write data",
        "uio[6]": "reset read pointer",
        "uio[7]": "read"
      }
    },
    {
      "macro": "tt_um_hack_cpu",
      "address": 588,
      "title": "HACK CPU",
      "author": "Dantong LUO, Nour MHANNA, Charbel SAAD",
      "description": "A 16-bit CPU based on the HACK architecture",
      "clock_hz": 12500000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/bugavix/hack_cpu",
      "commit": "ab9d0af20213258be0843b03a0176eb26136c619",
      "pinout": {
        "ui[0]": "external halt signal (to use when debugging)",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "GPIO21 - RAM CS",
        "uio[1]": "GPIO22 - RAM MOSI",
        "uio[2]": "GPIO23 - RAM MISO",
        "uio[3]": "GPIO24 - RAM SCK",
        "uio[4]": "DEBUG CS",
        "uio[5]": "DEBUG MOSI",
        "uio[6]": "DEBUG MISO",
        "uio[7]": "DEBUG SCK"
      }
    },
    {
      "macro": "tt_um_htfab_bouncy_capsule",
      "address": 704,
      "title": "Bouncy Capsule",
      "author": "htfab",
      "description": "Demoscene project featuring... well, a bouncy capsule",
      "clock_hz": 25000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/htfab/bouncy-capsule",
      "commit": "b4cb6daddb48874cc2b4f38cdcb7ed20a5e40fde",
      "pinout": {
        "ui[0]": "Pause kinematics",
        "ui[1]": "Reset kinematics",
        "ui[2]": "Mute sound",
        "ui[3]": "Kill sound",
        "ui[4]": "Hide background",
        "ui[5]": "Hide text",
        "ui[6]": "Lock colors",
        "ui[7]": "No re-orientation",
        "uo[0]": "Tiny VGA R1",
        "uo[1]": "Tiny VGA G1",
        "uo[2]": "Tiny VGA B1",
        "uo[3]": "Tiny VGA VSync",
        "uo[4]": "Ting VGA R0",
        "uo[5]": "Tiny VGA G0",
        "uo[6]": "Tiny VGA B0",
        "uo[7]": "Tiny VGA HSync",
        "uio[0]": "PDM audio out",
        "uio[1]": "PDM audio out",
        "uio[2]": "PDM audio out",
        "uio[3]": "PDM audio out",
        "uio[4]": "PDM audio out",
        "uio[5]": "PDM audio out",
        "uio[6]": "PDM audio out",
        "uio[7]": "PDM audio out"
      }
    },
    {
      "macro": "tt_um_htfab_pi_snake",
      "address": 520,
      "title": "Pi Snake",
      "author": "htfab",
      "description": "Voltage divider that generates \u03c0 volts",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        6
      ],
      "repo": "https://github.com/htfab/pi-snake",
      "commit": "b4042ff0e711c2043be1fa7bd93aeb0387d38555",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "voltage output",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_i2c_peripheral_stevej",
      "address": 459,
      "title": "i2c peripherals: leading zero count and fnv-1a hash",
      "author": "Steve Jenson <stevej@gmail.com>",
      "description": "An implementation of HyperLogLog in Verilog for sky130",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/stevej/tt08-stevej-i2c-peripheral",
      "commit": "c87b9867607931f9d5c8f860e5caa24b42ab2e1b",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "(INT)",
        "uio[1]": "(RESET)",
        "uio[2]": "SCL",
        "uio[3]": "SDA",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_i2s_to_pwm_arghunter",
      "address": 266,
      "title": "I2S to PWM ",
      "author": "Armaan Gomes",
      "description": "An 8-bit I2S to PWM convertor",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/arghunter/I2S-to-PWM-Verilog",
      "commit": "dd892af5838f7679a34c2ec496c6edf2015f8a4a",
      "pinout": {
        "ui[0]": "Bit Clock (3.072 Mhz)",
        "ui[1]": "LR Clock (48Khz)",
        "ui[2]": "PDM Input Mics 0,1",
        "ui[3]": "PDM Input Mics 2,3",
        "ui[4]": "PDM Input Mics 4,5",
        "ui[5]": "PDM Input Mics 6,7",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "PCM Out Mic 0",
        "uo[1]": "PCM Out Mic 1",
        "uo[2]": "PCM Out Mic 2",
        "uo[3]": "PCM Out Mic 3",
        "uo[4]": "PCM Out Mic 4",
        "uo[5]": "PCM Out Mic 5",
        "uo[6]": "PCM Out Mic 6",
        "uo[7]": "PCM Out Mic 7",
        "uio[0]": "Delay Select 0",
        "uio[1]": "Delay Select 1",
        "uio[2]": "Delay Select 2",
        "uio[3]": "Delay Select 3",
        "uio[4]": "Delay Select 4",
        "uio[5]": "Beamformed PCM Output",
        "uio[6]": "Mic Clock",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_jayjaywong12",
      "address": 970,
      "title": "mulmul",
      "author": "JJ Wong",
      "description": "Small 4-bit vector multiplication engine",
      "clock_hz": 0,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/jayjaywong12/tt08",
      "commit": "f659691d9b9bbba12d365b2e1f3c8f9170aa8da1",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "addr[4]",
        "ui[5]": "addr[5]",
        "ui[6]": "op[0]",
        "ui[7]": "op[1]",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "data[0]",
        "uio[1]": "data[1]",
        "uio[2]": "data[2]",
        "uio[3]": "data[3]",
        "uio[4]": "state[0]",
        "uio[5]": "state[1]",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_jmack2201",
      "address": 774,
      "title": "Sprite Bouncer with Looping Background Options",
      "author": "Jacob Mack",
      "description": "Sprite bouncer hardware that supports multiple background options and sprites.",
      "clock_hz": 25000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/jmack2201/tt08-jmack2201-demoscene",
      "commit": "29e212e8f2f88e7cfb0ae2cea542ae2c2ef10bcb",
      "pinout": {
        "ui[0]": "vga_control[0]",
        "ui[1]": "vga_control[1]",
        "ui[2]": "vga_control[2]",
        "ui[3]": "vga_control[3]",
        "ui[4]": "vga_control[4]",
        "ui[5]": "vga_control[5]",
        "ui[6]": "vga_control[6]",
        "ui[7]": "vga_control[7]",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSYNC",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSYNC",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_johshoff_metaballs",
      "address": 322,
      "title": "Metaballs",
      "author": "Johannes Hoff",
      "description": "You can't prove it's not metaballs",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/johshoff/tt08-metaballs",
      "commit": "ce37dd6b8c13ac1706fc06b203f6f3a7e497624f",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R[1]",
        "uo[1]": "G[1]",
        "uo[2]": "B[1]",
        "uo[3]": "vsync",
        "uo[4]": "R[0]",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_kapilan_alarm",
      "address": 451,
      "title": "Alarm Clock",
      "author": "Kapilan Karunakaran",
      "description": "A simple alarm clock",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/gmkapilan/tt08-alarmclock",
      "commit": "6749ac30d31db13cc560a61eb135c7a48b823f45",
      "pinout": {
        "ui[0]": "alarm_hours[0]",
        "ui[1]": "alarm_hours[1]",
        "ui[2]": "alarm_hours[2]",
        "ui[3]": "alarm_hours[3]",
        "ui[4]": "alarm_hours[4]",
        "ui[5]": "alarm_minutes[0]",
        "ui[6]": "alarm_minutes[1]",
        "ui[7]": "alarm_minutes[2]",
        "uo[0]": "hours[0]",
        "uo[1]": "hours[1]",
        "uo[2]": "hours[2]",
        "uo[3]": "hours[3]",
        "uo[4]": "hours[4]",
        "uo[5]": "minutes[0]",
        "uo[6]": "minutes[1]",
        "uo[7]": "minutes[2]",
        "uio[0]": "alarm_minutes[3]",
        "uio[1]": "alarm_minutes[4]",
        "uio[2]": "alarm_minutes[5]",
        "uio[3]": "",
        "uio[4]": "minutes[3]",
        "uio[5]": "minutes[4]",
        "uio[6]": "minutes[5]",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_kb2ghz_xalu",
      "address": 899,
      "title": "4-bit minicomputer ALU",
      "author": "Mike McCann",
      "description": "this design provides basic arithmetic and logic functions",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/kb2ghz/tt_um_kb2ghz_xalu",
      "commit": "6c15857217bd40ae0933da728c792ea150fa438f",
      "pinout": {
        "ui[0]": "da0",
        "ui[1]": "da1",
        "ui[2]": "da2",
        "ui[3]": "da3",
        "ui[4]": "db0",
        "ui[5]": "db1",
        "ui[6]": "db2",
        "ui[7]": "db3",
        "uo[0]": "d0",
        "uo[1]": "d1",
        "uo[2]": "d2",
        "uo[3]": "d3",
        "uo[4]": "co_left",
        "uo[5]": "co_right",
        "uo[6]": "EQU",
        "uo[7]": "ZERO",
        "uio[0]": "NEG_ZERO",
        "uio[1]": "ci_left",
        "uio[2]": "ci_right",
        "uio[3]": "COM",
        "uio[4]": "F0",
        "uio[5]": "F1",
        "uio[6]": "F2",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_mac",
      "address": 452,
      "title": "MAC",
      "author": "Mahaa Santeep G, Shylashree N, Ravish Aradhya H V, RV College Of Engineering, Sneha R V, PES University",
      "description": "Design and Implementation of MAC Unit Using Dadda Multiplier and Kogge-Stone Adder",
      "clock_hz": 100,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE/TT8-MAC",
      "commit": "f90a883b02084299de0579ecadd1ef1d24e1a9fb",
      "pinout": {
        "ui[0]": "ui_in[[0]",
        "ui[1]": "ui_in[[1]",
        "ui[2]": "ui_in[[2]",
        "ui[3]": "ui_in[[3]",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_in[0]",
        "uio[1]": "uio_in[1]",
        "uio[2]": "uio_in[2]",
        "uio[3]": "uio_in[3]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_mattvenn_analog_ring_osc",
      "address": 265,
      "title": "Ring Oscillators",
      "author": "Matt Venn",
      "description": "Ring Oscillators using analog output pins",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11,
        6
      ],
      "repo": "https://github.com/mattvenn/tt08-analog-ring-osc",
      "commit": "34311b3577cdb7274ce3552ec88eb089da9d35ee",
      "pinout": {
        "ui[0]": "Enable ring 1",
        "ui[1]": "Enable ring 2",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "ring_oscillator1",
        "uo[1]": "ring_oscillator2",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_mattvenn_r2r_dac_3v3",
      "address": 488,
      "title": "Analog 8 bit 3.3v R2R DAC",
      "author": "Matt Venn",
      "description": "A simple 8 bit DAC with a sine waveform driver and 3.3v output",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        5
      ],
      "repo": "https://github.com/mattvenn/tt08-analog-r2r-dac-3v3",
      "commit": "11bad26aacfefa74a840aa98f99a4827684d9e86",
      "pinout": {
        "ui[0]": "bit 0",
        "ui[1]": "bit 1",
        "ui[2]": "bit 2",
        "ui[3]": "bit 3",
        "ui[4]": "bit 4",
        "ui[5]": "bit 5",
        "ui[6]": "bit 6",
        "ui[7]": "bit 7",
        "uo[0]": "count zero",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "external data",
        "uio[1]": "load divider",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "DAC output",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_mattvenn_rgb_mixer",
      "address": 903,
      "title": "RGB Mixer demo5",
      "author": "Matt Venn",
      "description": "Zero to ASIC demo project",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/rubenet6/ruben",
      "commit": "3fc4308e1723e303ae8c98ca55e3b4f00ef63d1d",
      "pinout": {
        "ui[0]": "enc0 a",
        "ui[1]": "enc0 b",
        "ui[2]": "enc1 a",
        "ui[3]": "enc1 b",
        "ui[4]": "enc2 a",
        "ui[5]": "enc2 b",
        "ui[6]": "debug bit 0",
        "ui[7]": "debug bit 1",
        "uo[0]": "pwm0",
        "uo[1]": "pwm1",
        "uo[2]": "pwm2",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_meriac_play_tune",
      "address": 321,
      "title": "Super Mario Tune on A Piezo Speaker",
      "author": "Milosch Meriac",
      "description": "Plays Super Mario Tune over a Piezo Speaker connected across uio_out[1:0]",
      "clock_hz": 100000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/meriac/tt08-play-tune",
      "commit": "e52439223ae5a0751ad0eabba0ff430d08c51e6c",
      "pinout": {
        "ui[0]": "input pin 0",
        "ui[1]": "input pin 1",
        "ui[2]": "input pin 2",
        "ui[3]": "input pin 3",
        "ui[4]": "input pin 4",
        "ui[5]": "input pin 5",
        "ui[6]": "input pin 6",
        "ui[7]": "input pin 7",
        "uo[0]": "ui[0]",
        "uo[1]": "ui[1]",
        "uo[2]": "ui[2]",
        "uo[3]": "ui[3]",
        "uo[4]": "ui[4]",
        "uo[5]": "ui[5]",
        "uo[6]": "ui[6]",
        "uo[7]": "ui[7]",
        "uio[0]": "piezo_speaker_p (uio_out[0])",
        "uio[1]": "piezo_speaker_n (uio_out[1])",
        "uio[2]": "GND",
        "uio[3]": "GND",
        "uio[4]": "GND",
        "uio[5]": "GND",
        "uio[6]": "GND",
        "uio[7]": "piezo_speaker_n (uio_out[7])"
      }
    },
    {
      "macro": "tt_um_micro_tiles_container",
      "address": 327,
      "title": "Micro tile container",
      "author": "Uri Shaked",
      "description": "Experimental microtile container",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt-micro-tiles-container",
      "commit": "e84d855bbc12778fc96a18afa38a397d89b070c6",
      "pinout": {
        "ui[0]": "in[0]",
        "ui[1]": "in[1]",
        "ui[2]": "in[2]",
        "ui[3]": "in[3]",
        "ui[4]": "in[4]",
        "ui[5]": "in[5]",
        "ui[6]": "in[6]",
        "ui[7]": "in[7]",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "sel[0]",
        "uio[1]": "sel[1]",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_micro_tiles_container_group2",
      "address": 320,
      "title": "Micro tile container (group 2)",
      "author": "Uri Shaked",
      "description": "Experimental microtile container",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt08-micro-tiles-container-group2",
      "commit": "94dc894a789e7e3273e5077a11b4ea235b98b7aa",
      "pinout": {
        "ui[0]": "in[0]",
        "ui[1]": "in[1]",
        "ui[2]": "in[2]",
        "ui[3]": "in[3]",
        "ui[4]": "in[4]",
        "ui[5]": "in[5]",
        "ui[6]": "in[6]",
        "ui[7]": "in[7]",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "sel[0]",
        "uio[1]": "sel[1]",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_morningjava_r2r_from_matt",
      "address": 263,
      "title": "Bucket Brigade",
      "author": "Wallie Everest",
      "description": "Switched capacitor delay line",
      "clock_hz": 100000,
      "tiles": "1x2",
      "analog_pins": [
        11
      ],
      "repo": "https://github.com/WallieEverest/tt08",
      "commit": "5d626fad2884fc03f4310d6f6b49720eb01176e1",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "PHASE_1",
        "uo[1]": "PHASE_2",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "AIN",
        "ua[1]": "AOUT",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_neural_navigators",
      "address": 518,
      "title": "Neural Net ASIC",
      "author": "Neural Navigators: Linyang Lee, Harsha Ganta, Stephanie Shen, William Li, Kiana Dai",
      "description": "MNIST Handwriting prediction on a neural network",
      "clock_hz": 10000000,
      "tiles": "4x2",
      "analog_pins": [],
      "repo": "https://github.com/piboi/tt08-nn",
      "commit": "64c3b3ba55093b06d14084689caf6334e73bceba",
      "pinout": {
        "ui[0]": "ui[0]",
        "ui[1]": "ui[1]",
        "ui[2]": "ui[2]",
        "ui[3]": "ui[3]",
        "ui[4]": "ui[4]",
        "ui[5]": "ui[5]",
        "ui[6]": "ui[6]",
        "ui[7]": "ui[7]",
        "uo[0]": "uo[0]",
        "uo[1]": "uo[1]",
        "uo[2]": "uo[2]",
        "uo[3]": "uo[3]",
        "uo[4]": "uo[4]",
        "uo[5]": "uo[5]",
        "uo[6]": "uo[6]",
        "uo[7]": "uo[7]",
        "uio[0]": "uio[0]",
        "uio[1]": "uio[1]",
        "uio[2]": "uio[2]",
        "uio[3]": "uio[3]",
        "uio[4]": "uio[4]",
        "uio[5]": "uio[5]",
        "uio[6]": "uio[6]",
        "uio[7]": "uio[7]"
      }
    },
    {
      "macro": "tt_um_noritsuna_Vctrl_LC_oscillator",
      "address": 492,
      "title": "Voltage Controlled LC-Oscillator",
      "author": "Noritsuna Imamura",
      "description": "Voltage Controlled LC-Oscillator of 2GHz for Skywater130nm",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/noritsuna/tt08-analog-Vctrl_LC_oscillator",
      "commit": "01dbd627c430a8f31a008a2bd364d46a52c184ba",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "vout_p",
        "ua[1]": "vout_n",
        "ua[2]": "vctrl",
        "ua[3]": "ibias",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_nvious_graphics",
      "address": 582,
      "title": "nVious Graphics",
      "author": "James Ross",
      "description": "Submission for VGA Demoscene",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jar/tt08_nvious_graphics",
      "commit": "c5dcc60dbb3f29fa8e7ee46fc099eb3bfcc370c5",
      "pinout": {
        "ui[0]": "Segment A",
        "ui[1]": "Segment B",
        "ui[2]": "Segment C",
        "ui[3]": "Segment D",
        "ui[4]": "Segment E",
        "ui[5]": "Segment F",
        "ui[6]": "Segment G",
        "ui[7]": "Segment H",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_nyan",
      "address": 448,
      "title": "nyan",
      "author": "Peter N\u00f8rlund",
      "description": "Nyan Cat",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/peter-noerlund/tt08-nyan",
      "commit": "17e4b17efffa07ba0b28ed237faf67cf5dd8567f",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSYNC",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSYNC",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "PWM output"
      }
    },
    {
      "macro": "tt_um_oscillating_bones",
      "address": 649,
      "title": "Oscillating Bones",
      "author": "Uri Shaked",
      "description": "A stylish ring oscillator built from SkullFET transistors",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt08-oscillating-bones",
      "commit": "873f2b63960a6de37aa4d4e2a24d41e061d99851",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "osc_out",
        "uo[1]": "osc_div_2",
        "uo[2]": "osc_div_4",
        "uo[3]": "osc_div_8",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_patater_demokit",
      "address": 718,
      "title": "Patater Demo Kit Waggling Rainbow on a Chip",
      "author": "Jaeden Amero",
      "description": "A 6-bit Waggling Rainbow demo",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Patater/tt08-demokit",
      "commit": "26890e3157ffa460ef6ff13103085089c78c9643",
      "pinout": {
        "ui[0]": "DUAL_EN",
        "ui[1]": "HWAVE_EN",
        "ui[2]": "P0_OFF_0",
        "ui[3]": "P0_OFF_1",
        "ui[4]": "P0_OFF_2",
        "ui[5]": "P1_OFF_0",
        "ui[6]": "P1_OFF_1",
        "ui[7]": "P1_OFF_2",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_pdm_correlator_arghunter",
      "address": 640,
      "title": "PDM Correlator",
      "author": "Armaan Gomes",
      "description": "A chip that performs either cross or auto correlatiion on PDM microphone inputs",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/arghunter/Customizable-PDM-Cross-Correlator-ASIC",
      "commit": "afff7fd117bc7b414bece84b478138da168af41a",
      "pinout": {
        "ui[0]": "Bit Clock (3.072 Mhz)",
        "ui[1]": "LR Clock (48Khz)",
        "ui[2]": "PDM Input Mics 0,1",
        "ui[3]": "PDM Input Mics 2,3",
        "ui[4]": "PDM Input Mics 4,5",
        "ui[5]": "PDM Input Mics 6,7",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "PCM Out Mic 0",
        "uo[1]": "PCM Out Mic 1",
        "uo[2]": "PCM Out Mic 2",
        "uo[3]": "PCM Out Mic 3",
        "uo[4]": "PCM Out Mic 4",
        "uo[5]": "PCM Out Mic 5",
        "uo[6]": "PCM Out Mic 6",
        "uo[7]": "PCM Out Mic 7",
        "uio[0]": "Delay Select 0",
        "uio[1]": "Delay Select 1",
        "uio[2]": "Delay Select 2",
        "uio[3]": "Delay Select 3",
        "uio[4]": "Delay Select 4",
        "uio[5]": "Beamformed PCM Output",
        "uio[6]": "Mic Clock",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_pdm_pitch_filter_arghunter",
      "address": 642,
      "title": "PDM Pitch Filter",
      "author": "Armaan Gomes",
      "description": "It uses a moving average filter and decimator to filter out a specific frequency",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/arghunter/Customizable-PDM-Pitch-Filter-ASIC",
      "commit": "46eff68076441968f33cb253346c14714afb6984",
      "pinout": {
        "ui[0]": "Bit Clock (3.072 Mhz)",
        "ui[1]": "LR Clock (48Khz)",
        "ui[2]": "PDM Input Mics 0,1",
        "ui[3]": "PDM Input Mics 2,3",
        "ui[4]": "PDM Input Mics 4,5",
        "ui[5]": "PDM Input Mics 6,7",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "PCM Out Mic 0",
        "uo[1]": "PCM Out Mic 1",
        "uo[2]": "PCM Out Mic 2",
        "uo[3]": "PCM Out Mic 3",
        "uo[4]": "PCM Out Mic 4",
        "uo[5]": "PCM Out Mic 5",
        "uo[6]": "PCM Out Mic 6",
        "uo[7]": "PCM Out Mic 7",
        "uio[0]": "Delay Select 0",
        "uio[1]": "Delay Select 1",
        "uio[2]": "Delay Select 2",
        "uio[3]": "Delay Select 3",
        "uio[4]": "Delay Select 4",
        "uio[5]": "Beamformed PCM Output",
        "uio[6]": "Mic Clock",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_pyamnihc_dummy_counter",
      "address": 141,
      "title": "Dummy Counter",
      "author": "Chinmay",
      "description": "A 16-bit counter",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/pyamnihc/tt08-dummy-counter",
      "commit": "2b4d2edd0d25ae503f951a4ab55a79b607599c65",
      "pinout": {
        "ui[0]": "count_en",
        "ui[1]": "mult_en",
        "ui[2]": "m_a0",
        "ui[3]": "m_a1",
        "ui[4]": "m_a2",
        "ui[5]": "m_b0",
        "ui[6]": "m_b1",
        "ui[7]": "m_b2",
        "uo[0]": "b0",
        "uo[1]": "b1",
        "uo[2]": "b2",
        "uo[3]": "b3",
        "uo[4]": "b4",
        "uo[5]": "b5",
        "uo[6]": "b6",
        "uo[7]": "b7",
        "uio[0]": "b8",
        "uio[1]": "b9",
        "uio[2]": "b10",
        "uio[3]": "b11",
        "uio[4]": "b12",
        "uio[5]": "b13",
        "uio[6]": "b14",
        "uio[7]": "b15"
      }
    },
    {
      "macro": "tt_um_quarren42_demoscene_top",
      "address": 965,
      "title": "asic design is my passion",
      "author": "Nicholas Junker",
      "description": "baby's first asic - cheeky little text meme",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Quarren42/tt08_Quarren42_demoscene",
      "commit": "9c22f1b8e28ea984c139c0b1b73615e6966ec7cc",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ran_DanielZhu",
      "address": 961,
      "title": "Dice",
      "author": "ZHU QUANHAO",
      "description": "after you press the button\uff0c the system will generate a random number from 0-F",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/DanielZhu123/tt08-verilog-Ztemplate",
      "commit": "e46bad36bab6c22c058a5ada9067e1302cd45687",
      "pinout": {
        "ui[0]": "1",
        "ui[1]": "1",
        "ui[2]": "1",
        "ui[3]": "1",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "1",
        "uo[1]": "1",
        "uo[2]": "1",
        "uo[3]": "1",
        "uo[4]": "1",
        "uo[5]": "1",
        "uo[6]": "1",
        "uo[7]": "1",
        "uio[0]": "1",
        "uio[1]": "1",
        "uio[2]": "1",
        "uio[3]": "1",
        "uio[4]": "1",
        "uio[5]": "1",
        "uio[6]": "1",
        "uio[7]": "1"
      }
    },
    {
      "macro": "tt_um_rburt16_bias_generator",
      "address": 231,
      "title": "Bias Generator",
      "author": "Rod Burt",
      "description": "A test chip for a simple CMOS beta multiplier current source.",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        1
      ],
      "repo": "https://github.com/rburt16/tt08-analog-bias-generator",
      "commit": "594296cd75b81ad9f36cda48739867b9ce4c86a7",
      "pinout": {
        "ui[0]": "disable 0",
        "ui[1]": "disable 1",
        "ui[2]": "disable 2",
        "ui[3]": "disable 3",
        "ui[4]": "disable 4",
        "ui[5]": "disable 5",
        "ui[6]": "disable 6",
        "ui[7]": "disable 7",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "disable 8",
        "uio[1]": "disable 9",
        "uio[2]": "disable 10",
        "uio[3]": "disable 11",
        "uio[4]": "disable 12",
        "uio[5]": "disable 13",
        "uio[6]": "disable 14",
        "uio[7]": "disable 15",
        "ua[0]": "i out",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_rebeccargb_hardware_utf8",
      "address": 901,
      "title": "Hardware UTF Encoder/Decoder",
      "author": "Rebecca G. Bettencourt",
      "description": "Converts Unicode code points between UTF-8, UTF-16, and UTF-32.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/hardware-utf8",
      "commit": "18d5793bb77dfba79794e0a83d0ae59432ace696",
      "pinout": {
        "ui[0]": "/ROUT",
        "ui[1]": "ERRS, /PROPS",
        "ui[2]": "CHK",
        "ui[3]": "CBE, /CLE",
        "ui[4]": "READ, /WRITE",
        "ui[5]": "/CIO",
        "ui[6]": "/UIO",
        "ui[7]": "/BIO",
        "uo[0]": "READY; NORMAL",
        "uo[1]": "RETRY; CONTROL",
        "uo[2]": "INVALID; SURROGATE",
        "uo[3]": "OVERLONG; HIGHCHAR",
        "uo[4]": "NONUNI; PRIVATE",
        "uo[5]": "ERROR; NONCHAR",
        "uo[6]": "UEOF",
        "uo[7]": "BEOF",
        "uio[0]": "I/O LSB",
        "uio[1]": "I/O",
        "uio[2]": "I/O",
        "uio[3]": "I/O",
        "uio[4]": "I/O",
        "uio[5]": "I/O",
        "uio[6]": "I/O",
        "uio[7]": "I/O MSB"
      }
    },
    {
      "macro": "tt_um_rebeccargb_intercal_alu",
      "address": 897,
      "title": "INTERCAL ALU",
      "author": "Rebecca G. Bettencourt",
      "description": "An ALU for the five operators of the INTERCAL programming language.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/intercal-alu",
      "commit": "247c3a758ce5ed3dc05300dcc9bbf5269777cd4b",
      "pinout": {
        "ui[0]": "A0 (address)",
        "ui[1]": "A1 (address)",
        "ui[2]": "S0 (selector)",
        "ui[3]": "S1 (selector)",
        "ui[4]": "S2 (selector)",
        "ui[5]": "S3 (selector)",
        "ui[6]": "/OE (output enable)",
        "ui[7]": "/WE (write enable)",
        "uo[0]": "D0",
        "uo[1]": "D1",
        "uo[2]": "D2",
        "uo[3]": "D3",
        "uo[4]": "D4",
        "uo[5]": "D5",
        "uo[6]": "D6",
        "uo[7]": "D7",
        "uio[0]": "D0",
        "uio[1]": "D1",
        "uio[2]": "D2",
        "uio[3]": "D3",
        "uio[4]": "D4",
        "uio[5]": "D5",
        "uio[6]": "D6",
        "uio[7]": "D7"
      }
    },
    {
      "macro": "tt_um_rebeccargb_styler",
      "address": 335,
      "title": "Styler",
      "author": "Rebecca G. Bettencourt",
      "description": "16x16 bitmap manipulation based on text mode attributes.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/styler",
      "commit": "220307c7d6da71a4b1fa86ca2636e2488fe726d7",
      "pinout": {
        "ui[0]": "A0 (address)",
        "ui[1]": "A1 (address)",
        "ui[2]": "A2 (address)",
        "ui[3]": "dim text phase",
        "ui[4]": "text blink phase",
        "ui[5]": "cursor blink phase",
        "ui[6]": "/OE (output enable)",
        "ui[7]": "/WE (write enable)",
        "uo[0]": "D0",
        "uo[1]": "D1",
        "uo[2]": "D2",
        "uo[3]": "D3",
        "uo[4]": "D4",
        "uo[5]": "D5",
        "uo[6]": "D6",
        "uo[7]": "D7",
        "uio[0]": "D0",
        "uio[1]": "D1",
        "uio[2]": "D2",
        "uio[3]": "D3",
        "uio[4]": "D4",
        "uio[5]": "D5",
        "uio[6]": "D6",
        "uio[7]": "D7"
      }
    },
    {
      "macro": "tt_um_rebeccargb_universal_decoder",
      "address": 905,
      "title": "Universal Binary to Segment Decoder",
      "author": "Rebecca G. Bettencourt",
      "description": "Decodes various binary codes to various segmented displays.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/ubcd",
      "commit": "d84feed75990ba265da3c1e19b5f2c143bc619bc",
      "pinout": {
        "ui[0]": "A; D0; A1; A",
        "ui[1]": "B; D1; B1; B",
        "ui[2]": "C; D2; C1; C",
        "ui[3]": "D; D3; D1; D",
        "ui[4]": "V0; D4; A2; E",
        "ui[5]": "V1; D5; B2; -",
        "ui[6]": "V2; D6; C2; /VBI",
        "ui[7]": "/RBI; LC; D2; /RBI",
        "uo[0]": "Segment a; U1; a",
        "uo[1]": "Segment b; U2; b",
        "uo[2]": "Segment c; V1; c",
        "uo[3]": "Segment d; V2; d",
        "uo[4]": "Segment e; W1; e",
        "uo[5]": "Segment f; W2; f",
        "uo[6]": "Segment g; X1; g",
        "uo[7]": "/RBO; /LTR; X2; /RBO",
        "uio[0]": "X6; X6; Y1; h",
        "uio[1]": "X7; X7; Y2; V",
        "uio[2]": "X9; X9; /LT1; -",
        "uio[3]": "/LT; FS; /LT2; /LT",
        "uio[4]": "/BI (blanking input)",
        "uio[5]": "/AL (active low)",
        "uio[6]": "M0 (mode select)",
        "uio[7]": "M1 (mode select)"
      }
    },
    {
      "macro": "tt_um_rejunity_vga_logo",
      "address": 911,
      "title": "VGA Tiny Logo (1 tile)",
      "author": "Renaldas Zioma",
      "description": "Large 480x480 pixels Tiny Tapeout logo with bling and dithered colors crammed into 1 tile!",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tt08-huge-480x480-tiny-tapeout-logo-in-1-tile",
      "commit": "db5615f0a8d3fd5ee738526bbc2e877fc608d1d2",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_rejunity_vga_test01",
      "address": 650,
      "title": "VGA Drop (audio/visual demo)",
      "author": "ReJ aka Renaldas Zioma, eriQue aka Erik Hemming, Matthias Kampa",
      "description": "Tiny 8 part Megademo! TBL^Nesnausk^SonikClique",
      "clock_hz": 25200000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tt08-vga-drop",
      "commit": "1b0ec59b7b894bde70c3c29beec77c16ede98361",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSYNC",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSYNC",
        "uio[0]": "Audio (PWM)",
        "uio[1]": "Audio (PWM)",
        "uio[2]": "Audio (PWM)",
        "uio[3]": "Audio (PWM)",
        "uio[4]": "Audio (PWM)",
        "uio[5]": "Audio (PWM)",
        "uio[6]": "Audio (PWM)",
        "uio[7]": "Audio (PWM)"
      }
    },
    {
      "macro": "tt_um_resfuzzy",
      "address": 270,
      "title": "resfuzzy",
      "author": "roshan",
      "description": "calculation",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ROSHAN0120/tt08-verilog-resfuzzy",
      "commit": "8f09e58f65c021f73005e12280ab0e5460616953",
      "pinout": {
        "ui[0]": "Input data from the sensors",
        "ui[1]": "Input data from the sensors",
        "ui[2]": "Input data from the sensors",
        "ui[3]": "Input data from the sensors",
        "ui[4]": "Input data from the sensors",
        "ui[5]": "Input data from the sensors",
        "ui[6]": "Input data from the sensors",
        "ui[7]": "Input data from the sensors",
        "uo[0]": "risk value",
        "uo[1]": "risk value",
        "uo[2]": "risk value",
        "uo[3]": "risk value",
        "uo[4]": "risk value",
        "uo[5]": "risk value",
        "uo[6]": "risk value",
        "uo[7]": "risk value",
        "uio[0]": "sensor select",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ring_divider",
      "address": 590,
      "title": "Divided Ring Oscillator",
      "author": "Ignatius Bezzam, Dhandeep Challagundla, Jarnail Sanghera, Russell Kim",
      "description": "Ring Oscillator",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/SmellyJelly01/tt08-ring-divider",
      "commit": "ee5a018e00580b4a63ddd9e0a92815fe117ec0da",
      "pinout": {
        "ui[0]": "tst_clk",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "final_out",
        "uo[1]": "osc_out",
        "uo[2]": "ena",
        "uo[3]": "clk",
        "uo[4]": "rst_n",
        "uo[5]": "n2_buf",
        "uo[6]": "n4_buf",
        "uo[7]": "",
        "uio[0]": "n1",
        "uio[1]": "n3",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_rom_test",
      "address": 457,
      "title": "TT08 SKY130 ROM 'YOLO' Test",
      "author": "Sylvain Munaut",
      "description": "Quick and dirty test of some parts of a SKY130 ROM compiler",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/smunaut/tt08-rom-test",
      "commit": "c3d09035761000a60c548ab4dd26c774676b83c9",
      "pinout": {
        "ui[0]": "wl[0]",
        "ui[1]": "wl[1]",
        "ui[2]": "wl[2]",
        "ui[3]": "wl[3]",
        "ui[4]": "wl[4]",
        "ui[5]": "wl[5]",
        "ui[6]": "wl[6]",
        "ui[7]": "wl[7]",
        "uo[0]": "rom_out[0]",
        "uo[1]": "rom_out[1]",
        "uo[2]": "rom_out[2]",
        "uo[3]": "rom_out[3]",
        "uo[4]": "rom_out[4]",
        "uo[5]": "rom_out[5]",
        "uo[6]": "rom_out[6]",
        "uo[7]": "rom_out[7]",
        "uio[0]": "bl0_ena",
        "uio[1]": "bl1_ena",
        "uio[2]": "bl_mux_n[0]",
        "uio[3]": "bl_mux_p[0]",
        "uio[4]": "bl_mux_n[1]",
        "uio[5]": "bl_mux_p[1]",
        "uio[6]": "pullup_n",
        "uio[7]": "prechg_n",
        "ua[0]": "",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_roy1707018",
      "address": 712,
      "title": "RO",
      "author": "Arna Roy",
      "description": "Implementation of simple RO",
      "clock_hz": 20000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Secure-Embedded-Systems/tt08-trng",
      "commit": "e51a231cd8bff95ce4d9bda1aa411a105c7f0403",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_samuelm_pwm_generator",
      "address": 262,
      "title": "PWM generator",
      "author": "Matea Samuel",
      "description": "Generate pwm signal with configurable period - 12-bit - and duty cycle - 1%-99%.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MateaSamuel/tt08-pwm-generator",
      "commit": "731fb9162500ee5c35bdf9be478586b346df94ef",
      "pinout": {
        "ui[0]": "in[0]",
        "ui[1]": "in[1]",
        "ui[2]": "in[2]",
        "ui[3]": "in[3]",
        "ui[4]": "in[4]",
        "ui[5]": "in[5]",
        "ui[6]": "in[6]",
        "ui[7]": "in[7]",
        "uo[0]": "pwm_out",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "in[8]",
        "uio[1]": "in[9]",
        "uio[2]": "in[10]",
        "uio[3]": "in[11]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "sel",
        "uio[7]": "wr_en"
      }
    },
    {
      "macro": "tt_um_shiftreg_test",
      "address": 460,
      "title": "TT08 SKY130 Shift Register 'YOLO' Test",
      "author": "Sylvain Munaut",
      "description": "Quick and dirty test of a custom high density shift register",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/smunaut/tt08-shiftreg-test",
      "commit": "8ce29663a436b60d6197cda12f9218f121b158fb",
      "pinout": {
        "ui[0]": "sr_in[0]",
        "ui[1]": "sr_in[1]",
        "ui[2]": "sr_in[2]",
        "ui[3]": "sr_in[3]",
        "ui[4]": "sr_in[4]",
        "ui[5]": "sr_in[5]",
        "ui[6]": "sr_in[6]",
        "ui[7]": "sr_in[7]",
        "uo[0]": "sr_out[0]",
        "uo[1]": "sr_out[1]",
        "uo[2]": "sr_out[2]",
        "uo[3]": "sr_out[3]",
        "uo[4]": "sr_out[4]",
        "uo[5]": "sr_out[5]",
        "uo[6]": "sr_out[6]",
        "uo[7]": "sr_out[7]",
        "uio[0]": "clk_ph0",
        "uio[1]": "clk_ph1",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_shuangyu_top",
      "address": 969,
      "title": "Calculator",
      "author": "JING Shuangyu",
      "description": "A calculator do basic calculation",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Cooooobra/tt08_calculator",
      "commit": "77e5f3dfcf5a672a106639376c775d1660b2e903",
      "pinout": {
        "ui[0]": "ROW_1",
        "ui[1]": "ROW_2",
        "ui[2]": "ROW_3",
        "ui[3]": "ROW_4",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "sseg_A",
        "uo[1]": "sseg_B",
        "uo[2]": "sseg_C",
        "uo[3]": "sseg_D",
        "uo[4]": "sseg_E",
        "uo[5]": "sseg_F",
        "uo[6]": "sseg_G",
        "uo[7]": "sseg_dp",
        "uio[0]": "0",
        "uio[1]": "E_1",
        "uio[2]": "E_2",
        "uio[3]": "E_3",
        "uio[4]": "COL_1",
        "uio[5]": "COL_2",
        "uio[6]": "COL_3",
        "uio[7]": "COL_4"
      }
    },
    {
      "macro": "tt_um_sign_addsub",
      "address": 714,
      "title": "CMOS design of 4-bit Signed Adder Subtractor",
      "author": "Vivek Chiranjit",
      "description": "The project is a signed binary 4-bit adder-subtractor module.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ChiranjitPatel/tt08_SignedAddSub_HDL",
      "commit": "f2174054d3ee7b97bb7075c8d1027794b842d70e",
      "pinout": {
        "ui[0]": "a0",
        "ui[1]": "a1",
        "ui[2]": "a2",
        "ui[3]": "a3",
        "ui[4]": "b0",
        "ui[5]": "b1",
        "ui[6]": "b2",
        "ui[7]": "b3",
        "uo[0]": "s0",
        "uo[1]": "s1",
        "uo[2]": "s2",
        "uo[3]": "s3",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "sign0",
        "uio[1]": "sign1",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_silice",
      "address": 648,
      "title": "Warp",
      "author": "sylefeb",
      "description": "Demo on TinyTapeout? Let's do something!",
      "clock_hz": 25000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/sylefeb/tt08-compo-entry",
      "commit": "c1187b0f7dc537ed51bdbb4230c7fa11bd08248d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VS",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HS",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Audio"
      }
    },
    {
      "macro": "tt_um_simon_cipher",
      "address": 585,
      "title": "simon_cipher",
      "author": "Simon Cipher",
      "description": "Bitserial implementation of Simon-128",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Secure-Embedded-Systems/tt08-simon",
      "commit": "a664d54750680b69a53c0eea2a295cdffefa8985",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ssp_opamp",
      "address": 494,
      "title": "2-stage Opamp Designs",
      "author": "Vipul Sharma",
      "description": "This project contain opamp circuits designed by participants under SSP training program",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        5,
        0,
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/engrvip123/tt08-ssp-opamp",
      "commit": "0533fbe55fc4e0a0f63e57e173efdec342173e27",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "Vout_POR",
        "ua[1]": "Va_POR",
        "ua[2]": "OUT_Maj",
        "ua[3]": "OUT_Amr",
        "ua[4]": "INN",
        "ua[5]": "INP"
      }
    },
    {
      "macro": "tt_um_stochastic_addmultiply_CL123abc",
      "address": 836,
      "title": "Stochastic Multiplier, Adder and Self-Multiplier",
      "author": "Ciecen Lestari, Chih-Kuan Ho, David Parent",
      "description": "Multiplier, Adder and Self-Multiplier using stochastic computing",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/CL-123-abc/tt_um_stochastic_addmultiply_CL123abc",
      "commit": "dfdcbcaa7487be93ac28cda393b6c3771dcd7e22",
      "pinout": {
        "ui[0]": "serial_input_1",
        "ui[1]": "serial_input_2",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "serial_output_mul",
        "uo[1]": "serial_output_add",
        "uo[2]": "serial_output_smul",
        "uo[3]": "clk_counter_reset",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_sudana_ota5t_1",
      "address": 522,
      "title": "5-T OTA",
      "author": "S Mishra",
      "description": "A simple 5-Transistor operational amplifier with external bias current",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        10,
        7,
        9,
        8
      ],
      "repo": "https://github.com/Sud-ana/TT08",
      "commit": "8a1efbc438b3a20b7aa6d3dffc5cac0b3932040d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "DIFFOUT",
        "ua[1]": "BIAS",
        "ua[2]": "MINUS",
        "ua[3]": "PLUS",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_supermic_arghunter",
      "address": 910,
      "title": "Supermic ",
      "author": "Armaan Gomes, Asmi Sawant, Ria Saheta, Vikhaash Kanagavel Chithra, Morgan Packard, Sanjay Ravishankar",
      "description": "A 8 channel customizable beamforming signal processor",
      "clock_hz": 0,
      "tiles": "8x2",
      "analog_pins": [],
      "repo": "https://github.com/arghunter/Supermic-tt08",
      "commit": "2382b04870a83d488a717366cebb333c5c96c206",
      "pinout": {
        "ui[0]": "Bit Clock (3.072 Mhz)",
        "ui[1]": "LR Clock (48Khz)",
        "ui[2]": "PDM Input Mics 0,1",
        "ui[3]": "PDM Input Mics 2,3",
        "ui[4]": "PDM Input Mics 4,5",
        "ui[5]": "PDM Input Mics 6,7",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "PCM Out Mic 0",
        "uo[1]": "PCM Out Mic 1",
        "uo[2]": "PCM Out Mic 2",
        "uo[3]": "PCM Out Mic 3",
        "uo[4]": "PCM Out Mic 4",
        "uo[5]": "PCM Out Mic 5",
        "uo[6]": "PCM Out Mic 6",
        "uo[7]": "PCM Out Mic 7",
        "uio[0]": "Delay Select 0",
        "uio[1]": "Delay Select 1",
        "uio[2]": "Delay Select 2",
        "uio[3]": "Delay Select 3",
        "uio[4]": "Delay Select 4",
        "uio[5]": "Beamformed PCM Output",
        "uio[6]": "Mic Clock",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_thexeno_rgbw_controller",
      "address": 834,
      "title": "RGBW Color Processor",
      "author": "Enrico Sanino",
      "description": "Color processor for RGBW LEDs, with generation of hue, tint and intensity based on a color index. Is also a direct SPI to 4 channels PWM converter.",
      "clock_hz": 66000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/thexeno/tt08-rgbw-controller",
      "commit": "88398e21373a5c0841b546c785e66b76fc3a3ade",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "test_pin",
        "ui[4]": "cs_n",
        "ui[5]": "sck",
        "ui[6]": "mosi",
        "ui[7]": "clk_div_en",
        "uo[0]": "red_pwm",
        "uo[1]": "green_pwm",
        "uo[2]": "blue_pwm",
        "uo[3]": "white_pwm",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "test_out_0",
        "uio[1]": "test_out_1",
        "uio[2]": "test_out_2",
        "uio[3]": "test_out_3",
        "uio[4]": "test_out_4",
        "uio[5]": "test_out_5",
        "uio[6]": "test_out_6",
        "uio[7]": "test_out_7"
      }
    },
    {
      "macro": "tt_um_tiny_pll",
      "address": 584,
      "title": "Tiny PLL",
      "author": "LegumeEmittingDiode",
      "description": "4-channel fractional-N frequency synthesizer",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/LegumeEmittingDiode/tt08-tiny-pll",
      "commit": "4573498cb950a822a349df2151e76a6d1c5ddb44",
      "pinout": {
        "ui[0]": "csr_data_in[0]: Data input for PLL control registers",
        "ui[1]": "csr_data_in[1]: Data input for PLL control registers",
        "ui[2]": "csr_data_in[2]: Data input for PLL control registers",
        "ui[3]": "csr_data_in[3]: Data input for PLL control registers",
        "ui[4]": "csr_addr_in[0]: Address input for PLL control registers",
        "ui[5]": "csr_addr_in[1]: Address input for PLL control registers",
        "ui[6]": "csr_addr_in[2]: Address input for PLL control registers",
        "ui[7]": "csr_addr_in[3]: Address input for PLL control registers",
        "uo[0]": "clk_out[0]: Channel 0 PLL clock output",
        "uo[1]": "clk_out[1]: Channel 1 PLL clock output",
        "uo[2]": "clk_out[2]: Channel 2 PLL clock output",
        "uo[3]": "clk_out[3]: Channel 3 PLL clock output",
        "uo[4]": "adc_out: Channel 0 control voltage ADC output",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "clk_csr: Clock input for PLL control registers",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tinytapeout_logo_screensaver",
      "address": 716,
      "title": "VGA Screensaver with Tiny Tapeout Logo",
      "author": "Uri Shaked",
      "description": "Tiny Tapeout Logo bouncing around the screen (640x480, TinyVGA Pmod)",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt08-logo-screensaver",
      "commit": "d4bb3d3c16c38f3dd1a69381eb3a7989bd8637cb",
      "pinout": {
        "ui[0]": "tile",
        "ui[1]": "solid_color",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tmkong_rgb_mixer",
      "address": 135,
      "title": "RGB Mixer",
      "author": "Tianmin (Kevin) Kong",
      "description": "First ASIC Project!",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ktm0228/tt08-rgb-mixer",
      "commit": "236c6ff22b646225b3ad9cb77082642bcc4ee34f",
      "pinout": {
        "ui[0]": "enc0 a",
        "ui[1]": "enc0 b",
        "ui[2]": "enc1 a",
        "ui[3]": "enc1 b",
        "ui[4]": "enc2 a",
        "ui[5]": "enc2 b",
        "ui[6]": "debug bit 0",
        "ui[7]": "debug bit 1",
        "uo[0]": "pwm0",
        "uo[1]": "pwm1",
        "uo[2]": "pwm2",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "encoder bit 0",
        "uio[1]": "encoder bit 1",
        "uio[2]": "encoder bit 2",
        "uio[3]": "encoder bit 3",
        "uio[4]": "encoder bit 4",
        "uio[5]": "encoder bit 5",
        "uio[6]": "encoder bit 6",
        "uio[7]": "encoder bit 7"
      }
    },
    {
      "macro": "tt_um_tnt_diff_rx",
      "address": 239,
      "title": "TT08 Differential Receiver test",
      "author": "Sylvain Munaut",
      "description": "Small test module to test functionality of a differential input receiver",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        5,
        0,
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/smunaut/tt08-diff-rx",
      "commit": "e44d7c07228aedf6fead31e6d3a5c75d73419f60",
      "pinout": {
        "ui[0]": "debug",
        "ui[1]": "bias_sel",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "q[0]",
        "uo[1]": "q[1]",
        "uo[2]": "q[2]",
        "uo[3]": "q[3]",
        "uo[4]": "q[4]",
        "uo[5]": "q[5]",
        "uo[6]": "q[6]",
        "uo[7]": "q[7]",
        "uio[0]": "q[8]",
        "uio[1]": "q[9]",
        "uio[2]": "q[10]",
        "uio[3]": "q[11]",
        "uio[4]": "q[12]",
        "uio[5]": "q[13]",
        "uio[6]": "q[14]",
        "uio[7]": "q[15]",
        "ua[0]": "clk_n",
        "ua[1]": "clk_p",
        "ua[2]": "data_n",
        "ua[3]": "data_p",
        "ua[4]": "ibias",
        "ua[5]": "out"
      }
    },
    {
      "macro": "tt_um_toivoh_demo",
      "address": 770,
      "title": "Sequential Shadows [TT08 demo competition]",
      "author": "Toivo Henningsson",
      "description": "My contribution to the TT08 demo competition",
      "clock_hz": 50400000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/toivoh/tt08-demo",
      "commit": "bb6f67edee4f88f8e32c353aa6c68f921b2e7f77",
      "pinout": {
        "ui[0]": "v_bass_off",
        "ui[1]": "v_drums_off",
        "ui[2]": "v_bass_low",
        "ui[3]": "pause",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "step_frame",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "vsync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "audio_out"
      }
    },
    {
      "macro": "tt_um_toivoh_demo_deluxe",
      "address": 782,
      "title": "Sequential Shadows Deluxe [TT08 demo competition]",
      "author": "Toivo Henningsson",
      "description": "My contribution to the TT08 demo competition, extended version",
      "clock_hz": 50400000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/toivoh/tt08-demo-deluxe",
      "commit": "256dd86d49e56902b1c672e7f793a2a739e69ff5",
      "pinout": {
        "ui[0]": "v_bass_off",
        "ui[1]": "v_drums_off",
        "ui[2]": "v_bass_low",
        "ui[3]": "pause",
        "ui[4]": "rgb444_mode",
        "ui[5]": "pmod_vga_pinout",
        "ui[6]": "logo_shadow_off",
        "ui[7]": "step_frame",
        "uo[0]": "t_R1 / p_R0",
        "uo[1]": "t_G1 / p_R1",
        "uo[2]": "t_B1 / p_R2",
        "uo[3]": "t_vsync / p_R3",
        "uo[4]": "t_R0 / p_B0",
        "uo[5]": "t_G0 / p_B1",
        "uo[6]": "t_B0 / p_B2",
        "uo[7]": "t_hsync / p_B3",
        "uio[0]": "p_G0",
        "uio[1]": "p_G1",
        "uio[2]": "p_G2",
        "uio[3]": "p_G3",
        "uio[4]": "p_hsync",
        "uio[5]": "p_vsync",
        "uio[6]": "audio_out_n",
        "uio[7]": "audio_out"
      }
    },
    {
      "macro": "tt_um_tommythorn_maxbw",
      "address": 909,
      "title": "Asynchronous Multiplier",
      "author": "Tommy Thorn",
      "description": "An asynchronous multiplier",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tommythorn/tt08-maxbw",
      "commit": "1b9c1cd1bf449c20ed3a14937e97e5a5fcb23990",
      "pinout": {
        "ui[0]": "ack",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "req",
        "uo[1]": "result_0",
        "uo[2]": "result_1",
        "uo[3]": "result_2",
        "uo[4]": "result_3",
        "uo[5]": "result_4",
        "uo[6]": "result_5",
        "uo[7]": "result_6",
        "uio[0]": "result_7",
        "uio[1]": "result_8",
        "uio[2]": "result_9",
        "uio[3]": "result_10",
        "uio[4]": "result_11",
        "uio[5]": "result_12",
        "uio[6]": "result_13",
        "uio[7]": "result_14"
      }
    },
    {
      "macro": "tt_um_top",
      "address": 324,
      "title": "Flame demo",
      "author": "Konrad Beckmann & Linus M\u00e5rtensson",
      "description": "Flame demo",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/kbeckmann/tt08-flame",
      "commit": "aad26d0e271c3a95495de35f3ea3c436debabba1",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "ui_out[0]",
        "uo[1]": "ui_out[1]",
        "uo[2]": "ui_out[2]",
        "uo[3]": "ui_out[3]",
        "uo[4]": "ui_out[4]",
        "uo[5]": "ui_out[5]",
        "uo[6]": "ui_out[6]",
        "uo[7]": "ui_out[7]",
        "uio[0]": "uio_out[0]",
        "uio[1]": "uio_out[1]",
        "uio[2]": "uio_out[2]",
        "uio[3]": "uio_out[3]",
        "uio[4]": "uio_out[4]",
        "uio[5]": "uio_out[5]",
        "uio[6]": "uio_out[6]",
        "uio[7]": "uio_out[7]"
      }
    },
    {
      "macro": "tt_um_tt08_aicd_playground",
      "address": 235,
      "title": "AICD Playground",
      "author": "Leo Moser",
      "description": "A mixed-signal test project for the analog IC design course at Graz University of Technology.",
      "clock_hz": 1000000,
      "tiles": "2x2",
      "analog_pins": [
        0,
        5
      ],
      "repo": "https://github.com/mole99/tt08-aicd-playground",
      "commit": "cbb504b0cf5c70f5d7de4b8ee6cea4e7b8decc74",
      "pinout": {
        "ui[0]": "port_i[0]",
        "ui[1]": "port_i[1]",
        "ui[2]": "port_i[2]",
        "ui[3]": "port_i[3]",
        "ui[4]": "port_i[4]",
        "ui[5]": "port_i[5]",
        "ui[6]": "port_i[6]",
        "ui[7]": "port_i[7]",
        "uo[0]": "port_o[0]",
        "uo[1]": "port_o[1]",
        "uo[2]": "port_o[2]",
        "uo[3]": "port_o[3]",
        "uo[4]": "port_o[4]",
        "uo[5]": "port_o[5]",
        "uo[6]": "port_o[6]",
        "uo[7]": "port_o[7]",
        "uio[0]": "CS",
        "uio[1]": "MOSI",
        "uio[2]": "MISO",
        "uio[3]": "SCK",
        "uio[4]": "mode",
        "uio[5]": "debug_i",
        "uio[6]": "debug_o[0]",
        "uio[7]": "debug_o[1]",
        "ua[0]": "adc_in",
        "ua[1]": "dac_out",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_tt08_wirecube",
      "address": 832,
      "title": "Wirecube",
      "author": "Leo Moser",
      "description": "A demo for the Tiny Tapeout demoscene competition - see for yourself!",
      "clock_hz": 50350000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/mole99/tt08-wirecube",
      "commit": "857547a5af159221cbcc65d4112059c2d1a9b37e",
      "pinout": {
        "ui[0]": "toggle background bit 0",
        "ui[1]": "toggle background bit 1",
        "ui[2]": "toggle background bit 2",
        "ui[3]": "toggle cube bit 0",
        "ui[4]": "toggle cube bit 1",
        "ui[5]": "toggle cube bit 2",
        "ui[6]": "toggle speed bit 0",
        "ui[7]": "toggle speed bit 1",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VS",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HS",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_urish_charge_pump",
      "address": 269,
      "title": "Dickson Charge Pump",
      "author": "Uri Shaked",
      "description": "Pumps the input voltage up to ~3.65V",
      "clock_hz": 2000000,
      "tiles": "1x2",
      "analog_pins": [
        8
      ],
      "repo": "https://github.com/urish/tt08-charge-pump",
      "commit": "9ba6858e8dbf4cc5459ef19f4bcad13e5594e46d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "vout_div",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_urish_simon",
      "address": 907,
      "title": "Simon Says memory game",
      "author": "Uri Shaked",
      "description": "Repeat the sequence of colors and sounds to win the game",
      "clock_hz": 50000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt08-simon-game",
      "commit": "be0087f2e506370da743b6c06f9c73aa826dee8c",
      "pinout": {
        "ui[0]": "btn1",
        "ui[1]": "btn2",
        "ui[2]": "btn3",
        "ui[3]": "btn4",
        "ui[4]": "seginv",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "led1",
        "uo[1]": "led2",
        "uo[2]": "led3",
        "uo[3]": "led4",
        "uo[4]": "speaker",
        "uo[5]": "dig1",
        "uo[6]": "dig2",
        "uo[7]": "",
        "uio[0]": "seg_a",
        "uio[1]": "seg_b",
        "uio[2]": "seg_c",
        "uio[3]": "seg_d",
        "uio[4]": "seg_e",
        "uio[5]": "seg_f",
        "uio[6]": "seg_g",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_vga_cbtest",
      "address": 330,
      "title": "Generate VGA output for Color Blindness Test",
      "author": "[Krushnasis Pradhan](https://www.linkedin.com/in/krushnasis-pradhan-35881518b/), [Aniruddha Ranade](https://www.linkedin.com/in/aniruddha-ranade/)",
      "description": "Generate VGA output which shall display the pattern similar to Ishihara Plates",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/AniruddhaRanade/TT08_VGA_CBTest",
      "commit": "7e9549940b329fa9876a7e44343c0ca4a804f869",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_vga_clock",
      "address": 260,
      "title": "VGA clock",
      "author": "Matt Venn",
      "description": "Shows the time on a VGA screen",
      "clock_hz": 31500000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/tt08-vga-clock",
      "commit": "d620c55c19e546b52feb9d8bd9951dffc19d2690",
      "pinout": {
        "ui[0]": "adjust hours",
        "ui[1]": "adjust minutes",
        "ui[2]": "adjust seconds",
        "ui[3]": "PMOD type select",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "hsync / R1",
        "uo[1]": "vsync / G1",
        "uo[2]": "B0 / B1",
        "uo[3]": "B1 / VS",
        "uo[4]": "G0 / R0",
        "uo[5]": "G1 / G0",
        "uo[6]": "R0 / B0",
        "uo[7]": "R1 / HS",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_vga_glyph_mode",
      "address": 975,
      "title": "Glyph Mode",
      "author": "James Ross",
      "description": "Submission for VGA Demoscene",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jar/tt08_vga_glyph_mode",
      "commit": "a0aac243a05f7eaea7c9b833bb8f79a568b8875f",
      "pinout": {
        "ui[0]": "Palette 0",
        "ui[1]": "Palette 1",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wakki_0123_Raw_Transistors",
      "address": 237,
      "title": "Raw_Transistors",
      "author": "Isshu Wakita",
      "description": "Performance evaluation of Raw_Transistors",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        0,
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/wakki-0123/Raw_Transistors",
      "commit": "db80a904ae109405c4cd8a4012e3364004dc8adf",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "source",
        "ua[1]": "gate1",
        "ua[2]": "gate2",
        "ua[3]": "gate3",
        "ua[4]": "drain",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_whynot",
      "address": 139,
      "title": "Why not?",
      "author": "sylefeb",
      "description": "One tile something",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/sylefeb/tt08-fun",
      "commit": "1fa1d5e1052f74c6e4a81b58ed9260529608e1fa",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VS",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HS",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Audio (output)"
      }
    },
    {
      "macro": "tt_um_wokwi_407306064811090945",
      "address": 971,
      "title": "DDR throughput and flop aperature test",
      "author": "Eric Smith",
      "description": "Grab data on every edge of clock with varying pos pulse width",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ericsmi/tt08-ddr-throughput-test",
      "commit": "11ff0f101c878350a1e48ff97d9597847228abe2",
      "pinout": {
        "ui[0]": "pulse = 1 inv",
        "ui[1]": "pulse = 3 inv",
        "ui[2]": "pulse = 5 inv",
        "ui[3]": "pulse = 7 inv",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "q for pulse = 1 inv",
        "uo[1]": "q for pulse = 3 inv ",
        "uo[2]": "q for pulse = 5 inv",
        "uo[3]": "q for pulse = 7 inv",
        "uo[4]": "q for normal flop",
        "uo[5]": "1",
        "uo[6]": "1",
        "uo[7]": "clk",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_407760296956596225",
      "address": 453,
      "title": "tt08-octal-alu",
      "author": "Theo Kachelski",
      "description": "Executes binary operations on two octal numbers encoded in an 8-bit instruction and outputs the result to the 7-segment display.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Tkachel101/tt08-wokwi-3bit",
      "commit": "0e9c663d7d802153eb2ce5d22ae74a6cc52b010f",
      "pinout": {
        "ui[0]": "Operation bit 1",
        "ui[1]": "Operation bit 2",
        "ui[2]": "Operand A bit 1 (MSB)",
        "ui[3]": "Operand A bit 2",
        "ui[4]": "Operand A bit 3 (LSB)",
        "ui[5]": "Operand B bit 1 (MSB)",
        "ui[6]": "Operand B bit 2",
        "ui[7]": "Operand B bit 3 (LSB)",
        "uo[0]": "Segment A",
        "uo[1]": "Segment B",
        "uo[2]": "Segment C",
        "uo[3]": "Segment D",
        "uo[4]": "Segment E",
        "uo[5]": "Segment F",
        "uo[6]": "Segment G",
        "uo[7]": "Segment DP",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_407852791999030273",
      "address": 576,
      "title": "Simple 8 Bit ALU",
      "author": "Joseph Johnson",
      "description": "a very simple ALU",
      "clock_hz": 1000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jwjbadger/tt08-8bit-alu",
      "commit": "167bf26475dbaa0c1f7fdee987090b97e674e035",
      "pinout": {
        "ui[0]": "SI",
        "ui[1]": "ESO",
        "ui[2]": "DIRA",
        "ui[3]": "DIRB",
        "ui[4]": "EAO",
        "ui[5]": "LA",
        "ui[6]": "LB",
        "ui[7]": "AS",
        "uo[0]": "OUT0",
        "uo[1]": "OUT1",
        "uo[2]": "OUT2",
        "uo[3]": "OUT3",
        "uo[4]": "OUT4",
        "uo[5]": "OUT5",
        "uo[6]": "OUT6",
        "uo[7]": "OUT7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_408118380088342529",
      "address": 458,
      "title": "Traffic-light-sequence",
      "author": "Shaurya Sharma",
      "description": "A simple traffic light sequence",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ClutchBore/tt08-traffic-light-sequence",
      "commit": "219e111310b621451c808560ea5d7e2b46b26e37",
      "pinout": {
        "ui[0]": "Input 1",
        "ui[1]": "Input 2",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Out 1",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "Out 2",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "Out 3",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_408216451206371329",
      "address": 325,
      "title": "Logic Test",
      "author": "Eric Ulteig",
      "description": "Verify",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Beird0/TT08_Memory",
      "commit": "8eb7c5b0d8298f8e5d63c05a7cec5b8596b90472",
      "pinout": {
        "ui[0]": "In 0",
        "ui[1]": "In 1",
        "ui[2]": "In 2",
        "ui[3]": "In 3",
        "ui[4]": "In 4",
        "ui[5]": "In 5",
        "ui[6]": "In 6",
        "ui[7]": "In 7",
        "uo[0]": "Out 0",
        "uo[1]": "Out 1",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_408231820749720577",
      "address": 331,
      "title": "Abacus Lock",
      "author": "Raunak Singh",
      "description": "digital lock that turns the servo on a specific sequence of switches and displays current combination entered on a LED bar",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Raunak-Singh-Inventor/abacus_lock",
      "commit": "f08e79a038a1fdb841cfcaab52063462314260c9",
      "pinout": {
        "ui[0]": "IN1",
        "ui[1]": "IN2",
        "ui[2]": "IN3",
        "ui[3]": "IN4",
        "ui[4]": "IN5",
        "ui[5]": "IN6",
        "ui[6]": "IN7",
        "ui[7]": "IN8",
        "uo[0]": "OUT1",
        "uo[1]": "OUT2",
        "uo[2]": "OUT3",
        "uo[3]": "OUT4",
        "uo[4]": "OUT5",
        "uo[5]": "OUT6",
        "uo[6]": "OUT7",
        "uo[7]": "OUT8",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_408237988946759681",
      "address": 137,
      "title": "Counter",
      "author": "Jasmin Mittelman",
      "description": "Counts till 99 when button is pressed and shows light depending if counter is even or odd.",
      "clock_hz": 50000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jasmin1659/tt08-wokwi-jasmin",
      "commit": "1f1a1fa30b175b8c6a77569ef6f124131419725a",
      "pinout": {
        "ui[0]": "CLK",
        "ui[1]": "RST",
        "ui[2]": "BTN0",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "LED0",
        "uo[1]": "LED1",
        "uo[2]": "SEG_A",
        "uo[3]": "SEG_B",
        "uo[4]": "SEG_C",
        "uo[5]": "SEG_D",
        "uo[6]": "SEG_E",
        "uo[7]": "SEG_F",
        "uio[0]": "SEG_G",
        "uio[1]": "DIG1",
        "uio[2]": "DIG2",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_yuri_panchul_adder_with_flow_control",
      "address": 461,
      "title": "Adder with Flow Control",
      "author": "Yuri Panchul",
      "description": "An adder with a separate flow control for each argument and the result",
      "clock_hz": 3,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/yuri-panchul/tt08-adder-with-flow-control",
      "commit": "896f7f9fc2ab6bfc240afed0df5426ed43638858",
      "pinout": {
        "ui[0]": "a_vld",
        "ui[1]": "b_vld",
        "ui[2]": "sum_rdy",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "a_rdy",
        "uo[1]": "b_rdy",
        "uo[2]": "sum_vld",
        "uo[3]": "sum_data[0]",
        "uo[4]": "sum_data[1]",
        "uo[5]": "sum_data[2]",
        "uo[6]": "sum_data[3]",
        "uo[7]": "sum_data[4]",
        "uio[0]": "a_data[0]",
        "uio[1]": "a_data[1]",
        "uio[2]": "a_data[2]",
        "uio[3]": "a_data[3]",
        "uio[4]": "b_data[0]",
        "uio[5]": "b_data[1]",
        "uio[6]": "b_data[2]",
        "uio[7]": "b_data[3]"
      }
    },
    {
      "macro": "tt_um_yuri_panchul_schoolriscv_cpu_with_fibonacci_program",
      "address": 842,
      "title": "schoolRISCV CPU with Fibonacci program",
      "author": "Stanislav Zhelnio, Alexander Romanov, Yuri Panchul and Mike Kuskov",
      "description": "A minimalistic SoC with a schoolRISCV educational CPU and a ROM memory with a program that computes the Fibonacci numbers.",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/ddvca/tt08-schoolriscv-cpu-with-fibonacci-program",
      "commit": "49db03c9ae7d1715a3798fcf6bdd3a83d7bf1eb6",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Test pass",
        "uo[1]": "Test fail",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "CPU reg a0[0]",
        "uio[1]": "a0[1]",
        "uio[2]": "a0[2]",
        "uio[3]": "a0[3]",
        "uio[4]": "Program Counter pc[0]",
        "uio[5]": "pc[1]",
        "uio[6]": "pc[2]",
        "uio[7]": "pc[3]"
      }
    },
    {
      "macro": "tt_um_yuri_panchul_sea_battle_vga_game",
      "address": 654,
      "title": "Sea Battle",
      "author": "Yuri Panchul",
      "description": "Sea Battle is a VGA game with sprites for the Tiny Tapeout Demoscene competition.",
      "clock_hz": 23000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/yuri-panchul/tt08-sea-battle-vga-game",
      "commit": "220bfeeb51e2972c40e2887761fe0ed321afcc40",
      "pinout": {
        "ui[0]": "Key right",
        "ui[1]": "Key left",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "VGA red [1]",
        "uo[1]": "VGA green [1]",
        "uo[2]": "VGA blue [1]",
        "uo[3]": "VGA vsync",
        "uo[4]": "VGA red [0]",
        "uo[5]": "VGA green [0]",
        "uo[6]": "VGA blue [0]",
        "uo[7]": "VGA hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_z2a_rgb_mixer",
      "address": 258,
      "title": "RGB Mixer demo",
      "author": "Matt Venn",
      "description": "Zero to ASIC demo project",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/tt08-rgb-mixer",
      "commit": "3ead7ef61ae8a22138e3b37f86e1ce758b6d2da0",
      "pinout": {
        "ui[0]": "enc0 a",
        "ui[1]": "enc0 b",
        "ui[2]": "enc1 a",
        "ui[3]": "enc1 b",
        "ui[4]": "enc2 a",
        "ui[5]": "enc2 b",
        "ui[6]": "debug bit 0",
        "ui[7]": "debug bit 1",
        "uo[0]": "pwm0",
        "uo[1]": "pwm1",
        "uo[2]": "pwm2",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "encoder bit 0",
        "uio[1]": "encoder bit 1",
        "uio[2]": "encoder bit 2",
        "uio[3]": "encoder bit 3",
        "uio[4]": "encoder bit 4",
        "uio[5]": "encoder bit 5",
        "uio[6]": "encoder bit 6",
        "uio[7]": "encoder bit 7"
      }
    },
    {
      "macro": "tt_um_zec_square1",
      "address": 778,
      "title": "\"SQUARE-1\": VGA/audio demo",
      "author": "Zachary Catlin",
      "description": "On video: munching squares. On audio: the logistic map.",
      "clock_hz": 25200000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/zec/tt08-square1",
      "commit": "3ffb0b92796285a12e370371a42e1e0024848e83",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSYNC",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSYNC",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "PWM audio out"
      }
    },
    {
      "macro": "tt_um_zoom_zoom",
      "address": 966,
      "title": "Zoom Zoom",
      "author": "Justin T, Andrew H, Simon Y, Kellen Y, Vallabh A, Nicole C",
      "description": "Custom Cpu with custome external memory bus and sha-3 and CORDIC accelerators",
      "clock_hz": 60000000,
      "tiles": "4x2",
      "analog_pins": [],
      "repo": "https://github.com/ringedSquid/BWSI-ASICS-24-Zoom-Zoom",
      "commit": "0e5654aa1e428432a9c5e632ddcdbe02aa33bd21",
      "pinout": {
        "ui[0]": "lower_byte_in",
        "ui[1]": "upper_byte_in",
        "ui[2]": "rx",
        "ui[3]": "IN3",
        "ui[4]": "IN4",
        "ui[5]": "IN5",
        "ui[6]": "IN6",
        "ui[7]": "IN7",
        "uo[0]": "write_enable",
        "uo[1]": "register_enable",
        "uo[2]": "read_enable",
        "uo[3]": "lower_bit",
        "uo[4]": "tx",
        "uo[5]": "upper_bit",
        "uo[6]": "OUT6",
        "uo[7]": "OUT7",
        "uio[0]": "DATA0",
        "uio[1]": "DATA1",
        "uio[2]": "DATA2",
        "uio[3]": "DATA3",
        "uio[4]": "DATA4",
        "uio[5]": "DATA5",
        "uio[6]": "DATA6",
        "uio[7]": "DATA7"
      }
    }
  ]
}