{
  "version": 3,
  "id": "tt06",
  "name": "Tiny Tapeout 6",
  "repo": "https://github.com/TinyTapeout/tinytapeout-06",
  "commit": "5df63293851dbf867a832a683cd85c639d8d9391",
  "updated": "2024-12-18T14:07:31Z",
  "projects": [
    {
      "macro": "tt_um_3515_sequenceDetector",
      "address": 610,
      "title": "Sequence detector using 7-segment",
      "author": "Atharv Sharma & Lipika Gupta",
      "description": "Detects sequence '1001' and displays '8.' on 7-segment led display, otherwise displays '-' only",
      "clock_hz": 1,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/atharv-004/tt06-sequence-counter",
      "commit": "648ff51e78ae0229fa6bb982f12603cb680041dc",
      "pinout": {
        "ui[0]": "x",
        "ui[1]": "condition[0]",
        "ui[2]": "condition[1]",
        "ui[3]": "condition[2]",
        "ui[4]": "condition[3]",
        "ui[5]": "condition[4]",
        "ui[6]": "condition[5]",
        "ui[7]": "condition[6]",
        "uo[0]": "seg[0]",
        "uo[1]": "seg[1]",
        "uo[2]": "seg[2]",
        "uo[3]": "seg[3]",
        "uo[4]": "seg[4]",
        "uo[5]": "seg[5]",
        "uo[6]": "seg[6]",
        "uo[7]": "seg[7]",
        "uio[0]": "seg_test[0]",
        "uio[1]": "seg_test[1]",
        "uio[2]": "seg_test[2]",
        "uio[3]": "seg_test[3]",
        "uio[4]": "seg_test[4]",
        "uio[5]": "seg_test[5]",
        "uio[6]": "seg_test[6]",
        "uio[7]": "seg_test[7]"
      }
    },
    {
      "macro": "tt_um_4bit_cpu_with_fsm",
      "address": 47,
      "title": "4-Bit CPU mit FSM",
      "author": "Jacqueline Gislai",
      "description": "Mini CPU, that can do simple calculations and logic operations as well as storing and loading values and execute shifting operations",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jacquygis/jku-tt06-MiniCPU",
      "commit": "f3db638f1a38b5bdcc06c1757d550b40f76bb27b",
      "pinout": {
        "ui[0]": "storage address Bit 0",
        "ui[1]": "storage address Bit 1",
        "ui[2]": "storage address Bit 2",
        "ui[3]": "storage address Bit 3",
        "ui[4]": "value of input data Bit 0",
        "ui[5]": "value of input data Bit 1",
        "ui[6]": "value of input data Bit 2",
        "ui[7]": "value of input data Bit 3",
        "uo[0]": "output data Bit 0",
        "uo[1]": "output data Bit 1",
        "uo[2]": "output data Bit 2",
        "uo[3]": "output data Bit 3",
        "uo[4]": "output data Bit 4",
        "uo[5]": "output data Bit 5",
        "uo[6]": "output data Bit 6",
        "uo[7]": "output data Bit 7",
        "uio[0]": "input write-access in storage",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "input Operation Code Bit 0",
        "uio[5]": "input Operation Code Bit 1",
        "uio[6]": "input Operation Code Bit 2",
        "uio[7]": "input Operation Code Bit 3"
      }
    },
    {
      "macro": "tt_um_7seg_animated",
      "address": 164,
      "title": "Animated 7-segment character display",
      "author": "Aron Dennen",
      "description": "Displays 7-segment characters with animation",
      "clock_hz": 12500000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/adennen/tt06-arond-project",
      "commit": "61634a0851094493b6f77a0b4e780abdecf41292",
      "pinout": {
        "ui[0]": "input0",
        "ui[1]": "input1",
        "ui[2]": "input2",
        "ui[3]": "input3",
        "ui[4]": "input4",
        "ui[5]": "input5",
        "ui[6]": "input6",
        "ui[7]": "enable display",
        "uo[0]": "seg0",
        "uo[1]": "seg1",
        "uo[2]": "seg2",
        "uo[3]": "seg3",
        "uo[4]": "seg4",
        "uo[5]": "seg5",
        "uo[6]": "seg6",
        "uo[7]": "seg7",
        "uio[0]": "pwm_bit1",
        "uio[1]": "pwm_bit2",
        "uio[2]": "pwm_bit3",
        "uio[3]": "pwm_bit4",
        "uio[4]": "pwm_bit5",
        "uio[5]": "pwm_bit6",
        "uio[6]": "pwm_bit7",
        "uio[7]": "usePwm"
      }
    },
    {
      "macro": "tt_um_8bitALU",
      "address": 679,
      "title": "8bit ALU",
      "author": "David Parent,Chih-Kaun Ho, Edric Ong",
      "description": "Building a simple 8-bit unsigned Arithmetic logic unit (ALU)",
      "clock_hz": 1000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/EdricOngKhaiJieh/8bitALU_verilog",
      "commit": "f9bcfd7d3cb6da2972d1678d9ec5e9402ae9eecb",
      "pinout": {
        "ui[0]": "ui_in",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "uo_out",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_8bit_cpu",
      "address": 169,
      "title": "8-Bit CPU In a Week",
      "author": "Ramyad Hadidi",
      "description": "8-bit Single-Cycle CPU",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ramyadhadidi/tt06-8bit-cpu",
      "commit": "885b5b338e37e554a2cdce4324f3a225b923d3c0",
      "pinout": {
        "ui[0]": "Register 1 (R1) Address bit 0",
        "ui[1]": "Register 1 (R1) Address bit 1",
        "ui[2]": "Register 1 (R1) Address bit 2",
        "ui[3]": "Register 1 (R1) Address bit 3",
        "ui[4]": "Instruction ISA Opcode bit 0",
        "ui[5]": "Instruction ISA Opcode bit 1",
        "ui[6]": "Instruction ISA Opcode bit 2",
        "ui[7]": "Instruction ISA Opcode bit 3",
        "uo[0]": "Data out bit 0 (either register data / Processor stat)",
        "uo[1]": "Data out bit 1 (either register data / 0)",
        "uo[2]": "Data out bit 2 (either register data / 0)",
        "uo[3]": "Data out bit 3 (either register data / 0)",
        "uo[4]": "Data out bit 4 (either register data / 0)",
        "uo[5]": "Data out bit 5 (either register data / 0)",
        "uo[6]": "Data out bit 6 (either register data / 0)",
        "uo[7]": "Data out bit 7 (either register data / 0)",
        "uio[0]": "Data in bit 0 / Register 3 (R3) Address bit 0",
        "uio[1]": "Data in bit 1 / Register 3 (R3) Address bit 1",
        "uio[2]": "Data in bit 2 / Register 3 (R3) Address bit 2",
        "uio[3]": "Data in bit 3 / Register 3 (R3) Address bit 3",
        "uio[4]": "Data in bit 4 / Register 2 (R2) Address bit 0",
        "uio[5]": "Data in bit 5 / Register 2 (R2) Address bit 1",
        "uio[6]": "Data in bit 6 / Register 2 (R2) Address bit 2",
        "uio[7]": "Data in bit 7 / Register 2 (R2) Address bit 3"
      }
    },
    {
      "macro": "tt_um_ADPCM_COMPRESSOR",
      "address": 136,
      "title": "ADPCM Encoder Audio Compressor",
      "author": "Charlie Hess, Emil Ivanov",
      "description": "Accepts a microphone PDM input and returns an ADPCM encoded/compressed ouput",
      "clock_hz": 0,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/hesscharlie/tt06-ADPCM-Compressor",
      "commit": "0d6f738b1b678284285b3109dd56587bb0ebbfda",
      "pinout": {
        "ui[0]": "clk",
        "ui[1]": "slow_clk",
        "ui[2]": "block_enable",
        "ui[3]": "pdm_in",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "outValid",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "encPcm[0]",
        "uo[5]": "encPcm[1]",
        "uo[6]": "encPcm[2]",
        "uo[7]": "encPcm[3]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ALU",
      "address": 547,
      "title": "3-bit ALU",
      "author": "Jos\u00e9 Ra\u00f1a G\u00e1mez",
      "description": "This device is a 3-bit ALU that generates 5 operations in parallel. The operations that the ALU performs are: addition, subtraction, multiplication, division and modulo operation. The device has 2 inputs; A[3-bit] and B[3-bit] along with a 3-bit selector (Selector[3-bit]). It also has a single 6-bit output (OutPut[6-bit]). In the end, the design entails 15 pins in total; 9 input and 6 output pins. The operation of this ALU is simple: At input A and B, the values \u200b\u200bare set using switches, for example, A= 111 and B=101. To obtain the 5 different results through the different 5 operations that the ALU performs, the 3-bit selector (Selector[3-bits]) is used, therefore, using 3 switches we will place the result that we want to observe at the output.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JoseKaisen/ALU_3bits",
      "commit": "aef5319d47e2f6644e4df935d932ae1136e0cc20",
      "pinout": {
        "ui[0]": "First bit for input 'A'(input of 3-bits)",
        "ui[1]": "Second bit for input 'A'(input of 3-bits)",
        "ui[2]": "Third bit for input 'A'(input of 3-bits)",
        "ui[3]": "First bit for input 'B'(input of 3-bits)",
        "ui[4]": "Second bit for input 'B'(input of 3-bits)",
        "ui[5]": "Third bit for input 'B'(input of 3-bits)",
        "ui[6]": "Unused input bit",
        "ui[7]": "Unused input bit",
        "uo[0]": "First bit for output 'Leds'(output of 6-bits)",
        "uo[1]": "Second bit for output 'Leds'(output of 6-bits)",
        "uo[2]": "Third bit for output 'Leds'(output of 6-bits)",
        "uo[3]": "Fourth bit for output 'Leds'(output of 6-bits)",
        "uo[4]": "Fifth bit for output 'Leds'(output of 6-bits)",
        "uo[5]": "Sixth bit for output 'Leds'(output of 6-bits)",
        "uo[6]": "Unused output bit",
        "uo[7]": "Unused output bit",
        "uio[0]": "First bit for input 'ctrl'(input of 3-bits)",
        "uio[1]": "Second bit for input 'ctrl'(input of 3-bits)",
        "uio[2]": "Third bit for input 'ctrl'(input of 3-bits)",
        "uio[3]": "Unused bidirectional I/O bit",
        "uio[4]": "Unused bidirectional I/O bit",
        "uio[5]": "Unused bidirectional I/O bit",
        "uio[6]": "Unused bidirectional I/O bit",
        "uio[7]": "Unused bidirectional I/O bit"
      }
    },
    {
      "macro": "tt_um_ALU_DECODERS",
      "address": 680,
      "title": "ALU with a Gray and Octal decoders",
      "author": "Luis Antonio Quezada Santos, Santiago Robledo Acosta, Jos\u00e9 Miguel Rocha P\u00e9rez",
      "description": "This is a simple 3 bit ALU with 4 operations: Substraction, Addition, XOR and AND which its output is conected to an Octal and Gray Decoders.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/luisquezada93/-tt06-ALU-Decoders-Luis",
      "commit": "c38b4b759d4850d8f1b0eb04eee6b5446128615c",
      "pinout": {
        "ui[0]": "Sel_A_in [0]",
        "ui[1]": "Sel_A_in [1]",
        "ui[2]": "Num_B_in [0]",
        "ui[3]": "Num_B_in [1]",
        "ui[4]": "Num_B_in [2]",
        "ui[5]": "Num_A_in [0]",
        "ui[6]": "Num_A_in [1]",
        "ui[7]": "Num_A_in [2]",
        "uo[0]": "Disp_out[6]",
        "uo[1]": "Disp_out[7]",
        "uo[2]": "Disp_out[8]",
        "uo[3]": "Disp_out[9]",
        "uo[4]": "Disp_out[10]",
        "uo[5]": "Disp_out[11]",
        "uo[6]": "Disp_out[12]",
        "uo[7]": "Disp_out[13]",
        "uio[0]": "",
        "uio[1]": "Disp_out[0]",
        "uio[2]": "Disp_out[1]",
        "uio[3]": "Disp_out[2]",
        "uio[4]": "Disp_out[3]",
        "uio[5]": "Disp_out[4]",
        "uio[6]": "Disp_out[5]",
        "uio[7]": "Sel_M_in"
      }
    },
    {
      "macro": "tt_um_BoothMulti_hhrb98",
      "address": 736,
      "title": "UACJ-MIE-Booth 4",
      "author": "UACJ Group A",
      "description": "Booth 4 multiplier",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/HHRB98/UACJ-MIE-booth4",
      "commit": "3bcd282f0393ee190bb0816c095b64208e07edb8",
      "pinout": {
        "ui[0]": "X[0]",
        "ui[1]": "X[1]",
        "ui[2]": "X[2]",
        "ui[3]": "X[3]",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Z[0]",
        "uo[1]": "Z[1]",
        "uo[2]": "Z[2]",
        "uo[3]": "Z[3]",
        "uo[4]": "Z[4]",
        "uo[5]": "Z[5]",
        "uo[6]": "Z[6]",
        "uo[7]": "Z[7]",
        "uio[0]": "Y[0]",
        "uio[1]": "Y[1]",
        "uio[2]": "Y[2]",
        "uio[3]": "Y[3]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_CDMA_Santiago",
      "address": 611,
      "title": "CDMA_2024",
      "author": "Santiago Robledo Acosta, J\u00f3se Miguel Rocha P\u00e9rez",
      "description": "This is a CDMA circuit for lab testing in order to see the properties of Gold Codes in an Osciloscope",
      "clock_hz": 1000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Santiago-Robledo/tt06-CDMA-2024",
      "commit": "b2b684ab80bc665b7727627697380ec67fb67a1c",
      "pinout": {
        "ui[0]": "signal_i",
        "ui[1]": "seed_i[0]",
        "ui[2]": "seed_i[1]",
        "ui[3]": "seed_i[2]",
        "ui[4]": "seed_i[3]",
        "ui[5]": "seed_i[4]",
        "ui[6]": "seed_i[5]",
        "ui[7]": "load_i",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "cdma_o",
        "uio[1]": "gold_o",
        "uio[2]": "receptor_o",
        "uio[3]": "led_o",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_CKPope_top",
      "address": 416,
      "title": "X/Y Controller",
      "author": "Charles Pope",
      "description": "Two-Axis position Controller (4 bits of range per axis)",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/CKPope/tt06-verilog-template",
      "commit": "c93539faf09c864f1e4ed1ac31a8b16fcb5d7b73",
      "pinout": {
        "ui[0]": "y_target0",
        "ui[1]": "y_target1",
        "ui[2]": "y_target2",
        "ui[3]": "y_target3",
        "ui[4]": "x_target0",
        "ui[5]": "x_target1",
        "ui[6]": "x_target2",
        "ui[7]": "x_target3",
        "uo[0]": "y_pos0",
        "uo[1]": "y_pos1",
        "uo[2]": "y_pos2",
        "uo[3]": "y_pos3",
        "uo[4]": "x_pos0",
        "uo[5]": "x_pos1",
        "uo[6]": "x_pos2",
        "uo[7]": "x_pos3",
        "uio[0]": "motion_inp",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_CodHex7seg",
      "address": 619,
      "title": "Decodificador binario a display 7 segmentos hexadecimal",
      "author": "Victor Manuel Cante Saloma",
      "description": "Muestra un n\u00famero binario de 4 bits en un diplay de 7 segmentos (\u00e1nodo com\u00fan) en hexadecimal",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/vicmcantes/decodificador-binario-a-7-segmentos-hexadecimal",
      "commit": "64611ec92d3583bea9dfec71bc99bc6fdc0eb196",
      "pinout": {
        "ui[0]": "Bit 0",
        "ui[1]": "Bit 1",
        "ui[2]": "Bit 2",
        "ui[3]": "Bit 3",
        "ui[4]": "no use",
        "ui[5]": "no use",
        "ui[6]": "no use",
        "ui[7]": "no use",
        "uo[0]": "Segmento g",
        "uo[1]": "Segmento f",
        "uo[2]": "Segmento e",
        "uo[3]": "Segmento d",
        "uo[4]": "Segmento c",
        "uo[5]": "Segmento b",
        "uo[6]": "Segmento a",
        "uo[7]": "no use",
        "uio[0]": "no use",
        "uio[1]": "no use",
        "uio[2]": "no use",
        "uio[3]": "no use",
        "uio[4]": "no use",
        "uio[5]": "no use",
        "uio[6]": "no use",
        "uio[7]": "no use"
      }
    },
    {
      "macro": "tt_um_Counter_1_shivam",
      "address": 548,
      "title": "8-bit Binary Counter",
      "author": "Aryan kannaujiya, Shivam Bhardwaj and Ambika Prasad Shah",
      "description": " This Verilog module defines a synchronous 8-bit counter, where the count increments on each rising edge of the clock input (clk). Additionally, it features an asynchronous reset input (rst_n), which,0 when activated, sets the counter output (out) to zero regardless of the clock signal.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/aryan-kannaujiya/tt06-verilog-template",
      "commit": "37c022dd46623c403b3b856480e505754e5bc4d2",
      "pinout": {
        "ui[0]": "clk",
        "ui[1]": "rst_n",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "out",
        "uo[1]": "hex",
        "uo[2]": "dec",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_DigitalClockTop",
      "address": 555,
      "title": "TDM Digital Clock",
      "author": "Hassan & Huzaifa tariq",
      "description": "a digital clock that uses time division multiplexing, using 8 outputs to drive six seen segmetns displas",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/HUZAIFA-TARIQ/GIKI-TapeOut-2",
      "commit": "cdf32ed9e79148d984ef89d0fa0bbafb439eb805",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_out[0]",
        "uio[1]": "uio_out[1]",
        "uio[2]": "uio_out[2]",
        "uio[3]": "uio_out[3]",
        "uio[4]": "uio_out[4]",
        "uio[5]": "uio_out[5]",
        "uio[6]": "uio_in[6]",
        "uio[7]": "uio_in[7]"
      }
    },
    {
      "macro": "tt_um_FanCTRL_DomnikBrandstetter",
      "address": 969,
      "title": "PI-Based Fan Controller",
      "author": "Dominik Brandstetter",
      "description": "Temperature Based Fan Speed Controller",
      "clock_hz": 1000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/DomnikBrandstetter/jku-tt06-PID_FanCTRL",
      "commit": "7b47de56ddd43f927b377330f080a43381f62bc4",
      "pinout": {
        "ui[0]": "ADC_BIT_0",
        "ui[1]": "ADC_BIT_1",
        "ui[2]": "ADC_BIT_2",
        "ui[3]": "ADC_BIT_3",
        "ui[4]": "SET_BIT_0",
        "ui[5]": "SET_BIT_1",
        "ui[6]": "SET_BIT_2",
        "ui[7]": "SET_BIT_3",
        "uo[0]": "segment_a",
        "uo[1]": "segment_b",
        "uo[2]": "segment_c",
        "uo[3]": "segment_d",
        "uo[4]": "segment_e",
        "uo[5]": "segment_f",
        "uo[6]": "segment_g",
        "uo[7]": "PWM Output",
        "uio[0]": "Controller_SET_BIT_0",
        "uio[1]": "Controller_SET_BIT_1",
        "uio[2]": "Controller_SET_BIT_2",
        "uio[3]": "Controller_SET_BIT_3",
        "uio[4]": "Controller_SIGN_BIT_4",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_I2C_to_SPI",
      "address": 685,
      "title": "TinyTapeout SPI Master",
      "author": "Samit & Fahim",
      "description": "SPI Msster ",
      "clock_hz": 400000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ReinstatedSamit/tt_um_I2C_to_SPI",
      "commit": "bbb595f4dae6e6f939e843ea13636fa2a7192956",
      "pinout": {
        "ui[0]": "i2c_data_in",
        "ui[1]": "i2c_clk_in",
        "ui[2]": "miso_i",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "i2c_wb_err_i",
        "ui[6]": "i2c_wb_rty_i",
        "ui[7]": "",
        "uo[0]": "sck_o",
        "uo[1]": "mosi_o",
        "uo[2]": "i2c_data_out",
        "uo[3]": "i2c_clk_out",
        "uo[4]": "i2c_data_oe",
        "uo[5]": "i2c_clk_oe",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_JamesTimothyMeech_inverter",
      "address": 235,
      "title": "Programmable Thing",
      "author": "James Meech",
      "description": "One inverter and a programmable resistor with one terminal connected to ground",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        5,
        0,
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/JamesTimothyMeech/tt06-programmable-thing",
      "commit": "0f6eaea4cc37f3142418e4cbd9a57fdda0808455",
      "pinout": {
        "ui[0]": "Control pin to connect one of the 16 resistors between ua[0] and ground using an analog switch",
        "ui[1]": "Control pin to connect one of the 16 resistors between ua[0] and ground using an analog switch",
        "ui[2]": "Control pin to connect one of the 16 resistors between ua[0] and ground using an analog switch",
        "ui[3]": "Control pin to connect one of the 16 resistors between ua[0] and ground using an analog switch",
        "ui[4]": "Control pin to connect one of the 16 resistors between ua[0] and ground using an analog switch",
        "ui[5]": "Control pin to connect one of the 16 resistors between ua[0] and ground using an analog switch",
        "ui[6]": "Control pin to connect one of the 16 resistors between ua[0] and ground using an analog switch",
        "ui[7]": "Control pin to connect one of the 16 resistors between ua[0] and ground using an analog switch",
        "uo[0]": "Not used, grounded internally",
        "uo[1]": "Not used, grounded internally",
        "uo[2]": "Not used, grounded internally",
        "uo[3]": "Not used, grounded internally",
        "uo[4]": "Not used, grounded internally",
        "uo[5]": "Not used, grounded internally",
        "uo[6]": "Not used, grounded internally",
        "uo[7]": "Not used, grounded internally",
        "uio[0]": "Control pin to connect one of the 16 resistors between ua[0] and ground using an analog switch",
        "uio[1]": "Control pin to connect one of the 16 resistors between ua[0] and ground using an analog switch",
        "uio[2]": "Control pin to connect one of the 16 resistors between ua[0] and ground using an analog switch",
        "uio[3]": "Control pin to connect one of the 16 resistors between ua[0] and ground using an analog switch",
        "uio[4]": "Control pin to connect one of the 16 resistors between ua[0] and ground using an analog switch",
        "uio[5]": "Control pin to connect one of the 16 resistors between ua[0] and ground using an analog switch",
        "uio[6]": "Control pin to connect one of the 16 resistors between ua[0] and ground using an analog switch",
        "uio[7]": "Control pin to connect one of the 16 resistors between ua[0] and ground using an analog switch",
        "ua[0]": "Internal programmable resistor connected to this pin",
        "ua[1]": "Analog pin not used",
        "ua[2]": "Analog pin not used",
        "ua[3]": "Analog pin not used",
        "ua[4]": "Analog inverter output",
        "ua[5]": "Analog inverter input"
      }
    },
    {
      "macro": "tt_um_LFSR_shivam",
      "address": 228,
      "title": "10-bit Linear feedback shift register",
      "author": "Shivam Bhardwaj, Sachin Sharma, Pankaj Lodhi and Ambika Prasad Shah",
      "description": "This Verilog module implements a 10-bit Linear Feedback Shift Register (LFSR) for generating pseudo-random sequences with clock and reset inputs.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/beaprog/tt06-LFSR",
      "commit": "6bffe5f606707446700dc5dc43db8fa4d6a74394",
      "pinout": {
        "ui[0]": "clk",
        "ui[1]": "rst",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "out",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_MATTHIAS_M_PAL_TOP_WRAPPER",
      "address": 236,
      "title": "easy PAL",
      "author": "Matthias Musch",
      "description": "This is a simple PAL device with shift-register based (re)configuration",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/matztron/tt06-PAL",
      "commit": "f0a64eb707d595e4dfc36c524a60de3403d0d7da",
      "pinout": {
        "ui[0]": "Combinatorial input 0",
        "ui[1]": "Combinatorial input 1",
        "ui[2]": "Combinatorial input 2",
        "ui[3]": "Combinatorial input 3",
        "ui[4]": "Combinatorial input 4",
        "ui[5]": "Combinatorial input 5",
        "ui[6]": "Combinatorial input 6",
        "ui[7]": "Combinatorial input 7",
        "uo[0]": "Combinatorial output 0",
        "uo[1]": "Combinatorial output 1",
        "uo[2]": "Combinatorial output 2",
        "uo[3]": "Combinatorial output 3",
        "uo[4]": "Combinatorial output 3",
        "uo[5]": "unused - tied to 0",
        "uo[6]": "unused - tied to 0",
        "uo[7]": "unused - tied to 0",
        "uio[0]": "Config pin: This pin is used to apply the config bit that will be shifted in on a rising clock edge.",
        "uio[1]": "Enable pin: If HIGH (1) the result of the logic function is applied to all outputs.",
        "uio[2]": "Clock pin: Used for the shift register to sample in the [config pin] data (see uio[0]).",
        "uio[3]": "unused",
        "uio[4]": "unused",
        "uio[5]": "unused",
        "uio[6]": "unused",
        "uio[7]": "unused"
      }
    },
    {
      "macro": "tt_um_MNSLab_BLDC",
      "address": 582,
      "title": "Universal Motor and Actuator Controller",
      "author": "Assoc. Prof. Din\u00e7er G\u00f6kcen, Ethem Bu\u011fra Arslan, Batu Cem \u00d6zyurt",
      "description": "bldc motor controller and autotuner for controller by MNS lab",
      "clock_hz": 50000000,
      "tiles": "4x2",
      "analog_pins": [],
      "repo": "https://github.com/BatuCem/tt06-mnslab-bldc-0",
      "commit": "0d6ce2c0a5b0b1780600dd711800506df73fdf3e",
      "pinout": {
        "ui[0]": "encoder_a",
        "ui[1]": "encoder_b",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "scl",
        "uo[0]": "motor_positive",
        "uo[1]": "motor_negative",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "sda",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_MichaelBell_latch_mem",
      "address": 620,
      "title": "Latch RAM (64 bytes)",
      "author": "Mike Bell",
      "description": "64 byte RAM built out of latches",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/tt06-memory",
      "commit": "9ba7c7d578af66f720422faec75cd3a53f291473",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "addr[4]",
        "ui[5]": "addr[5]",
        "ui[6]": "",
        "ui[7]": "wr_en",
        "uo[0]": "data_out[0]",
        "uo[1]": "data_out[1]",
        "uo[2]": "data_out[2]",
        "uo[3]": "data_out[3]",
        "uo[4]": "data_out[4]",
        "uo[5]": "data_out[5]",
        "uo[6]": "data_out[6]",
        "uo[7]": "data_out[7]",
        "uio[0]": "data_in[0]",
        "uio[1]": "data_in[1]",
        "uio[2]": "data_in[2]",
        "uio[3]": "data_in[3]",
        "uio[4]": "data_in[4]",
        "uio[5]": "data_in[5]",
        "uio[6]": "data_in[6]",
        "uio[7]": "data_in[7]"
      },
      "danger_level": "medium",
      "danger_reason": "There is a potential internal driver conflict after project selection until the first clock."
    },
    {
      "macro": "tt_um_MichaelBell_tinyQV",
      "address": 227,
      "title": "TinyQV Risc-V SoC",
      "author": "Michael Bell",
      "description": "A Risc-V SoC for Tiny Tapeout",
      "clock_hz": 64000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/tt06-tinyQV",
      "commit": "0d835e1b6d6b50d286636be224f873f3d8d38220",
      "pinout": {
        "ui[0]": "Interrupt 0",
        "ui[1]": "Interrupt 1",
        "ui[2]": "SPI MISO",
        "ui[3]": "GP in3",
        "ui[4]": "GP in4",
        "ui[5]": "GP in5",
        "ui[6]": "GP in6",
        "ui[7]": "UART RX",
        "uo[0]": "UART TX",
        "uo[1]": "UART RTS",
        "uo[2]": "SPI DC",
        "uo[3]": "SPI MOSI",
        "uo[4]": "SPI CS",
        "uo[5]": "SPI SCK",
        "uo[6]": "Debug UART TX",
        "uo[7]": "Debug signal",
        "uio[0]": "Flash CS",
        "uio[1]": "SD0",
        "uio[2]": "SD1",
        "uio[3]": "SCK",
        "uio[4]": "SD2",
        "uio[5]": "SD3",
        "uio[6]": "RAM A CS",
        "uio[7]": "RAM B CS"
      }
    },
    {
      "macro": "tt_um_PWM",
      "address": 623,
      "title": "PWM",
      "author": "NoeReyes",
      "description": "This project involves Pulse Width Modulation, enabling the duty cycle to be adjusted between 10% and 90% using switches.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Noe-Reyes/PWM",
      "commit": "a019723e883c810ba2bd27dd6776eeefe4427ce9",
      "pinout": {
        "ui[0]": "load 0",
        "ui[1]": "load 1",
        "ui[2]": "load 2",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "PWM",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_PWM_Controller",
      "address": 677,
      "title": "PWM Controller",
      "author": "Ziyi Zhao, Yuchen Ma",
      "description": " A Low-Cost Pulse Width Modulation (PWM) Controller",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Yuchen1203/tt06-PWM-Controller",
      "commit": "ef53d50f282b8eaf019ed4e0460e72bfcf8a58f3",
      "pinout": {
        "ui[0]": "increase_duty",
        "ui[1]": "decrease_duty",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "PWM_OUT",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_PWM_Sine_UART",
      "address": 741,
      "title": "PWM_Sinewave_UART",
      "author": "Luis Gerardo Avila",
      "description": "This project is a PWM signal generator that creates a sine wave, with frequency variation between 100 Hz and 700 Hz with steps of 100 in 100 Hz, which is manipulated through a UART interface",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JerryAvila06/PWM_Sinewave",
      "commit": "742058e4706912992813d3a16d64aa516a10038d",
      "pinout": {
        "ui[0]": "uart_rx",
        "ui[1]": "no use",
        "ui[2]": "no use",
        "ui[3]": "no use",
        "ui[4]": "sw_11",
        "ui[5]": "sw_01",
        "ui[6]": "rst1",
        "ui[7]": "no use",
        "uo[0]": "uart_tx",
        "uo[1]": "no use",
        "uo[2]": "pwm_outx",
        "uo[3]": "no use",
        "uo[4]": "no use",
        "uo[5]": "no use",
        "uo[6]": "no use",
        "uo[7]": "no use",
        "uio[0]": "no use",
        "uio[1]": "no use",
        "uio[2]": "no use",
        "uio[3]": "no use",
        "uio[4]": "no use",
        "uio[5]": "no use",
        "uio[6]": "no use",
        "uio[7]": "no use"
      }
    },
    {
      "macro": "tt_um_QIF_8bit",
      "address": 234,
      "title": "8 Bit Digital QIF",
      "author": "David Parent",
      "description": "The circuit will spike when the input is positive.  It will reset when the signal exceeds a predetermined value",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/davidparent/tt_um_tt6_verilog_davidparent",
      "commit": "eff2594172b32b92132bb055c77b180a601208a4",
      "pinout": {
        "ui[0]": "B0",
        "ui[1]": "B1",
        "ui[2]": "B2",
        "ui[3]": "B3",
        "ui[4]": "B4",
        "ui[5]": "B5",
        "ui[6]": "B6",
        "ui[7]": "B7",
        "uo[0]": "AS0",
        "uo[1]": "S1",
        "uo[2]": "S2",
        "uo[3]": "S3",
        "uo[4]": "S4",
        "uo[5]": "S5",
        "uo[6]": "S6",
        "uo[7]": "S7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_S2P",
      "address": 621,
      "title": "Serial to Parallel Register",
      "author": "Ricardo M. Rocha Torres",
      "description": "This is a simple Serial to Parallel Register",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ricardorocha1202/Serie_Parallel",
      "commit": "54b6713ab10c3fb827979c699bbd13a835772296",
      "pinout": {
        "ui[0]": "no use",
        "ui[1]": "no use",
        "ui[2]": "no use",
        "ui[3]": "no use",
        "ui[4]": "no use",
        "ui[5]": "no use",
        "ui[6]": "no use",
        "ui[7]": "no use",
        "uo[0]": "no use",
        "uo[1]": "no use",
        "uo[2]": "no use",
        "uo[3]": "no use",
        "uo[4]": "no use",
        "uo[5]": "no use",
        "uo[6]": "no use",
        "uo[7]": "no use",
        "uio[0]": "Bit 0",
        "uio[1]": "Bit 1",
        "uio[2]": "Bit 2",
        "uio[3]": "Bit 3",
        "uio[4]": "no use",
        "uio[5]": "Serie_in",
        "uio[6]": "rst",
        "uio[7]": "clk"
      }
    },
    {
      "macro": "tt_um_SJ",
      "address": 324,
      "title": "SiliconJackets_Systolic_Array",
      "author": "SiliconJackets",
      "description": "a tiny systolic array capable of row stationary operation",
      "clock_hz": 25000000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/SiliconJackets/tt06-verilog-template",
      "commit": "6c256bd56aefaa20b0c786a123836a404c8b0069",
      "pinout": {
        "ui[0]": "readA[0]",
        "ui[1]": "readA[1]",
        "ui[2]": "readA[2]",
        "ui[3]": "readA[3]",
        "ui[4]": "readA[4]",
        "ui[5]": "readA[5]",
        "ui[6]": "readA[6]",
        "ui[7]": "readA[7]",
        "uo[0]": "write[0]",
        "uo[1]": "write[1]",
        "uo[2]": "write[2]",
        "uo[3]": "write[3]",
        "uo[4]": "write[4]",
        "uo[5]": "write[5]",
        "uo[6]": "write[6]",
        "uo[7]": "write[7]",
        "uio[0]": "readB[0]",
        "uio[1]": "readB[1]",
        "uio[2]": "readB[2]",
        "uio[3]": "readB[3]",
        "uio[4]": "readB[4]",
        "uio[5]": "readB[5]",
        "uio[6]": "readB[6]",
        "uio[7]": "readB[7]"
      }
    },
    {
      "macro": "tt_um_SteffenReith_ASGTop",
      "address": 174,
      "title": "ASG",
      "author": "Steffen Reith",
      "description": "An Alternating Step Generator to generate (pseudo)random bit with huge period length",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/SteffenReith/TT06_ASG",
      "commit": "d46a7949e5a7f5f3904d84a53e0f7cb90023fd2f",
      "pinout": {
        "ui[0]": "loadIt[0]",
        "ui[1]": "loadIt[1]",
        "ui[2]": "enable",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "newBit",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_SteffenReith_PiMACTop",
      "address": 99,
      "title": "PiMAC",
      "author": "Steffen Reith",
      "description": "A simple pipelined multiply and accumulate unit to compute a*b+c",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/SteffenReith/TT06_PiMac",
      "commit": "e63a5e0f3b42d21b8bef56ef695a7ba07ca16095",
      "pinout": {
        "ui[0]": "a[0]",
        "ui[1]": "a[1]",
        "ui[2]": "a[2]",
        "ui[3]": "a[3]",
        "ui[4]": "b[0]",
        "ui[5]": "b[1]",
        "ui[6]": "b[2]",
        "ui[7]": "b[3]",
        "uo[0]": "result[0]",
        "uo[1]": "result[1]",
        "uo[2]": "result[2]",
        "uo[3]": "result[3]",
        "uo[4]": "result[4]",
        "uo[5]": "result[5]",
        "uo[6]": "result[6]",
        "uo[7]": "result[7]",
        "uio[0]": "c[0]",
        "uio[1]": "c[1]",
        "uio[2]": "c[2]",
        "uio[3]": "c[3]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_TT06_SAR_wulffern",
      "address": 231,
      "title": "TT06 8-bit SAR ADC",
      "author": "Carsten Wulff",
      "description": "8-bit Successive Approximation Register ADC",
      "clock_hz": 4000000,
      "tiles": "1x2",
      "analog_pins": [
        5,
        0
      ],
      "repo": "https://github.com/wulffern/tt06-sar",
      "commit": "d984a8fd2ff3b8c06f39e494a74959d559f3c8c2",
      "pinout": {
        "ui[0]": "Enable ADC",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "ADC LSB",
        "uo[1]": "ADC MSB-6",
        "uo[2]": "ADC MSB-5",
        "uo[3]": "ADC MSB-4",
        "uo[4]": "ADC MSB-3",
        "uo[5]": "ADC MSB-2",
        "uo[6]": "ADC MSB-1",
        "uo[7]": "ADC MSB (two's complement)",
        "uio[0]": "Conversion Done",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "Negative ADC input",
        "ua[1]": "Positive ADC input"
      }
    },
    {
      "macro": "tt_um_UABCReloj",
      "address": 609,
      "title": "24 H Clock",
      "author": "UABC Team",
      "description": "typical 23h-format 4 digits clock. Two digits for hours and the other for minutes.",
      "clock_hz": 1000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Miguelgrc032024/UABCReloj",
      "commit": "14b0e7958ba826e56d41c4460937a3801e6fe76b",
      "pinout": {
        "ui[0]": "rst",
        "ui[1]": "clk",
        "ui[2]": "P0",
        "ui[3]": "set",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "M0[0]",
        "uo[1]": "M0[1]",
        "uo[2]": "M0[2]",
        "uo[3]": "M0[3]",
        "uo[4]": "M1[0]",
        "uo[5]": "M1[1]",
        "uo[6]": "M1[2]",
        "uo[7]": "M1[3]",
        "uio[0]": "H0[0]",
        "uio[1]": "H0[1]",
        "uio[2]": "H0[2]",
        "uio[3]": "H0[3]",
        "uio[4]": "H1[0]",
        "uio[5]": "H1[1]",
        "uio[6]": "Dots",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_Uart_Transciver",
      "address": 559,
      "title": "UART Transceiver",
      "author": "Saad Khan, Saim Iqbal",
      "description": "8 bit data frame, with little endian transmit and receive signals",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/theuppercaseguy/GIKI-Tapeout",
      "commit": "00cb1c265b1513e1146560ba5ed19a0ee636ca84",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_in[0]",
        "uio[1]": "uio_in[1]",
        "uio[2]": "uio_in[2]",
        "uio[3]": "uio_out[3]",
        "uio[4]": "uio_out[4]",
        "uio[5]": "uio_out[5]",
        "uio[6]": "uio_out[6]",
        "uio[7]": "uio_out[7]"
      }
    },
    {
      "macro": "tt_um_adammaj",
      "address": 674,
      "title": "Tiny ALU",
      "author": "Adam Majmudar",
      "description": "A super simple ALU from my GPU design",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/adam-maj/tt06",
      "commit": "6f2bb55767ae02f1e8c20d589f19e0eb53114de7",
      "pinout": {
        "ui[0]": "rs[0]",
        "ui[1]": "rs[1]",
        "ui[2]": "rs[2]",
        "ui[3]": "rs[3]",
        "ui[4]": "rt[0]",
        "ui[5]": "rt[1]",
        "ui[6]": "rt[2]",
        "ui[7]": "rt[3]",
        "uo[0]": "alu_out[0]",
        "uo[1]": "alu_out[1]",
        "uo[2]": "alu_out[2]",
        "uo[3]": "alu_out[3]",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "alu_arithmetic_mux[0]",
        "uio[1]": "alu_arithmetic_mux[1]",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_advanced_counter",
      "address": 967,
      "title": "jku-tt06-advanced-counter",
      "author": "Martin Putz",
      "description": "Multi-Digit Counter with changeable maximum values and carry over.",
      "clock_hz": 1000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/k12005911/jku-tt06-advanced-counter",
      "commit": "2990ffe2365941f41f667b63123d321ac88dd789",
      "pinout": {
        "ui[0]": "Button 0 In",
        "ui[1]": "Button 1 In",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Digit 0 Out",
        "uo[1]": "Digit 1 Out",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "Up-Down-Select In",
        "uio[1]": "Set-Carry In",
        "uio[2]": "Set-Max In",
        "uio[3]": "Refresh-Limits In",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "Shift-Clk Out",
        "uio[7]": "Not-Shift-Clk Out"
      }
    },
    {
      "macro": "tt_um_aerox2_jrb8_computer",
      "address": 204,
      "title": "The James Retro Byte 8 computer",
      "author": "James Ridey",
      "description": "A 8bit microprocessor built from the ground up (nand2tetris)",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/AeroX2/tt06-jrb8-computer",
      "commit": "b128befda85fcb04d8c6914b6747ca0551debb1f",
      "pinout": {
        "ui[0]": "input bit 0",
        "ui[1]": "input bit 1",
        "ui[2]": "input bit 2",
        "ui[3]": "input bit 3",
        "ui[4]": "input bit 4",
        "ui[5]": "input bit 5",
        "ui[6]": "input bit 6",
        "ui[7]": "input bit 7",
        "uo[0]": "output bit 0",
        "uo[1]": "output bit 1",
        "uo[2]": "output bit 2",
        "uo[3]": "output bit 3",
        "uo[4]": "output bit 4",
        "uo[5]": "output bit 5",
        "uo[6]": "output bit 6",
        "uo[7]": "output bit 7",
        "uio[0]": "cs rom",
        "uio[1]": "mosi",
        "uio[2]": "miso",
        "uio[3]": "sck",
        "uio[4]": "cs ram",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "24 addressing bit mode"
      }
    },
    {
      "macro": "tt_um_aiju_8080",
      "address": 12,
      "title": "8080 CPU",
      "author": "Emily Schmidt",
      "description": "It's an Intel 8080-compatible CPU core that can hopefully run Microsoft BASIC, CP/M, etc.",
      "clock_hz": 1000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/aiju/tt06-aiju-8080",
      "commit": "81601ef6eb4dda2f359e8d91cca1aa1f51ebd17a",
      "pinout": {
        "ui[0]": "bus_handshake_ack",
        "ui[1]": "debug_req",
        "ui[2]": "int_req",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "bus_handshake_req",
        "uo[1]": "bus_state[0]",
        "uo[2]": "bus_state[1]",
        "uo[3]": "bus_io",
        "uo[4]": "cpu_fetch",
        "uo[5]": "cpu_in_debug",
        "uo[6]": "cpu_halted",
        "uo[7]": "cpu_int_ack",
        "uio[0]": "data_bus[0]",
        "uio[1]": "data_bus[1]",
        "uio[2]": "data_bus[2]",
        "uio[3]": "data_bus[3]",
        "uio[4]": "data_bus[4]",
        "uio[5]": "data_bus[5]",
        "uio[6]": "data_bus[6]",
        "uio[7]": "data_bus[7]"
      }
    },
    {
      "macro": "tt_um_aleena",
      "address": 526,
      "title": "Analog Sigmoid",
      "author": "aleena",
      "description": "Activation functions for neuromorphic computing",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11,
        6,
        10,
        7,
        9
      ],
      "repo": "https://github.com/aleena-duk/tinytapeoutsig",
      "commit": "d5813adf9437ff2fa69c2d7bb37f754786787018",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "in1",
        "ua[1]": "out1",
        "ua[2]": "gnd1",
        "ua[3]": "in2",
        "ua[4]": "out2"
      }
    },
    {
      "macro": "tt_um_alexsegura_pong",
      "address": 909,
      "title": "Pong",
      "author": "Alex Segura",
      "description": "2-player pong game",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/alex-segura/tt06-pong",
      "commit": "dab9f8b3fb9bbaca501e21cef5d3dcb33f9b22a5",
      "pinout": {
        "ui[0]": "Paddle 1 encoder A",
        "ui[1]": "Paddle 1 encoder B",
        "ui[2]": "Paddle 2 encoder A",
        "ui[3]": "Paddle 2 encoder B",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R0",
        "uo[1]": "G0",
        "uo[2]": "B0",
        "uo[3]": "VSYNC",
        "uo[4]": "R1",
        "uo[5]": "G1",
        "uo[6]": "B1",
        "uo[7]": "HSYNC",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_alfiero88_VCII",
      "address": 233,
      "title": "VCII",
      "author": "Alfiero Leoni",
      "description": "Simple Voltage Conveyor",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/alfiero88/tt06-VCII",
      "commit": "d1d026692b73691858510655476cfe986012941a",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "output",
        "ua[1]": "output",
        "ua[2]": "input",
        "ua[3]": "input"
      }
    },
    {
      "macro": "tt_um_algofoogle_tt06_grab_bag",
      "address": 492,
      "title": "TT06 Grab Bag",
      "author": "algofoogle (Anton Maurovic)",
      "description": "A few analog/mixed-signal experiments with a 24-bit VGA pattern generator as the highlight",
      "clock_hz": 25000000,
      "tiles": "1x2",
      "analog_pins": [
        5,
        0,
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/algofoogle/tt06-grab-bag",
      "commit": "ef595890f89ff613a3c9c5c88a91db110139d3e1",
      "pinout": {
        "ui[0]": "mode[0] / dac_in[0]",
        "ui[1]": "mode[1] / dac_in[1]",
        "ui[2]": "mode[2] / dac_in[2]",
        "ui[3]": "mode[3] / dac_in[3]",
        "ui[4]": "mode[4] / dac_in[4]",
        "ui[5]": "mode[5] / dac_in[5]",
        "ui[6]": "mode[6] / dac_in[6]",
        "ui[7]": "mode[7] / dac_in[7]",
        "uo[0]": "r7",
        "uo[1]": "g7",
        "uo[2]": "b7",
        "uo[3]": "vsync",
        "uo[4]": "r6",
        "uo[5]": "g6",
        "uo[6]": "b6",
        "uo[7]": "hsync",
        "uio[0]": "vblank_out",
        "uio[1]": "hblank_out",
        "uio[2]": "inv_dout",
        "uio[3]": "dac4_in[4]",
        "uio[4]": "dac4_in[5]",
        "uio[5]": "dac4_in[6]",
        "uio[6]": "dac4_in[7]",
        "uio[7]": "inv_in",
        "ua[0]": "r_out",
        "ua[1]": "g_out",
        "ua[2]": "b_out",
        "ua[3]": "inv_aout",
        "ua[4]": "dac4_aout",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_alu",
      "address": 549,
      "title": "SumLatchUART_System",
      "author": "Gilberto Ramos Valenzuela",
      "description": " 4 bit adder",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/brtgio/UART_4-bits_ALU_System",
      "commit": "d12b1162b3da999eca2c4b5d2e9b300988aa3903",
      "pinout": {
        "ui[0]": "data_input [0]",
        "ui[1]": "data_input [1]",
        "ui[2]": "data_input [2]",
        "ui[3]": "data_input [3]",
        "ui[4]": "Op_select [4]",
        "ui[5]": "Op_select [5]",
        "ui[6]": "Op_select [6]",
        "ui[7]": "Op_select [7]",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "clk",
        "uio[1]": "reset_n",
        "uio[2]": "save_a_n",
        "uio[3]": "save_b_n",
        "uio[4]": "uart_tx_en",
        "uio[5]": "uart_txd",
        "uio[6]": "uartbusy",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_analog_factory_test",
      "address": 512,
      "title": "TT06 Analog Factory Test",
      "author": "Sylvain Munaut",
      "description": "Test structures for TT06 analog support",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11,
        6,
        10,
        7,
        9,
        8
      ],
      "repo": "https://github.com/smunaut/tt06-analog-factory-test",
      "commit": "aef82ab82ba589de58f135e77791a5ac5a084442",
      "pinout": {
        "ui[0]": "ena0_n",
        "ui[1]": "ena1",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "ibias",
        "ua[1]": "vgnd_sense",
        "ua[2]": "vpwr_sense",
        "ua[3]": "loopback[0]",
        "ua[4]": "loopback[1]",
        "ua[5]": "loopback[2]"
      }
    },
    {
      "macro": "tt_um_analog_loopback",
      "address": 494,
      "title": "Analog loopback",
      "author": "Matt Venn",
      "description": "Analog loopback test",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        5,
        0,
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/TinyTapeout/tt06-analog-loopback",
      "commit": "18fd5544223121cd275237152ddb34d83e7830c5",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "connected to 1",
        "ua[1]": "connected to 0",
        "ua[2]": "connected to 3",
        "ua[3]": "connected to 2",
        "ua[4]": "connected to 5",
        "ua[5]": "connected to 4"
      }
    },
    {
      "macro": "tt_um_ancho",
      "address": 747,
      "title": "Circuito PWM con ciclo de trabajo configurable",
      "author": "Maria Fernanda Tovany Salvador, Javier Trucios Alonso & Luis David Vazquez Perez",
      "description": " A partir de tres senales de entrada digitales selecciona el ciclo de trabajo de salida (PWM).",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/LuisVazpez12/PWM_configurable",
      "commit": "a5eb66c983b6e4d0f352cbe65a5b952ce056e324",
      "pinout": {
        "ui[0]": "no use",
        "ui[1]": "no use",
        "ui[2]": "no use",
        "ui[3]": "speed[0]",
        "ui[4]": "speed[1]",
        "ui[5]": "speed[3]",
        "ui[6]": "enable",
        "ui[7]": "clock",
        "uo[0]": "PWM",
        "uo[1]": "no use",
        "uo[2]": "no use",
        "uo[3]": "no use",
        "uo[4]": "no use",
        "uo[5]": "no use",
        "uo[6]": "no use",
        "uo[7]": "no use",
        "uio[0]": "no use",
        "uio[1]": "no use",
        "uio[2]": "no use",
        "uio[3]": "no use",
        "uio[4]": "no use",
        "uio[5]": "no use",
        "uio[6]": "no use",
        "uio[7]": "no use"
      }
    },
    {
      "macro": "tt_um_andrewtron3000",
      "address": 238,
      "title": "Rule 30 Engine!",
      "author": "andrewtron3000",
      "description": "Iterate Rule 30 Cellular Automaton",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/andrewtron3000/tt06-verilog-template",
      "commit": "4e0a338e8642ad320ac7eca58951cf19140bc519",
      "pinout": {
        "ui[0]": "Initial Value LSB",
        "ui[1]": "Initial Value",
        "ui[2]": "Initial Value",
        "ui[3]": "Initial Value",
        "ui[4]": "Initial Value",
        "ui[5]": "Initial Value",
        "ui[6]": "Initial Value",
        "ui[7]": "Initial Value MSB",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "UART TX",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_andychip1_sn74169",
      "address": 903,
      "title": "sn74169",
      "author": "andychip1",
      "description": "up down counter",
      "clock_hz": 1000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/andychip1/sn74169",
      "commit": "cdab2c267cc94306c23f4e0c6a62559c30e6bed3",
      "pinout": {
        "ui[0]": "A0",
        "ui[1]": "A1",
        "ui[2]": "A2",
        "ui[3]": "A3",
        "ui[4]": "ENPB",
        "ui[5]": "ENTB",
        "ui[6]": "LOADB",
        "ui[7]": "UP",
        "uo[0]": "Q0",
        "uo[1]": "Q1",
        "uo[2]": "Q2",
        "uo[3]": "Q3",
        "uo[4]": "RCOB",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_argunda_tiny_opamp",
      "address": 271,
      "title": "Tiny Opamp",
      "author": "argunda",
      "description": "Super simple two stage opamp without miller compensation",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11,
        6,
        10,
        7,
        9,
        8
      ],
      "repo": "https://github.com/argunda/tt06-tiny-opamp",
      "commit": "56dd4f9729508e85baf8dec3c273e403718b9926",
      "pinout": {
        "ui[0]": "pause",
        "ui[1]": "new_game",
        "ui[2]": "down_key",
        "ui[3]": "up_key",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "blue",
        "uo[1]": "green",
        "uo[2]": "red",
        "uo[3]": "hsync",
        "uo[4]": "vsync",
        "uo[5]": "speaker",
        "uo[6]": "col0",
        "uo[7]": "row0",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "VOUT1",
        "ua[1]": "PLUS1",
        "ua[2]": "MINUS1",
        "ua[3]": "VOUT2",
        "ua[4]": "PLUS2",
        "ua[5]": "MINUS2"
      }
    },
    {
      "macro": "tt_um_array_multiplier_hhrb98",
      "address": 750,
      "title": "Array Multiplier",
      "author": "UACJ Group A",
      "description": "Array Multiplier",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/HHRB98/Array-multiplier",
      "commit": "f5291c90038acf79065f3d48129c7e8ce8fe0348",
      "pinout": {
        "ui[0]": "ui[0]",
        "ui[1]": "ui[1]",
        "ui[2]": "ui[2]",
        "ui[3]": "ui[3]",
        "ui[4]": "ui[4]",
        "ui[5]": "ui[5]",
        "ui[6]": "ui[6]",
        "ui[7]": "ui[7]",
        "uo[0]": "uo[0]",
        "uo[1]": "uo[1]",
        "uo[2]": "uo[2]",
        "uo[3]": "uo[3]",
        "uo[4]": "uo[4]",
        "uo[5]": "uo[5]",
        "uo[6]": "uo[6]",
        "uo[7]": "uo[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_bit_ctrl",
      "address": 748,
      "title": "Bit Control",
      "author": "K Opong-Mensah",
      "description": "Bit pattern cycle on every clock cycle.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/kdotom/bit_ctrl",
      "commit": "d58e2a8754b9dd4af211d38ee3eb788c1476c85e",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_bomba1",
      "address": 746,
      "title": "Latin_bomba",
      "author": "Arizaga Silva",
      "description": "Circuito de control basado en maquina de estados para controlar el llenado de un deposito de agua a traves de una bomba",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/arizaga1/Latin_bomba",
      "commit": "62d773d6f0c1fd22684e322ba0ab0db1bfea99cb",
      "pinout": {
        "ui[0]": "no used",
        "ui[1]": "no used",
        "ui[2]": "no used",
        "ui[3]": "no used",
        "ui[4]": "no used",
        "ui[5]": "no used",
        "ui[6]": "no used",
        "ui[7]": "no used",
        "uo[0]": "no used",
        "uo[1]": "no used",
        "uo[2]": "no used",
        "uo[3]": "no used",
        "uo[4]": "no used",
        "uo[5]": "no used",
        "uo[6]": "no used",
        "uo[7]": "no used",
        "uio[0]": "bomba_o",
        "uio[1]": "alarma_o",
        "uio[2]": "no used",
        "uio[3]": "sensores_i[0]",
        "uio[4]": "sensores_i[1]",
        "uio[5]": "sensores_i[2]",
        "uio[6]": "rst_i",
        "uio[7]": "ck"
      }
    },
    {
      "macro": "tt_um_calculator_muehlbb",
      "address": 973,
      "title": "16-bit calculator",
      "author": "Benedikt Muehlbachler",
      "description": "calculator using 16-bit ALU with 8-bit IO-data port reading/writing data",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/muehlbachler-b/jku-tt06-16bit-calculator-muehlb",
      "commit": "4dccd9997c2671cc903a5778a8613520a09f1810",
      "pinout": {
        "ui[0]": "alu operation select bit 0",
        "ui[1]": "alu operation select bit 1",
        "ui[2]": "alu operation select bit 2",
        "ui[3]": "alu operation select bit 3",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "status bit 0 (wrong operation flag)",
        "uo[1]": "status bit 1 (zero flag)",
        "uo[2]": "status bit 2 (sign flag)",
        "uo[3]": "status bit 3 (carry flag)",
        "uo[4]": "status bit 4 (overflow flag)",
        "uo[5]": "counter bit 0",
        "uo[6]": "counter bit 1",
        "uo[7]": "counter bit 2",
        "uio[0]": "data port bit 0",
        "uio[1]": "data port bit 1",
        "uio[2]": "data port bit 2",
        "uio[3]": "data port bit 3",
        "uio[4]": "data port bit 4",
        "uio[5]": "data port bit 5",
        "uio[6]": "data port bit 6",
        "uio[7]": "data port bit 7"
      }
    },
    {
      "macro": "tt_um_cejmu_riscv",
      "address": 264,
      "title": "TinyRV1 CPU",
      "author": "Prof. Dr. Matthias Jung, Jonathan Hager, Philipp Wetzstein",
      "description": "TinyRV1 compliant CPU that has to be attached to an external SPI memory. The ISA is described in the documentation",
      "clock_hz": 12000000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/CEJMU/tt06_tinyrv1",
      "commit": "defe915e0b6acd64ab23a3e52857420947b1b0ae",
      "pinout": {
        "ui[0]": "SPI MISO",
        "ui[1]": "unused",
        "ui[2]": "unused",
        "ui[3]": "unused",
        "ui[4]": "unused",
        "ui[5]": "unused",
        "ui[6]": "unused",
        "ui[7]": "unused",
        "uo[0]": "SPI MOSI",
        "uo[1]": "SPI SCLK",
        "uo[2]": "SPI CS",
        "uo[3]": "Register_1(0)",
        "uo[4]": "Register_1(1)",
        "uo[5]": "Register_1(2)",
        "uo[6]": "Register_1(3)",
        "uo[7]": "Register_1(4)",
        "uio[0]": "Register_1(5)",
        "uio[1]": "Register_1(6)",
        "uio[2]": "Register_1(7)",
        "uio[3]": "Register_1(8)",
        "uio[4]": "Register_1(9)",
        "uio[5]": "Register_1(10)",
        "uio[6]": "Register_1(11)",
        "uio[7]": "Register_1(12)"
      }
    },
    {
      "macro": "tt_um_chatgpt_rsnn_paolaunisa",
      "address": 330,
      "title": "ChatGPT designed Recurrent Spiking Neural Network",
      "author": "Paola Vitolo, Michael Tomlinson, ChatGPT-4, Gian Domenico Licciardo, Andreas Andreou - pvitolo1@jh.edu",
      "description": "Programmable recurrent spiking neural network with 9 recurrent LIF neurons ( 3 input - 3 output ) with fully programmable weights (8-bit)",
      "clock_hz": 0,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/Andreou-JHULabOrg/tinytapeout_06_chatgpt_rsnn",
      "commit": "ee362f748299c2480ccb546c884cba3633f8ac37",
      "pinout": {
        "ui[0]": "Input Spike 0",
        "ui[1]": "Input Spike 1",
        "ui[2]": "Input Spike 2",
        "ui[3]": "Spike Input Register Enable",
        "ui[4]": "RSNN enable",
        "ui[5]": "Serial Data IN",
        "ui[6]": "Parameter Load",
        "ui[7]": "Test selection",
        "uo[0]": "Output Spike 0",
        "uo[1]": "Output Spike 1",
        "uo[2]": "Output Spike 2",
        "uo[3]": "End of Writing Parameters into Memory",
        "uo[4]": "Parameter Data Written",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "out_test 0",
        "uio[1]": "out_test 1",
        "uio[2]": "out_test 2",
        "uio[3]": "out_test 3",
        "uio[4]": "out_test 4",
        "uio[5]": "out_test 5",
        "uio[6]": "out_test 6",
        "uio[7]": "out_test 7"
      }
    },
    {
      "macro": "tt_um_chip_rom",
      "address": 0,
      "title": "Chip ROM",
      "author": "Uri Shaked",
      "description": "ROM with information about the chip",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt-chip-rom",
      "commit": "cbc69c5edf0aaddbc88027b7b711aa362aef7164",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "addr[4]",
        "ui[5]": "addr[5]",
        "ui[6]": "addr[6]",
        "ui[7]": "addr[7]",
        "uo[0]": "data[0]",
        "uo[1]": "data[1]",
        "uo[2]": "data[2]",
        "uo[3]": "data[3]",
        "uo[4]": "data[4]",
        "uo[5]": "data[5]",
        "uo[6]": "data[6]",
        "uo[7]": "data[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_chisel_hello_schoeberl",
      "address": 428,
      "title": "Chisel Hello World",
      "author": "Martin Schoeberl",
      "description": "A Chisel Hello World with Counting on the 7-segment display and showing/playing Morse Code of hello world",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/schoeberl/tt06-chisel-hello",
      "commit": "662174351a51f09d4ea0a5881bfd2835dc70978f",
      "pinout": {
        "ui[0]": "switch on 7-segment",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "dot: morse out",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "audio",
        "uio[5]": "gain",
        "uio[6]": "",
        "uio[7]": "nshutdown"
      }
    },
    {
      "macro": "tt_um_chisel_pong",
      "address": 8,
      "title": "Chisel Pong",
      "author": "Tjark Petersen",
      "description": "A basic Pong game using VGA implemented in Chisel.",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/tjarker/tiny-tapeout-pong",
      "commit": "cb158b5c50b3ae77fdcc4b879c235b03492da7af",
      "pinout": {
        "ui[0]": "left player up",
        "ui[1]": "left player down",
        "ui[2]": "right player up",
        "ui[3]": "right player down",
        "ui[4]": "engage left player autopilot",
        "ui[5]": "engage right player autopilot",
        "ui[6]": "not used",
        "ui[7]": "not used",
        "uo[0]": "r[1]",
        "uo[1]": "g[1]",
        "uo[2]": "b[1]",
        "uo[3]": "v-sync",
        "uo[4]": "r[0]",
        "uo[5]": "g[0]",
        "uo[6]": "b[0]",
        "uo[7]": "h-sync",
        "uio[0]": "state[0]",
        "uio[1]": "state[1]",
        "uio[2]": "state[2]",
        "uio[3]": "v-sync",
        "uio[4]": "h-sync",
        "uio[5]": "left player lost",
        "uio[6]": "right player lost",
        "uio[7]": "game tick"
      }
    },
    {
      "macro": "tt_um_cmerrill_pdm",
      "address": 483,
      "title": "Parallel / SPI modulation tester",
      "author": "Chris Merrill",
      "description": "PDM/PWM/PFM waveform output based on digital data in",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/cmerrill/tt06-cmerrill",
      "commit": "aa01d2461c3bcc04a40e970cc05fa55666e47b69",
      "pinout": {
        "ui[0]": "DAC Parallel Input, bit 0",
        "ui[1]": "DAC Parallel Input, bit 1",
        "ui[2]": "DAC Parallel Input, bit 2",
        "ui[3]": "DAC Parallel Input, bit 3",
        "ui[4]": "DAC Parallel Input, bit 4",
        "ui[5]": "DAC Parallel Input, bit 5",
        "ui[6]": "DAC Parallel Input, bit 6",
        "ui[7]": "DAC Parallel Input, bit 7",
        "uo[0]": "PDM Waveform Output",
        "uo[1]": "",
        "uo[2]": "PFM Output, Single cycle pulse",
        "uo[3]": "PFM Output, 50% duty cycle",
        "uo[4]": "PWM Waveformn Output",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "CLK_DIV[0]",
        "uio[1]": "CLK_DIV[1]",
        "uio[2]": "CLK_DIV[2]",
        "uio[3]": "CLK_DIV[3]",
        "uio[4]": "SPI CS_L / Parallel Latch",
        "uio[5]": "SPI SCLK",
        "uio[6]": "SPI SDI",
        "uio[7]": "Parallel/SPI Select (0 => Parallel, 1 => SPI)"
      }
    },
    {
      "macro": "tt_um_coloquinte_moosic",
      "address": 911,
      "title": "Moosic logic-locked design",
      "author": "Gabriel Gouvine",
      "description": "8-bit counter locked with Moosic logic locking",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Coloquinte/locked-tapeout",
      "commit": "0936052d2e32f802bd040e6ce9384ab1b025b0ed",
      "pinout": {
        "ui[0]": "DO_INCR",
        "ui[1]": "KEY_ENABLE",
        "ui[2]": "KEY_0",
        "ui[3]": "KEY_1",
        "ui[4]": "KEY_2",
        "ui[5]": "KEY_3",
        "ui[6]": "KEY_4",
        "ui[7]": "KEY_5",
        "uo[0]": "CNT_0",
        "uo[1]": "CNT_1",
        "uo[2]": "CNT_2",
        "uo[3]": "CNT_3",
        "uo[4]": "CNT_4",
        "uo[5]": "CNT_5",
        "uo[6]": "CNT_6",
        "uo[7]": "CNT_7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_couchand_cora16",
      "address": 66,
      "title": "CORA-16",
      "author": "Andrew Dona-Couch",
      "description": "Simple 16-bit CPU",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/couchand/tt06-cora16",
      "commit": "6c2688c68d55da29e970b6b656358e535ee0afb3",
      "pinout": {
        "ui[0]": "Data In 0",
        "ui[1]": "Data In 1",
        "ui[2]": "Data In 2",
        "ui[3]": "Data In 3",
        "ui[4]": "Data In 4",
        "ui[5]": "Data In 5",
        "ui[6]": "Data In 6",
        "ui[7]": "Data In 7",
        "uo[0]": "Data Out 0",
        "uo[1]": "Data Out 1",
        "uo[2]": "Data Out 2",
        "uo[3]": "Data Out 3",
        "uo[4]": "Data Out 4",
        "uo[5]": "Data Out 5",
        "uo[6]": "Data Out 6",
        "uo[7]": "Data Out 7",
        "uio[0]": "SPI MOSI",
        "uio[1]": "SPI CS",
        "uio[2]": "SPI CLK",
        "uio[3]": "SPI MISO",
        "uio[4]": "Step",
        "uio[5]": "Busy",
        "uio[6]": "Halt",
        "uio[7]": "Trap"
      }
    },
    {
      "macro": "tt_um_couchand_dual_deque",
      "address": 431,
      "title": "Dual Deque",
      "author": "Andrew Dona-Couch",
      "description": "Dual byte-width double-ended queues",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/couchand/tt06-dual-deque",
      "commit": "5283a24440b233609b8f9e1e7ecf4588fa725cf4",
      "pinout": {
        "ui[0]": "Data In 0",
        "ui[1]": "Data In 1",
        "ui[2]": "Data In 2",
        "ui[3]": "Data In 3",
        "ui[4]": "Data In 4",
        "ui[5]": "Data In 5",
        "ui[6]": "Data In 6",
        "ui[7]": "Data In 7",
        "uo[0]": "Data Out 0",
        "uo[1]": "Data Out 1",
        "uo[2]": "Data Out 2",
        "uo[3]": "Data Out 3",
        "uo[4]": "Data Out 4",
        "uo[5]": "Data Out 5",
        "uo[6]": "Data Out 6",
        "uo[7]": "Data Out 7",
        "uio[0]": "Deque Select",
        "uio[1]": "End Select",
        "uio[2]": "Push",
        "uio[3]": "Pop",
        "uio[4]": "Deque 0 Empty",
        "uio[5]": "Deque 0 Full",
        "uio[6]": "Deque 1 Empty",
        "uio[7]": "Deque 1 Full"
      }
    },
    {
      "macro": "tt_um_csit_luks",
      "address": 485,
      "title": "CSIT-Luks",
      "author": "CSIT Team (Jan Furlan, Jurica Ga\u0161par, Marko Marinovi\u0107, Tin Sori\u0107, Ivan \u0160tignedec, Dino Terman, Jurica Kundrata)",
      "description": "Camera lighting settings recommender.",
      "clock_hz": 1000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jk2102/tt06-csit-luks",
      "commit": "218072f2d4ca4355cd5866f95912e9215452d2cc",
      "pinout": {
        "ui[0]": "A (rot_encoder)",
        "ui[1]": "B (rot_encoder)",
        "ui[2]": "PB (rot_encoder)",
        "ui[3]": "MISO (spi_flash)",
        "ui[4]": "MISO (spi_sensor)",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "a (seven_seg)",
        "uo[1]": "b (seven_seg)",
        "uo[2]": "c (seven_seg)",
        "uo[3]": "d (seven_seg)",
        "uo[4]": "e (seven_seg)",
        "uo[5]": "f (seven_seg)",
        "uo[6]": "g (seven_seg)",
        "uo[7]": "dp (seven_seg)",
        "uio[0]": "an[0] (seven_seg)",
        "uio[1]": "an[1] (seven_seg)",
        "uio[2]": "an[2] (seven_seg)",
        "uio[3]": "an[3] (seven_seg)",
        "uio[4]": "SCLK (spi_flash, spi_sensor)",
        "uio[5]": "SS (spi_flash)",
        "uio[6]": "SS (spi_sensor)",
        "uio[7]": "MOSI (spi_flash)"
      }
    },
    {
      "macro": "tt_um_devinatkin_fastreadout",
      "address": 846,
      "title": "Fast Readout Image Sensor Prototype",
      "author": "Devin Atkin",
      "description": "This Project Pretends to be an Image Sensor, It's not an Image Sensor",
      "clock_hz": 50000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/devinatkin/tt06-fastreadout",
      "commit": "3304c13567f167b9e856332b249de98ed436d53c",
      "pinout": {
        "ui[0]": "DATA_IN1",
        "ui[1]": "RCLK_1",
        "ui[2]": "LOAD_1",
        "ui[3]": "DATA_IN2",
        "ui[4]": "RCLK_2",
        "ui[5]": "LOAD_2",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "DATA_BUS_COL_OUT[0]",
        "uo[1]": "DATA_BUS_COL_OUT[1]",
        "uo[2]": "DATA_BUS_COL_OUT[2]",
        "uo[3]": "DATA_BUS_COL_OUT[3]",
        "uo[4]": "DATA_BUS_COL_OUT[4]",
        "uo[5]": "DATA_BUS_COL_OUT[5]",
        "uo[6]": "DATA_BUS_COL_OUT[6]",
        "uo[7]": "DATA_BUS_COL_OUT[7]",
        "uio[0]": "DATA_BUS_ROW_IN[0]",
        "uio[1]": "DATA_BUS_ROW_IN[1]",
        "uio[2]": "DATA_BUS_ROW_IN[2]",
        "uio[3]": "DATA_BUS_ROW_IN[3]",
        "uio[4]": "DATA_BUS_ROW_IN[4]",
        "uio[5]": "DATA_BUS_ROW_IN[5]",
        "uio[6]": "DATA_BUS_ROW_IN[6]",
        "uio[7]": "DATA_BUS_ROW_IN[7]"
      }
    },
    {
      "macro": "tt_um_dgkaminski",
      "address": 557,
      "title": "4-Bit ALU",
      "author": "Daniel Kaminski",
      "description": "4-Bit ALU with Cornell ECE2300 op-code instructions.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dgkaminski/tto6-submission",
      "commit": "775e124468f88ca72b5277bd402ab9832f296187",
      "pinout": {
        "ui[0]": "B[0]",
        "ui[1]": "B[1]",
        "ui[2]": "B[2]",
        "ui[3]": "B[3]",
        "ui[4]": "A[0]",
        "ui[5]": "A[1]",
        "ui[6]": "A[2]",
        "ui[7]": "A[3]",
        "uo[0]": "Z",
        "uo[1]": "N",
        "uo[2]": "V",
        "uo[3]": "C",
        "uo[4]": "Y[0]",
        "uo[5]": "Y[1]",
        "uo[6]": "Y[2]",
        "uo[7]": "Y[3]",
        "uio[0]": "FS[0]",
        "uio[1]": "FS[1]",
        "uio[2]": "FS[2]",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_dieroller_nathangross1",
      "address": 172,
      "title": "Die Roller",
      "author": "Nathan Gross",
      "description": "Generates a random number when rolled with input 1-99",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/nathangross1/tt06-verilog-template",
      "commit": "2b11416dda44f3f172a2d9f5a60a9baf9e836ff8",
      "pinout": {
        "ui[0]": "Die Size bit 0",
        "ui[1]": "Die Size bit 1",
        "ui[2]": "Die Size bit 2",
        "ui[3]": "Die Size bit 3",
        "ui[4]": "Die Size bit 4",
        "ui[5]": "Die Size bit 5",
        "ui[6]": "Die Size bit 6",
        "ui[7]": "Die Roll",
        "uo[0]": "Dual 7 segment data 0",
        "uo[1]": "Dual 7 segment data 1",
        "uo[2]": "Dual 7 segment data 2",
        "uo[3]": "Dual 7 segment data 3",
        "uo[4]": "Dual 7 segment data 4",
        "uo[5]": "Dual 7 segment data 5",
        "uo[6]": "Dual 7 segment data 6",
        "uo[7]": "Source selection",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_digitaler_filter_rathmayr",
      "address": 963,
      "title": "Digitaler Filter",
      "author": "Nico Rathmayr",
      "description": "FIR-Filter using two coefficents to filter 8-bit signal",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/NicoRathmayr/jku-tt06-Digitaler-Filter",
      "commit": "9c7fb254f298a02c8900c089bf1838d160e7b945",
      "pinout": {
        "ui[0]": "input signal bit 0",
        "ui[1]": "input signal bit 1",
        "ui[2]": "input signal bit 2",
        "ui[3]": "input signal bit 3",
        "ui[4]": "input signal bit 4",
        "ui[5]": "input signal bit 5",
        "ui[6]": "input signal bit 6",
        "ui[7]": "input signal bit 7",
        "uo[0]": "output signal bit 0",
        "uo[1]": "output signal bit 1",
        "uo[2]": "output signal bit 2",
        "uo[3]": "output signal bit 3",
        "uo[4]": "output signal bit 4",
        "uo[5]": "output signal bit 5",
        "uo[6]": "output signal bit 6",
        "uo[7]": "output signal bit 7",
        "uio[0]": "input coefficient bit 0",
        "uio[1]": "input coefficient bit 1",
        "uio[2]": "input coefficient bit 2",
        "uio[3]": "input coefficient bit 3",
        "uio[4]": "input coefficient bit 4",
        "uio[5]": "input coefficient bit 5",
        "uio[6]": "input coefficient bit 6",
        "uio[7]": "input coefficient bit 7"
      }
    },
    {
      "macro": "tt_um_disp1",
      "address": 299,
      "title": "Display test 1",
      "author": "Mastro Gippo",
      "description": "just a test",
      "clock_hz": 10000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mastrogippo/tt06-verilog_test",
      "commit": "a5f65ee0818c2577d0fdd6e0fbbd3ba5cdab4eb5",
      "pinout": {
        "ui[0]": "s1",
        "ui[1]": "s2",
        "ui[2]": "e1",
        "ui[3]": "e2",
        "ui[4]": "e3",
        "ui[5]": "e4",
        "ui[6]": "e5",
        "ui[7]": "e6",
        "uo[0]": "D4",
        "uo[1]": "D5",
        "uo[2]": "D6",
        "uo[3]": "D7",
        "uo[4]": "RS",
        "uo[5]": "E",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_dlmiles_muldiv8",
      "address": 614,
      "title": "MULDIV unit (8-bit signed/unsigned)",
      "author": "Darryl Miles",
      "description": "Combinational Multiply and Divide Unit (signed and unsigned)",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dlmiles/tt06-muldiv8",
      "commit": "21522f0b94cffd44e2ffdcf0ea0e1ca0781bb296",
      "pinout": {
        "ui[0]": "Data0 see docs",
        "ui[1]": "Data1 see docs",
        "ui[2]": "Data2 see docs",
        "ui[3]": "Data3 see docs",
        "ui[4]": "Data4 see docs",
        "ui[5]": "Data5 see docs",
        "ui[6]": "Data6 see docs",
        "ui[7]": "Data7 see docs",
        "uo[0]": "Result0 see docs",
        "uo[1]": "Result1 see docs",
        "uo[2]": "Result2 see docs",
        "uo[3]": "Result3 see docs",
        "uo[4]": "Result4 see docs",
        "uo[5]": "Result5 see docs",
        "uo[6]": "Result6 see docs",
        "uo[7]": "Result7 see docs",
        "uio[0]": "Addr bit0 HI=1/lo=0 mux of Data and Result (input only)",
        "uio[1]": "unused",
        "uio[2]": "unused",
        "uio[3]": "Result mux registered=1/immediate=0 (input only)",
        "uio[4]": "DIV error overflow (output only)",
        "uio[5]": "DIV error divide-by-zero (output only)",
        "uio[6]": "OPSIGNED mode (input only)",
        "uio[7]": "MULDIV mode (input only)"
      }
    },
    {
      "macro": "tt_um_dlmiles_muldiv8_sky130faha",
      "address": 616,
      "title": "MULDIV unit (8-bit signed/unsigned) with sky130 HA/FA cells",
      "author": "Darryl Miles",
      "description": "Combinational Multiply and Divide Unit (signed and unsigned)",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dlmiles/tt06-muldiv8-sky130faha",
      "commit": "742257d48f84c40fb003960652fd49767e3d0857",
      "pinout": {
        "ui[0]": "Data0 see docs",
        "ui[1]": "Data1 see docs",
        "ui[2]": "Data2 see docs",
        "ui[3]": "Data3 see docs",
        "ui[4]": "Data4 see docs",
        "ui[5]": "Data5 see docs",
        "ui[6]": "Data6 see docs",
        "ui[7]": "Data7 see docs",
        "uo[0]": "Result0 see docs",
        "uo[1]": "Result1 see docs",
        "uo[2]": "Result2 see docs",
        "uo[3]": "Result3 see docs",
        "uo[4]": "Result4 see docs",
        "uo[5]": "Result5 see docs",
        "uo[6]": "Result6 see docs",
        "uo[7]": "Result7 see docs",
        "uio[0]": "Addr bit0 HI=1/lo=0 mux of Data and Result (input only)",
        "uio[1]": "unused",
        "uio[2]": "unused",
        "uio[3]": "Result mux registered=1/immediate=0 (input only)",
        "uio[4]": "DIV error overflow (output only)",
        "uio[5]": "DIV error divide-by-zero (output only)",
        "uio[6]": "OPSIGNED mode (input only)",
        "uio[7]": "MULDIV mode (input only)"
      }
    },
    {
      "macro": "tt_um_dlmiles_poc_fskmodem_hdlctrx",
      "address": 738,
      "title": "FSK Modem +HDLC +UART (PoC)",
      "author": "Darryl Miles",
      "description": "FSK Modem w/ HDLC transciever + UART (PoC digital side)",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dlmiles/tt06-poc-fskmodem-hdlctrx",
      "commit": "7b4948a1b3dc44e420fe74266939ab9e661b2abf",
      "pinout": {
        "ui[0]": "Rx Data",
        "ui[1]": "Rx Clock",
        "ui[2]": "UART RTS",
        "ui[3]": "TableData[0]",
        "ui[4]": "TableData[1]",
        "ui[5]": "TableData[2]",
        "ui[6]": "TableData[3]",
        "ui[7]": "UART RX",
        "uo[0]": "UART TX",
        "uo[1]": "UART CTS",
        "uo[2]": "UART DCD",
        "uo[3]": "Rx Error",
        "uo[4]": "Tx Error",
        "uo[5]": "Sending",
        "uo[6]": "",
        "uo[7]": "Tx Clock Stobe",
        "uio[0]": "Rx Clock (bidi)",
        "uio[1]": "Up/Down (bidi)",
        "uio[2]": "TableAddr[0]",
        "uio[3]": "TableAddr[1]",
        "uio[4]": "TableAddr[2]",
        "uio[5]": "TableAddr[3]",
        "uio[6]": "TableAddr[4]",
        "uio[7]": "TableAddr[5]"
      }
    },
    {
      "macro": "tt_um_dr_skyler_clock",
      "address": 613,
      "title": "Clock",
      "author": "Hilburn",
      "description": "ASIC Desktop Clock",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dr-skyler/tt_um_dr_skyler_clock",
      "commit": "9d5bdb1c9d9a83bf73bd1cda6e0f8607c283bcbc",
      "pinout": {
        "ui[0]": "Clock 10 MHz",
        "ui[1]": "Clock 12 MHz",
        "ui[2]": "Clock 14 MHz",
        "ui[3]": "Clock 20 MHz",
        "ui[4]": "Show Minuetes",
        "ui[5]": "Show Hours",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "7-seg[0]",
        "uo[1]": "7-seg[1]",
        "uo[2]": "7-seg[2]",
        "uo[3]": "7-seg[3]",
        "uo[4]": "7-seg[4]",
        "uo[5]": "7-seg[5]",
        "uo[6]": "7-seg[6]",
        "uo[7]": "7-seg[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_drburke3_top",
      "address": 489,
      "title": "SADdiff_v1",
      "author": "Daniel Burke",
      "description": "digital neuron component test",
      "clock_hz": 10,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/drburke3/SADdiff_v1",
      "commit": "a2bbb0f112acbd9f840697c628e4b67099cc3a01",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio[0]",
        "uio[1]": "uio[1]",
        "uio[2]": "uio[2]",
        "uio[3]": "uio[3]",
        "uio[4]": "uio[4]",
        "uio[5]": "uio[5]",
        "uio[6]": "uio[6]",
        "uio[7]": "uio[7]"
      }
    },
    {
      "macro": "tt_um_drops",
      "address": 43,
      "title": "drops",
      "author": "Philipp Ploeckinger",
      "description": "Arcade Style game, which lets you collect vertical droplets on an 8x8 pixel display",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/PloeckiPhil/jku-tt06-drops",
      "commit": "0cb131798b9b4d5e79a7810ff5a32167ce6e82b0",
      "pinout": {
        "ui[0]": "push button - right",
        "ui[1]": "push button - left",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "display column 0",
        "uo[1]": "display column 1",
        "uo[2]": "display column 2",
        "uo[3]": "display column 3",
        "uo[4]": "display column 4",
        "uo[5]": "display column 5",
        "uo[6]": "display column 6",
        "uo[7]": "display column 7",
        "uio[0]": "display row 0",
        "uio[1]": "display row 1",
        "uio[2]": "display row 2",
        "uio[3]": "display row 3",
        "uio[4]": "display row 4",
        "uio[5]": "display row 5",
        "uio[6]": "display row 6",
        "uio[7]": "display row 7"
      }
    },
    {
      "macro": "tt_um_dsatizabal_opamp",
      "address": 490,
      "title": "Simple FET OpAmp with Sky130.",
      "author": "Diego Satizabal",
      "description": "A simple FET OpAmp, credits to Fulgor Foundation as I used Diegos and Julias design as a base available at https://github.com/diegohernando/caravel_fulgor_opamp/tree/master/xschem",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/dsatizabal/tt06-fet-opamp",
      "commit": "137d7bee5b41e795a7d80a588f7d210ccc6bcaeb",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "ZEF",
        "ua[1]": "V-",
        "ua[2]": "V+",
        "ua[3]": "Vout"
      },
      "danger_level": "medium",
      "danger_reason": "There is an error in that schematic causing an abnormally high bias current."
    },
    {
      "macro": "tt_um_duk_lif",
      "address": 520,
      "title": "Leaky Integrate and fire neuron(LIF)",
      "author": "Vyshnav P Dinesh",
      "description": "Single node of integrate and fire neuron (LIF)",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        7,
        9,
        8
      ],
      "repo": "https://github.com/vyshnavthonichal/tt-um-duk-lif",
      "commit": "5393ae679e6209f6a6849fa9c9f57bf047719295",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "Out",
        "ua[1]": "Vth",
        "ua[2]": "Vin"
      }
    },
    {
      "macro": "tt_um_dvxf_dj8",
      "address": 419,
      "title": "DJ8 8-bit CPU",
      "author": "DaveX",
      "description": "DJ8 8-bit CPU with parallel Flash / RAM interface",
      "clock_hz": 14000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dvxf/tt06-dj8",
      "commit": "80ea9df6d49ae6d6bc66dc860e558b75b210bfdc",
      "pinout": {
        "ui[0]": "data in 0",
        "ui[1]": "data in 1",
        "ui[2]": "data in 2",
        "ui[3]": "data in 3",
        "ui[4]": "data in 4",
        "ui[5]": "data in 5",
        "ui[6]": "data in 6",
        "ui[7]": "data in 7",
        "uo[0]": "address out 8",
        "uo[1]": "address out 9",
        "uo[2]": "address out 10",
        "uo[3]": "address out 11",
        "uo[4]": "address out 12",
        "uo[5]": "address out 13",
        "uo[6]": "address out 14",
        "uo[7]": "write enable",
        "uio[0]": "address out 0 / data out 0",
        "uio[1]": "address out 1 / data out 1",
        "uio[2]": "address out 2 / data out 2",
        "uio[3]": "address out 3 / data out 3",
        "uio[4]": "address out 4 / data out 4",
        "uio[5]": "address out 5 / data out 5",
        "uio[6]": "address out 6 / data out 6",
        "uio[7]": "address out 7 / data out 7"
      }
    },
    {
      "macro": "tt_um_ejfogleman_smsdac",
      "address": 558,
      "title": "8-bit DEM R2R DAC",
      "author": "Eric Fogleman",
      "description": "8-bit segmented mismatch-shaping R2R DAC",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ejfogleman/ef_smsdac",
      "commit": "65fd05492cf31a53f0d17d11e8dfa3052d8aa094",
      "pinout": {
        "ui[0]": "d_in[0]",
        "ui[1]": "d_in[1]",
        "ui[2]": "d_in[2]",
        "ui[3]": "d_in[3]",
        "ui[4]": "d_in[4]",
        "ui[5]": "d_in[5]",
        "ui[6]": "d_in[6]",
        "ui[7]": "d_in[8]",
        "uo[0]": "d_out_0[0]",
        "uo[1]": "d_out_0[1]",
        "uo[2]": "d_out_1[0]",
        "uo[3]": "d_out_1[1]",
        "uo[4]": "d_out_2[0]",
        "uo[5]": "d_out_2[1]",
        "uo[6]": "d_out_3[0]",
        "uo[7]": "d_out_3[1]",
        "uio[0]": "en_enc",
        "uio[1]": "en_dith",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "ena_and_rst_n"
      }
    },
    {
      "macro": "tt_um_emilian_rf_playground",
      "address": 522,
      "title": "IDAC8 based on divide current by 2",
      "author": "Emilian Miron",
      "description": "IDAC8 based on divide current by 2.",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11,
        10,
        6
      ],
      "repo": "https://github.com/diferential/tt06-rf-playground",
      "commit": "1628a00feac6165da7f58fa8cd87e0981f0e8994",
      "pinout": {
        "ui[0]": "bit0",
        "ui[1]": "bit1",
        "ui[2]": "bit2",
        "ui[3]": "bit3",
        "ui[4]": "bit4",
        "ui[5]": "bit5",
        "ui[6]": "bit6",
        "ui[7]": "bit7",
        "uo[0]": "n/a",
        "uo[1]": "n/a",
        "uo[2]": "n/a",
        "uo[3]": "n/a",
        "uo[4]": "n/a",
        "uo[5]": "n/a",
        "uo[6]": "n/a",
        "uo[7]": "n/a",
        "uio[0]": "n/a",
        "uio[1]": "n/a",
        "uio[2]": "n/a",
        "uio[3]": "n/a",
        "uio[4]": "n/a",
        "uio[5]": "n/a",
        "uio[6]": "n/a",
        "uio[7]": "n/a",
        "ua[0]": "VREF_OUT for current level/256",
        "ua[1]": "IOUT - output current",
        "ua[2]": "VREF_IN for current level"
      }
    },
    {
      "macro": "tt_um_enieman",
      "address": 710,
      "title": "UART-Programmable RISC-V 32I Core",
      "author": "Ethan Nieman",
      "description": "RISC-V core implementing reduced set of RV32I ISA; programmable via UART",
      "clock_hz": 50000000,
      "tiles": "4x2",
      "analog_pins": [],
      "repo": "https://github.com/enieman/uart_programmable_rv32i",
      "commit": "c1d3dde23a45e62ed61d32d66a5491bd5b2f740f",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "RX",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "System Reset",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "TX",
        "uo[3]": "",
        "uo[4]": "Data on TX",
        "uo[5]": "Data on RX",
        "uo[6]": "UART Controller in Program Mode",
        "uo[7]": "System Reset (LED)",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_entwurf_integrierter_schaltungen_hadner",
      "address": 78,
      "title": "Projekt KEIS Hadner Thomas",
      "author": "Thomas Hadner",
      "description": "Demodulator for RC Receiver with different Outputs",
      "clock_hz": 1000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ThomasHadner/jku-tt06-pwm-analyzer-hadner",
      "commit": "46d183d2daf2b75523dc087ece86bb4f2b82c7c4",
      "pinout": {
        "ui[0]": "input PWM of channel 0",
        "ui[1]": "input PWM of channel 1",
        "ui[2]": "input PWM of channel 2",
        "ui[3]": "input PWM of channel 3",
        "ui[4]": "input PWM of channel 4",
        "ui[5]": "input PWM of channel 5",
        "ui[6]": "input PWM of channel 6",
        "ui[7]": "input PWM of channel 7",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "UART Transmit Wire",
        "uio[0]": "output of channel 0",
        "uio[1]": "output of channel 1",
        "uio[2]": "output of channel 2",
        "uio[3]": "output of channel 3",
        "uio[4]": "output of channel 4",
        "uio[5]": "output of channel 5",
        "uio[6]": "output of channel 6",
        "uio[7]": "output of channel 7"
      }
    },
    {
      "macro": "tt_um_ericsmi_weste_problem_4_11",
      "address": 554,
      "title": "Measurement of CMOS VLSI Design Problem 4.11",
      "author": "Eric Smith ",
      "description": "Measure the delay of each design in the problem with varying load.  See project Readme for details.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ericsmi/tt06-weste-problem-4.11",
      "commit": "aa2e74a86281efc4c1ed4c5f07e6874e7aa1dae3",
      "pinout": {
        "ui[0]": "sel[0]",
        "ui[1]": "sel[1]",
        "ui[2]": "sel[2]",
        "ui[3]": "sel[3]",
        "ui[4]": "h[0]",
        "ui[5]": "h[1]",
        "ui[6]": "h[2]",
        "ui[7]": "ntest",
        "uo[0]": "b[0]",
        "uo[1]": "b[1]",
        "uo[2]": "b[2]",
        "uo[3]": "b[3]",
        "uo[4]": "&(A[5:0])",
        "uo[5]": "ntest",
        "uo[6]": "count",
        "uo[7]": "overflow",
        "uio[0]": "a[0]",
        "uio[1]": "a[1]",
        "uio[2]": "a[2]",
        "uio[3]": "a[3]",
        "uio[4]": "a[4]",
        "uio[5]": "a[5]",
        "uio[6]": "a[6]",
        "uio[7]": "a[7]"
      }
    },
    {
      "macro": "tt_um_exai_izhikevich_neuron",
      "address": 334,
      "title": "Izhikevich Neuron",
      "author": "ExAI Dmitri Lyalikov",
      "description": "ASIC Digital Implementation of Izhikevich Neuron Model with configurable A, B Parameters",
      "clock_hz": 50000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/existential-ai/izhekevich_neuron",
      "commit": "3c96176dd22af711373543317ab76e14c3fbb72f",
      "pinout": {
        "ui[0]": "Input Current [0]",
        "ui[1]": "Input Current [1]",
        "ui[2]": "Input Current [2]",
        "ui[3]": "Input Current [3]",
        "ui[4]": "Input Current [4]",
        "ui[5]": "A Parameter [0]",
        "ui[6]": "A Parameter [1]",
        "ui[7]": "A Parameter [2]",
        "uo[0]": "Membrane Potential [0]",
        "uo[1]": "Membrane Potential [1]",
        "uo[2]": "Membrane Potential [2]",
        "uo[3]": "Membrane Potential [3]",
        "uo[4]": "Membrane Potential [4]",
        "uo[5]": "Membrane Potential [5]",
        "uo[6]": "Membrane Potential [6]",
        "uo[7]": "Membrane Potential [7]",
        "uio[0]": "Neuron Select [0]",
        "uio[1]": "Neuron Select [1]",
        "uio[2]": "Neuron Select [2]",
        "uio[3]": "A Parameter [3]",
        "uio[4]": "B Parameter [0]",
        "uio[5]": "B Parameter [1]",
        "uio[6]": "B Parameter [3]",
        "uio[7]": "B Parameter [4]"
      }
    },
    {
      "macro": "tt_um_factory_test",
      "address": 1,
      "title": "TinyTapeout 06 Factory Test",
      "author": "Sylvain Munaut",
      "description": "Factory test module",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt06-factory-test",
      "commit": "dc7e3d0969cf5719bd4c215d46ec5deaa63c98ea",
      "pinout": {
        "ui[0]": "sel",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "data_o[0]",
        "uo[1]": "data_o[1]",
        "uo[2]": "data_o[2]",
        "uo[3]": "data_o[3]",
        "uo[4]": "data_o[4]",
        "uo[5]": "data_o[5]",
        "uo[6]": "data_o[6]",
        "uo[7]": "data_o[7]",
        "uio[0]": "data_i[0] / counter_o[0]",
        "uio[1]": "data_i[1] / counter_o[1]",
        "uio[2]": "data_i[2] / counter_o[2]",
        "uio[3]": "data_i[3] / counter_o[3]",
        "uio[4]": "data_i[4] / counter_o[4]",
        "uio[5]": "data_i[5] / counter_o[5]",
        "uio[6]": "data_i[6] / counter_o[6]",
        "uio[7]": "data_i[7] / counter_o[7]"
      }
    },
    {
      "macro": "tt_um_faramire_gate_guesser",
      "address": 901,
      "title": "Gate Guesser",
      "author": "Fabio Ramirez Stern",
      "description": "A very simple gate guessing game - which I/O is connected to what?",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/faramire/TT06-gate-guesser",
      "commit": "d190bd6f7714877805fd3ec5e17d947ec1a4452c",
      "pinout": {
        "ui[0]": "switch0",
        "ui[1]": "switch1",
        "ui[2]": "switch2",
        "ui[3]": "switch3",
        "ui[4]": "switch4",
        "ui[5]": "switch5",
        "ui[6]": "switch6",
        "ui[7]": "switch7",
        "uo[0]": "gatey0",
        "uo[1]": "gatey1",
        "uo[2]": "gatey2",
        "uo[3]": "gatey3",
        "uo[4]": "gatey4",
        "uo[5]": "gatey5",
        "uo[6]": "gatey6",
        "uo[7]": "gatey7",
        "uio[0]": "switch8",
        "uio[1]": "switch9",
        "uio[2]": "switchA",
        "uio[3]": "switchB",
        "uio[4]": "switchC",
        "uio[5]": "switchD",
        "uio[6]": "switchE",
        "uio[7]": "switchF"
      }
    },
    {
      "macro": "tt_um_faramire_stopwatch",
      "address": 612,
      "title": "Simple Stopwatch",
      "author": "Fabio Ramirez Stern",
      "description": "A simple stopwatch counting in 100th seconds and outputing it via SPI to a MAX7219 chip controlling an 8 digit 7-segment display.",
      "clock_hz": 1000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/faramire/TT06-simple-clock",
      "commit": "10dec78b9429e276595893de125336b62d608b7f",
      "pinout": {
        "ui[0]": "start/stop",
        "ui[1]": "lap time",
        "ui[2]": "reset (active high)",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "SPI MOSI",
        "uo[1]": "SPI CS (active low)",
        "uo[2]": "SPI CLK",
        "uo[3]": "stopwatch enabled (counting up)",
        "uo[4]": "display enabled (goes low when showing lap time)",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_fdc_chip",
      "address": 171,
      "title": "Frequency to digital converters (asynchronous and synchronous)",
      "author": "Eduardo Holguin",
      "description": "This chip combines asynchronous and synchronous frequency-to-digital converters, offering two options in a single package.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/EduHolg/FDC_chip",
      "commit": "d3279a5521e4e9e34c48c8815fae9ce8b2140421",
      "pinout": {
        "ui[0]": "selec",
        "ui[1]": "clk_ref",
        "ui[2]": "VCO",
        "ui[3]": "reset",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_flappy_bird",
      "address": 45,
      "title": "Flappy Bird",
      "author": "Robin Hohensinn",
      "description": "Flappy Bird",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RobinH08/JKU-TT06-FlappyBird",
      "commit": "f54fd427c14ddd43bb08fd5228d63664ad9b856c",
      "pinout": {
        "ui[0]": "up-Button",
        "ui[1]": "down-Button",
        "ui[2]": "not used",
        "ui[3]": "not used",
        "ui[4]": "not used",
        "ui[5]": "not used",
        "ui[6]": "not used",
        "ui[7]": "not used",
        "uo[0]": "row of display-Matrix",
        "uo[1]": "row of display-Matrix",
        "uo[2]": "row of display-Matrix",
        "uo[3]": "row of display-Matrix",
        "uo[4]": "row of display-Matrix",
        "uo[5]": "row of display-Matrix",
        "uo[6]": "row of display-Matrix",
        "uo[7]": "row of display-Matrix",
        "uio[0]": "col of display-Matrix",
        "uio[1]": "col of display-Matrix",
        "uio[2]": "col of display-Matrix",
        "uio[3]": "col of display-Matrix",
        "uio[4]": "col of display-Matrix",
        "uio[5]": "col of display-Matrix",
        "uio[6]": "col of display-Matrix",
        "uio[7]": "col of display-Matrix"
      }
    },
    {
      "macro": "tt_um_fountaincoder_top",
      "address": 226,
      "title": "multimac",
      "author": "Jonny Edwards",
      "description": "a multi use multi-hit dot product accelerator",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Fountaincoder/multimac",
      "commit": "fefdb132e3d6ca2aa991921569ef08645a1014db",
      "pinout": {
        "ui[0]": "index[0]",
        "ui[1]": "index[1]",
        "ui[2]": "index[2]",
        "ui[3]": "index[3]",
        "ui[4]": "data[0]",
        "ui[5]": "data[1]",
        "ui[6]": "data[2]",
        "ui[7]": "data[3]",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "out[8]",
        "uio[1]": "out[9]",
        "uio[2]": "out[10]",
        "uio[3]": "out[11]",
        "uio[4]": "instruction [0]",
        "uio[5]": "instruction [1]",
        "uio[6]": "load",
        "uio[7]": "run"
      }
    },
    {
      "macro": "tt_um_fpu",
      "address": 590,
      "title": "Dgrid_FPU",
      "author": "Aravind-Prasad-Abhinav-Prakash",
      "description": "4 Input FPU for MAC at 40MHZ",
      "clock_hz": 40000000,
      "tiles": "4x2",
      "analog_pins": [],
      "repo": "https://github.com/fabricchip/tt06_um_fpu",
      "commit": "a0db1e19141ae2860879177c93617f09242a575a",
      "pinout": {
        "ui[0]": "Bit 0 Input",
        "ui[1]": "Bit 1 Input",
        "ui[2]": "Bit 2 Input",
        "ui[3]": "Bit 3 Input",
        "ui[4]": "Bit 4 Input",
        "ui[5]": "Bit 5 Input",
        "ui[6]": "Bit 6 Input",
        "ui[7]": "Bit 7 Input",
        "uo[0]": "Bit 0 Output",
        "uo[1]": "Bit 1 Output",
        "uo[2]": "Bit 2 Output",
        "uo[3]": "Bit 3 Output",
        "uo[4]": "Bit 4 Output",
        "uo[5]": "Bit 5 Output",
        "uo[6]": "Bit 6 Output",
        "uo[7]": "Bit 7 Output",
        "uio[0]": "Output used as valid Signal",
        "uio[1]": "Output used as valid Signal",
        "uio[2]": "Output used as valid Signal",
        "uio[3]": "Output used as valid Signal",
        "uio[4]": "0",
        "uio[5]": "0",
        "uio[6]": "0",
        "uio[7]": "0"
      }
    },
    {
      "macro": "tt_um_frq_divider",
      "address": 675,
      "title": "clk frequency divider controled by rom",
      "author": "Gilberto Ramos Valenzuela",
      "description": "Clock divider control by ROM",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/brtgio/frq_divider_ROM_controled",
      "commit": "47257925c00053a41c81b86bbb68ac2c9752087d",
      "pinout": {
        "ui[0]": "F_select [0]",
        "ui[1]": "F_select [1]",
        "ui[2]": "F_select [2]",
        "ui[3]": "F_select [3]",
        "ui[4]": "F_select [4]",
        "ui[5]": "reset_n",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "clk",
        "uio[1]": "clk_out",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_fstolzcode",
      "address": 14,
      "title": "Tiny Zuse",
      "author": "Florian Stolz",
      "description": "Minimal Implementation of a Zuse Z3-style FPU for Addition/Subtraction",
      "clock_hz": 10000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/fstolzcode/tt06-tinyZuse",
      "commit": "fcd1985da2ff437954392caaf54e7910af6283c8",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "rx",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "tx",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_g3f",
      "address": 682,
      "title": "Generador digital trif\u00e1sico",
      "author": "Jes\u00fas Garc\u00eda Guzm\u00e1n, Jorge Rafael Frantos Morales, Brian Isa\u00edas Landa Le\u00f3n, Alan Eduardo Peralta Fuentes, Juan Jos\u00e9 Guzm\u00e1n Lagunes, Adolfo de Jes\u00fas Garc\u00eda M\u00e9ndez, Paola Gabriela Rodr\u00edguez S\u00e1nchez, Jos\u00e9 de Jes\u00fas S\u00e1nchez Hern\u00e1ndez",
      "description": "El proyecto consiste en un microgenerador digital trif\u00e1sico que tiene una se\u00f1al de reloj de entrada y produce tres se\u00f1ales de salida con desfases de 120\u00b0 entre s\u00ed, con el objetivo de demostrar su viabilidad y funcionalidad en aplicaciones de ingenier\u00eda el\u00e9ctrica y electr\u00f3nica.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/DeusJR/generador3f",
      "commit": "c66fb9b5dba770e2746fa7081f38bafcd1d37680",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "P2",
        "uio[1]": "P1",
        "uio[2]": "P0",
        "uio[3]": "Qc",
        "uio[4]": "Qb",
        "uio[5]": "Qa",
        "uio[6]": "no used",
        "uio[7]": "SE"
      }
    },
    {
      "macro": "tt_um_gabejessil_timer",
      "address": 41,
      "title": "2 Player Game",
      "author": " Gabriel Silva, Tristan Peterson, Conner F",
      "description": "Count down timer game",
      "clock_hz": 20000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/gabejessil/tt06-verilog-template",
      "commit": "aaf10a330eb7792b30f05dbd1caadc6b1ff1d09b",
      "pinout": {
        "ui[0]": "Start",
        "ui[1]": "Reset",
        "ui[2]": "Player 1",
        "ui[3]": "Player 2",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_gak25_8bit_cpu_ext",
      "address": 4,
      "title": "Most minimal extension of friend's 'CPU In a Week' in a day",
      "author": "Gregory Kollmer",
      "description": "8-bit Single-Cycle CPU",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/gak25/tt06-8bit-cpu-ext",
      "commit": "2ccac0ec37ac16846be40052159bc8ae92431993",
      "pinout": {
        "ui[0]": "Register 1 (R1) Address bit 0",
        "ui[1]": "Register 1 (R1) Address bit 1",
        "ui[2]": "Register 1 (R1) Address bit 2",
        "ui[3]": "Register 1 (R1) Address bit 3",
        "ui[4]": "Instruction ISA Opcode bit 0",
        "ui[5]": "Instruction ISA Opcode bit 1",
        "ui[6]": "Instruction ISA Opcode bit 2",
        "ui[7]": "Instruction ISA Opcode bit 3",
        "uo[0]": "Data out bit 0 (either register data / Processor stat)",
        "uo[1]": "Data out bit 1 (either register data / 0)",
        "uo[2]": "Data out bit 2 (either register data / 0)",
        "uo[3]": "Data out bit 3 (either register data / 0)",
        "uo[4]": "Data out bit 4 (either register data / 0)",
        "uo[5]": "Data out bit 5 (either register data / 0)",
        "uo[6]": "Data out bit 6 (either register data / 0)",
        "uo[7]": "Data out bit 7 (either register data / 0)",
        "uio[0]": "Data in bit 0 / Register 3 (R3) Address bit 0",
        "uio[1]": "Data in bit 1 / Register 3 (R3) Address bit 1",
        "uio[2]": "Data in bit 2 / Register 3 (R3) Address bit 2",
        "uio[3]": "Data in bit 3 / Register 3 (R3) Address bit 3",
        "uio[4]": "Data in bit 4 / Register 2 (R2) Address bit 0",
        "uio[5]": "Data in bit 5 / Register 2 (R2) Address bit 1",
        "uio[6]": "Data in bit 6 / Register 2 (R2) Address bit 2",
        "uio[7]": "Data in bit 7 / Register 2 (R2) Address bit 3"
      }
    },
    {
      "macro": "tt_um_gray_sobel",
      "address": 74,
      "title": "Gray scale and Sobel filter",
      "author": "Diana Natali Maldonado Ramirez",
      "description": "This project performs grayscale conversion and Sobel filtering with the aim of detecting edges in an image.",
      "clock_hz": 10000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/DianaNatali/tt06_grayscale_sobel",
      "commit": "eaf1b96ea2117d0325263d196315ca10acfda84c",
      "pinout": {
        "ui[0]": "spi_sck_i",
        "ui[1]": "spi_cs_i",
        "ui[2]": "spi_sdi_i",
        "ui[3]": "select_process_i[0]",
        "ui[4]": "select_process_i[1]",
        "ui[5]": "start_sobel_i",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "spi_sdo_o",
        "uo[1]": "lfsr_done",
        "uo[2]": "ena",
        "uo[3]": "output_px[0]",
        "uo[4]": "output_px[1]",
        "uo[5]": "output_px[2]",
        "uo[6]": "output_px[3]",
        "uo[7]": "output_px[4]",
        "uio[0]": "LFSR_enable_i",
        "uio[1]": "seed_stop_i",
        "uio[2]": "lfsr_en_i",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_guitar_pedal",
      "address": 518,
      "title": "Integrated Distorion Pedal",
      "author": "Nanik Adnani",
      "description": "A simple distortion pedal circuit - taped out! (hopefully)",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11,
        6
      ],
      "repo": "https://github.com/nanikgeorge/IntegratedGuitarPedal",
      "commit": "e67678f8421e0f0976a94ae9b18da3b47a0e492f",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "IN",
        "ua[1]": "OUT"
      }
    },
    {
      "macro": "tt_um_haeuslermarkus_fir_filter",
      "address": 128,
      "title": "FIR Filter with adaptable coefficients",
      "author": "Markus H\u00e4usler",
      "description": "FIR Filter with configurable coefficients via serial interface",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MrMisterial/tt06-FIR_FILTER_ADAPT",
      "commit": "247885227caf155d3a5144f5f97697fad07d52ed",
      "pinout": {
        "ui[0]": "FIR Input data Bit 0",
        "ui[1]": "FIR Input data Bit 1",
        "ui[2]": "FIR Input data Bit 2",
        "ui[3]": "FIR Input data Bit 3",
        "ui[4]": "FIR Input data Bit 4",
        "ui[5]": "FIR Input data Bit 5",
        "ui[6]": "FIR Input data Bit 6",
        "ui[7]": "FIR Input data Bit 7",
        "uo[0]": "FIR Output data Bit 0",
        "uo[1]": "FIR Output data Bit 1",
        "uo[2]": "FIR Output data Bit 2",
        "uo[3]": "FIR Output data Bit 3",
        "uo[4]": "FIR Output data Bit 4",
        "uo[5]": "FIR Output data Bit 5",
        "uo[6]": "FIR Output data Bit 6",
        "uo[7]": "FIR Output data Bit 7",
        "uio[0]": "FIR Output data Bit 8",
        "uio[1]": "FIR Output data Bit 9",
        "uio[2]": "FIR Output data Bit 10",
        "uio[3]": "not used",
        "uio[4]": "not used",
        "uio[5]": "not used",
        "uio[6]": "FIR CONFIG ENABLE",
        "uio[7]": "FIR TVALID Input"
      }
    },
    {
      "macro": "tt_um_histefan_top",
      "address": 200,
      "title": "Snake Game",
      "author": "Stefan Hirschb\u00f6ck",
      "description": "Simple implementation of the game Snake with VGA Output",
      "clock_hz": 25179000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/histefan/jku-tt06-snake_game",
      "commit": "a658755e60fcc4273e1e7f7600d75b8d26528bcc",
      "pinout": {
        "ui[0]": "none",
        "ui[1]": "none",
        "ui[2]": "none",
        "ui[3]": "none",
        "ui[4]": "Right",
        "ui[5]": "Left",
        "ui[6]": "Down",
        "ui[7]": "Up",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "vsync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "hsync",
        "uio[0]": "none",
        "uio[1]": "none",
        "uio[2]": "none",
        "uio[3]": "none",
        "uio[4]": "none",
        "uio[5]": "none",
        "uio[6]": "none",
        "uio[7]": "none"
      }
    },
    {
      "macro": "tt_um_hpretl_tt06_tdc",
      "address": 35,
      "title": "Synthesized Time-to-Digital Converter (TDC)",
      "author": "Harald Pretl",
      "description": "Synthesized TDC based on an interleaved delay line",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/iic-jku/jku-tt06-tdc-v1",
      "commit": "beeb8db07992302216fbea7e0da7845b8ada2a2c",
      "pinout": {
        "ui[0]": "Start signal of TDC (stop signal is clk)",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "output select",
        "ui[5]": "output select",
        "ui[6]": "output select",
        "ui[7]": "output select",
        "uo[0]": "Result LSB",
        "uo[1]": "Result",
        "uo[2]": "Result",
        "uo[3]": "Result",
        "uo[4]": "Result",
        "uo[5]": "Result",
        "uo[6]": "Result",
        "uo[7]": "Result MSB",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_hpretl_tt06_tdc_v2",
      "address": 109,
      "title": "Synthesized Time-to-Digital Converter (TDC) v2",
      "author": "Harald Pretl",
      "description": "Synthesized TDC based on two Vernier delay rings",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/iic-jku/jku-tt06-tdc-v2",
      "commit": "bcbf8005357ad638f9322f2670529f496db173e8",
      "pinout": {
        "ui[0]": "Start signal of TDC",
        "ui[1]": "Stop signal of the TDC",
        "ui[2]": "Select result of ring for output",
        "ui[3]": "output select (LSB)",
        "ui[4]": "output select",
        "ui[5]": "output select",
        "ui[6]": "output select",
        "ui[7]": "output select (MSB)",
        "uo[0]": "Result (LSB)",
        "uo[1]": "Result",
        "uo[2]": "Result",
        "uo[3]": "Result",
        "uo[4]": "Result",
        "uo[5]": "Result",
        "uo[6]": "Result",
        "uo[7]": "Result (MSB)",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_hpretl_tt06_tempsens",
      "address": 975,
      "title": "Temperature Sensor NG",
      "author": "Harald Pretl",
      "description": "Temperature sensor synthesized from standard cells",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/iic-jku/jku-tt06-tempsens-ng",
      "commit": "86374fe2985e8dc0e87c875ebfafb0f05a2df44a",
      "pinout": {
        "ui[0]": "DAC code [0]",
        "ui[1]": "DAC code [1]",
        "ui[2]": "DAC code [2]",
        "ui[3]": "DAC code [3]",
        "ui[4]": "DAC code [4]",
        "ui[5]": "DAC code [5]",
        "ui[6]": "output selection [0]",
        "ui[7]": "output selection [1]",
        "uo[0]": "out[0] or out[8] or out[16]",
        "uo[1]": "out[1] or out[9] or out[17]",
        "uo[2]": "out[2] or out[10] or out[18]",
        "uo[3]": "out[3] or out[11] or out[19]",
        "uo[4]": "out[4] or out[12]",
        "uo[5]": "out[5] or out[13]",
        "uo[6]": "out[6] or out[14]",
        "uo[7]": "out[7] or out[15]",
        "uio[0]": "debug sel [0]",
        "uio[1]": "debug sel [1]",
        "uio[2]": "debug sel [2]",
        "uio[3]": "debug sel [3]",
        "uio[4]": "debug out [0]",
        "uio[5]": "debug out [1]",
        "uio[6]": "debug out [2]",
        "uio[7]": "debug out [3]"
      }
    },
    {
      "macro": "tt_um_hsc_tdc",
      "address": 2,
      "title": "UCSC HW Systems Collective, TDC",
      "author": "Tyler Sheaves, Phillip Marlowe, & Dustin Richmond",
      "description": "A tiny TDC constructed entirely of standard cells. Skywater130 FA-2 delay element",
      "clock_hz": 17241379,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/tsheaves/tt06_hsc_tdc",
      "commit": "3b7c1775392a0b343a1ba7a2c56242b2c3b7bcd8",
      "pinout": {
        "ui[0]": "lanuch clock",
        "ui[1]": "capture clock",
        "ui[2]": "pg_src",
        "ui[3]": "pg_bypass",
        "ui[4]": "pg_in",
        "ui[5]": "pg_tog",
        "ui[6]": "valid_in",
        "ui[7]": "",
        "uo[0]": "hw[0]",
        "uo[1]": "hw[1]",
        "uo[2]": "hw[2]",
        "uo[3]": "hw[3]",
        "uo[4]": "hw[4]",
        "uo[5]": "hw[5]",
        "uo[6]": "hw[6]",
        "uo[7]": "valid_out",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_hsc_tdc_buf",
      "address": 70,
      "title": "UCSC HW Systems Collective, TDC - BUF2x1",
      "author": "Phillip Marlowe, Tyler Sheaves, & Dustin Richmond",
      "description": "A tiny TDC constructed entirely of standard cells. Skywater130 AND-2 delay element",
      "clock_hz": 17241379,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/phillipmmarlowe/tt06_hsc_tdc_buf_delay",
      "commit": "2c3342e009fee165f59116a5886f76d84bfd513b",
      "pinout": {
        "ui[0]": "lanuch clock",
        "ui[1]": "capture clock",
        "ui[2]": "pg_src",
        "ui[3]": "pg_bypass",
        "ui[4]": "pg_in",
        "ui[5]": "pg_tog",
        "ui[6]": "valid_in",
        "ui[7]": "",
        "uo[0]": "hw[0]",
        "uo[1]": "hw[1]",
        "uo[2]": "hw[2]",
        "uo[3]": "hw[3]",
        "uo[4]": "hw[4]",
        "uo[5]": "hw[5]",
        "uo[6]": "hw[6]",
        "uo[7]": "valid_out",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_hsc_tdc_mux",
      "address": 72,
      "title": "UCSC HW Systems Collective, TDC - MUX2x1",
      "author": "Phillip Marlowe, Tyler Sheaves, & Dustin Richmond",
      "description": "A tiny TDC constructed entirely of standard cells. Skywater130 MUX2x1 delay element",
      "clock_hz": 40000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/phillipmmarlowe/tt06_hsc_tdc_mux_delay",
      "commit": "361b50b05c40bc3ff0f09963d5b7e0aac11b97e9",
      "pinout": {
        "ui[0]": "lanuch clock",
        "ui[1]": "capture clock",
        "ui[2]": "pg_src",
        "ui[3]": "pg_bypass",
        "ui[4]": "pg_in",
        "ui[5]": "pg_tog",
        "ui[6]": "valid_in",
        "ui[7]": "",
        "uo[0]": "hw[0]",
        "uo[1]": "hw[1]",
        "uo[2]": "hw[2]",
        "uo[3]": "hw[3]",
        "uo[4]": "hw[4]",
        "uo[5]": "hw[5]",
        "uo[6]": "hw[6]",
        "uo[7]": "valid_out",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_htfab_flash_adc",
      "address": 484,
      "title": "Flash ADC",
      "author": "htfab",
      "description": "4-bit flash ADC with binary encoder",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        0
      ],
      "repo": "https://github.com/htfab/flash-adc",
      "commit": "312eb07e26847df21e06ecef99efba540aa4ea6c",
      "pinout": {
        "ui[0]": "debug encoder (skip ADC)",
        "ui[1]": "debug ADC (skip encoder)",
        "ui[2]": "unary selector bit 0",
        "ui[3]": "unary selector bit 1",
        "ui[4]": "(debug mode only)",
        "ui[5]": "(debug mode only)",
        "ui[6]": "(debug mode only)",
        "ui[7]": "(debug mode only)",
        "uo[0]": "binary bit 0",
        "uo[1]": "binary bit 1",
        "uo[2]": "binary bit 2",
        "uo[3]": "binary bit 3",
        "uo[4]": "unary bit 1",
        "uo[5]": "unary bit 5",
        "uo[6]": "unary bit 9",
        "uo[7]": "unary bit 13",
        "uio[0]": "xor of unary bits 0, 4, 8, 12",
        "uio[1]": "xor of unary bits 1, 5, 9, 13",
        "uio[2]": "xor of unary bits 2, 6, 10, 14",
        "uio[3]": "xor of unary bits 3, 7, 11",
        "uio[4]": "unary bit 4*sel",
        "uio[5]": "unary bit 4*sel+1",
        "uio[6]": "unary bit 4*sel+2",
        "uio[7]": "unary bit 4*sel+3",
        "ua[0]": "ADC input"
      }
    },
    {
      "macro": "tt_um_i_tree_batzolislefteris",
      "address": 425,
      "title": "Anomaly Detection using Isolation trees",
      "author": "Eleftherios Batzolis",
      "description": "Uses an isolation tree to check for anomalies during the operation of a device",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Lefteris-B/i_tree",
      "commit": "f64cf2af6737eb5276a3764de515a9b09ad8e0a7",
      "pinout": {
        "ui[0]": "sensor_data",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "anomaly_detected",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ian_keypad_controller",
      "address": 224,
      "title": "Keypad controller",
      "author": "Ian Tawileh",
      "description": "Reads a keypad and displays the number on the 7 segment",
      "clock_hz": 1000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/tt06-ian-keypad-controller",
      "commit": "4cd31615a22fdf6d52d2c99a4cfa8c74ff9f32f1",
      "pinout": {
        "ui[0]": "row0",
        "ui[1]": "row1",
        "ui[2]": "row2",
        "ui[3]": "row3",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "7 segment display outputs",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "col0",
        "uio[1]": "col1",
        "uio[2]": "col2",
        "uio[3]": "col3",
        "uio[4]": "col counter 0",
        "uio[5]": "col counter 1",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_iron_violet_simon",
      "address": 907,
      "title": "Iron Violet",
      "author": "John Cope",
      "description": "It's a little memory game, as a treat.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/johnbentcope/iron_violet",
      "commit": "a276d861fa2cda700f697511bb313295f9e97b10",
      "pinout": {
        "ui[0]": "Red Button",
        "ui[1]": "Yellow Button",
        "ui[2]": "Green Button",
        "ui[3]": "Blue Button",
        "ui[4]": "Start Game",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Red Lamp",
        "uo[1]": "Yellow Lamp",
        "uo[2]": "Green Lamp",
        "uo[3]": "Blue Lamp",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ja1tye_tiny_cpu",
      "address": 166,
      "title": "Tiny 8-bit CPU",
      "author": "Ryota Suzuki",
      "description": "Tiny 8-bit CPU with SPI Flash/PSRAM controller",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JA1TYE/tt06-TYE-tiny-cpu",
      "commit": "2501d89698e68903f30cbd2388599767cd9474b2",
      "pinout": {
        "ui[0]": "MISO input from SPI Flash/PSRAM",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "SCLK output to SPI Flash/PSRAM",
        "uo[1]": "CS output to SPI Flash",
        "uo[2]": "CS output to PSRAM",
        "uo[3]": "MOSI output to SPI Flash/PSRAM",
        "uo[4]": "SCLK output for debugging",
        "uo[5]": "MOSI output for debugging",
        "uo[6]": "CS output for debugging",
        "uo[7]": "Fetch cycle indicator pulse for debbuging",
        "uio[0]": "General purpose I/O",
        "uio[1]": "General purpose I/O",
        "uio[2]": "General purpose I/O",
        "uio[3]": "General purpose I/O",
        "uio[4]": "General purpose output",
        "uio[5]": "General purpose output",
        "uio[6]": "General purpose output",
        "uio[7]": "General purpose output"
      }
    },
    {
      "macro": "tt_um_jduchniewicz_prng",
      "address": 294,
      "title": "8-bit PRNG",
      "author": "Jakub Duchniewicz",
      "description": "Pure Random Noise Generator using Linear Feedback Shift Register with 2 halves of the 16-bit internal states shifted in different directions and xor'ed",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JDuchniewicz/tt06-PRNG",
      "commit": "4f17439911239ba107aeb5a930fd4175945f0c2e",
      "pinout": {
        "ui[0]": "Bit 0 initial PRNG seed",
        "ui[1]": "Bit 1 initial PRNG seed",
        "ui[2]": "Bit 2 initial PRNG seed",
        "ui[3]": "Bit 3 initial PRNG seed",
        "ui[4]": "Bit 4 initial PRNG seed",
        "ui[5]": "Bit 5 initial PRNG seed",
        "ui[6]": "Bit 6 initial PRNG seed",
        "ui[7]": "Bit 7 initial PRNG seed",
        "uo[0]": "Bit 0 output noise",
        "uo[1]": "Bit 1 output noise",
        "uo[2]": "Bit 2 output noise",
        "uo[3]": "Bit 3 output noise",
        "uo[4]": "Bit 4 output noise",
        "uo[5]": "Bit 5 output noise",
        "uo[6]": "Bit 6 output noise",
        "uo[7]": "Bit 7 output noise",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_jorgenkraghjakobsen_toi2s",
      "address": 6,
      "title": "SPDIF to I2S decoder",
      "author": "J\u00f8rgen Kragh Jakobsen",
      "description": "Convert audio from SPDIF to I2S format for ClassD amp MA12070p",
      "clock_hz": 48000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/jorgenkraghjakobsen/tt06-toi2s",
      "commit": "f71864626039cb67e4bae4673abc16af82b73e91",
      "pinout": {
        "ui[0]": "rx_in",
        "ui[1]": "debug_in",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "amp_i2s_bck",
        "uo[1]": "amp_i2s_ws",
        "uo[2]": "amp_i2s_d0",
        "uo[3]": "amp_nenable",
        "uo[4]": "amp_nmute",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "pwm_out",
        "uio[0]": "i2c_scl",
        "uio[1]": "i2c_sda",
        "uio[2]": "amp_i2c_scl",
        "uio[3]": "amp_i2c_sda",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_jv_sigdel",
      "address": 482,
      "title": "1st passive Sigma Delta ADC",
      "author": "Joerg Vollrath",
      "description": "External R1 and R2 and C2 realize a ADC",
      "clock_hz": 1000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/JVollrath/tt06_jv_sigdel_v",
      "commit": "6725319ea7d73496fad411689efb281ca0485f81",
      "pinout": {
        "ui[0]": "Input voltage input voltage R1, uo5 R2, C attached",
        "ui[1]": "Sampling clock conf1",
        "ui[2]": "Sampling clock conf2",
        "ui[3]": "OSR conf1",
        "ui[4]": "OSR conf2",
        "ui[5]": "SINC1,2,3 conf1",
        "ui[6]": "SINC1,2,3 conf2",
        "ui[7]": "pwm output enable",
        "uo[0]": "ADC 0 LSB",
        "uo[1]": "ADC 1",
        "uo[2]": "ADC 2",
        "uo[3]": "ADC 3 MSB",
        "uo[4]": "replicate ui0",
        "uo[5]": "invert ui0 R2",
        "uo[6]": "pwm upper",
        "uo[7]": "pwm lower",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_kevinwguan",
      "address": 263,
      "title": "Crossbar Array",
      "author": "Kevin Guan",
      "description": "Analog Matrix Multiplication with 64x64 array",
      "clock_hz": 0,
      "tiles": "4x2",
      "analog_pins": [
        11,
        6,
        10,
        7,
        9,
        8
      ],
      "repo": "https://github.com/kevinwguan/tt06-kevinwguan",
      "commit": "85a58b622ff07f1705e95ab0b0e376a99c2e2e03",
      "pinout": {
        "ui[0]": "bit control 1",
        "ui[1]": "bit control 2",
        "ui[2]": "bit control 3",
        "ui[3]": "bit control 4",
        "ui[4]": "write/select control 1",
        "ui[5]": "write/select control 2",
        "ui[6]": "write/select control 3",
        "ui[7]": "write/select control 4",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "bit 1",
        "ua[1]": "bit 2",
        "ua[2]": "bit 3",
        "ua[3]": "bit 4",
        "ua[4]": "write 1",
        "ua[5]": "select 1"
      }
    },
    {
      "macro": "tt_um_kianV_rv32ima_uLinux_SoC",
      "address": 910,
      "title": "KianV uLinux SoC",
      "author": "Hirosh Dabui",
      "description": "A RISC-V ASIC that can boot \u03bcLinux.",
      "clock_hz": 0,
      "tiles": "8x2",
      "analog_pins": [],
      "repo": "https://github.com/splinedrive/KianV-RV32IMA-RISC-V-uLinux-SoC",
      "commit": "70facbbd14b78b76a96913c6e0e7190ca77ed816",
      "pinout": {
        "ui[0]": "uart_rx",
        "ui[1]": "spi_sio1_so_miso0",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "spi_cen0",
        "uo[1]": "spi_sclk0",
        "uo[2]": "spi_sio0_si_mosi0",
        "uo[3]": "led[0]",
        "uo[4]": "uart_tx",
        "uo[5]": "led[1]",
        "uo[6]": "led[2]",
        "uo[7]": "led[3]",
        "uio[0]": "ce0 flash",
        "uio[1]": "sio0",
        "uio[2]": "sio1",
        "uio[3]": "sck",
        "uio[4]": "sd2",
        "uio[5]": "sd3",
        "uio[6]": "cs1 psram",
        "uio[7]": "always high"
      }
    },
    {
      "macro": "tt_um_koconnor_kstep",
      "address": 68,
      "title": "kstep",
      "author": "Kevin OConnor",
      "description": "Generate step/dir pulses for stepper motor drivers",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/KevinOConnor/tt06-kstep",
      "commit": "98a794a3c3f6458b4456fc1abfc772b5d665b772",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "step",
        "uo[1]": "dir",
        "uo[2]": "other2",
        "uo[3]": "other3",
        "uo[4]": "other4",
        "uo[5]": "other5",
        "uo[6]": "other6",
        "uo[7]": "other7",
        "uio[0]": "spi_cs",
        "uio[1]": "spi_mosi",
        "uio[2]": "spi_miso",
        "uio[3]": "spi_sclk",
        "uio[4]": "signal_irq",
        "uio[5]": "signal_shutdown",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ks_pyamnihc",
      "address": 132,
      "title": "Karplus-Strong String Synthesis",
      "author": "Chinmay Patil",
      "description": "A KS String Audio Synthesizer ",
      "clock_hz": 256000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/pyamnihc/tt06_um_ks_pyamnihc",
      "commit": "26b00f4b5be491b993244667f175b148313f6a84",
      "pinout": {
        "ui[0]": "~rst_n_prbs_15, ~rst_n_prbs_7",
        "ui[1]": "load_prbs_15, load_prbs_7",
        "ui[2]": "freeze_prbs_15",
        "ui[3]": "freeze_prbs_7",
        "ui[4]": "i2s_noise_sel",
        "ui[5]": "~rst_n_ks_string",
        "ui[6]": "pluck",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "sck_i",
        "uio[1]": "sdi_i",
        "uio[2]": "sdo_o",
        "uio[3]": "cs_ni",
        "uio[4]": "i2s_sck_o",
        "uio[5]": "i2s_ws_o",
        "uio[6]": "i2s_sd_o",
        "uio[7]": "prbs_15"
      }
    },
    {
      "macro": "tt_um_kwilke_cdc_fifo",
      "address": 170,
      "title": "Clock Domain Crossing FIFO",
      "author": "Kenneth Wilke",
      "description": "This FIFO buffers 4-bits data asynchronously across clock domains",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/KennethWilke/tt06-cdc-fifo",
      "commit": "287342574432c10868820e04fdf03eae875ccf4c",
      "pinout": {
        "ui[0]": "write_clock",
        "ui[1]": "write_increment",
        "ui[2]": "read_clock",
        "ui[3]": "read_increment",
        "ui[4]": "write_data0",
        "ui[5]": "write_data1",
        "ui[6]": "write_data2",
        "ui[7]": "write_data3",
        "uo[0]": "empty",
        "uo[1]": "full",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "read_data0",
        "uo[5]": "read_data1",
        "uo[6]": "read_data2",
        "uo[7]": "read_data3",
        "uio[0]": "write_reset",
        "uio[1]": "read_reset",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_lancemitrex",
      "address": 739,
      "title": "DIP Switch to HEX 7-segment Display",
      "author": "Lance Mitrex",
      "description": "Input Binary digit, 1 to 16 with the DIP Switch. The HEX is displayed on the 7-segment display.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/lancemitrex/tt06-verilog-template",
      "commit": "54a8ea9bcadbe32a016b00ffef3fc9a945515ead",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ledcontroller_Gatsch",
      "address": 961,
      "title": "ledcontroller",
      "author": "Mathias Garstenauer",
      "description": "A WS2812b addressable LED controller configurable via I2C",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Gatsch/jku-tt06-ledcontroller",
      "commit": "4806b743af8bbe20f52643bc9ab53b6365ec2355",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "i2c SCL alternative for PNP open collector",
        "uo[1]": "i2c SDA alternative for PNP open collector",
        "uo[2]": "ws2812b LED output",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "i2c SCL",
        "uio[1]": "i2c SDA",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_lipsi_schoeberl",
      "address": 427,
      "title": "Lipsi: Probably the Smallest Processor in the World",
      "author": "Martin Schoeberl",
      "description": "A tiny 8-bit accumulator based microprocssor.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/schoeberl/tt06-lipsi",
      "commit": "9f85676dfb8be0bb1ce16978da9a805158a5b03f",
      "pinout": {
        "ui[0]": "input for Lipsi, also switch of blinking LED",
        "ui[1]": "input for Lipsi",
        "ui[2]": "input for Lipsi",
        "ui[3]": "input for Lipsi",
        "ui[4]": "input for Lipsi",
        "ui[5]": "input for Lipsi",
        "ui[6]": "input for Lipsi",
        "ui[7]": "input for Lipsi",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "dp (blinking)",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_lisa",
      "address": 974,
      "title": "LISA 8-Bit Microcontroller",
      "author": "Ken Pettit",
      "description": "8-Bit Microcontroller SOC with 128 bytes DFFRAM module",
      "clock_hz": 22000000,
      "tiles": "8x2",
      "analog_pins": [],
      "repo": "https://github.com/kdp1965/tt06-um-lisa",
      "commit": "71e7151f7ae0742d06a9302aa888a4836e294f7b",
      "pinout": {
        "ui[0]": "pa_in[0]/baud_div[0]",
        "ui[1]": "pa_in[1]/baud_div[1]",
        "ui[2]": "pa_in[2]/baud_div[2]",
        "ui[3]": "pa_in[3]/baud_div[3]/rx",
        "ui[4]": "pa_in[4]/baud_div[4]",
        "ui[5]": "pa_in[5]/baud_div[5]",
        "ui[6]": "pa_in[6]/baud_div[6]",
        "ui[7]": "pa_in[7]/baud_set",
        "uo[0]": "pb_out[0]",
        "uo[1]": "pb_out[1]",
        "uo[2]": "pb_out[2]",
        "uo[3]": "pb_out[3]",
        "uo[4]": "pb_out[4]/tx",
        "uo[5]": "pb_out[5]",
        "uo[6]": "pb_out[6]",
        "uo[7]": "pb_out[7]/baud_clk",
        "uio[0]": "ce0/ce_latch",
        "uio[1]": "mosi/dq1/ce0",
        "uio[2]": "miso/dq2/ce1",
        "uio[3]": "sclk",
        "uio[4]": "rx  /pc_io[0]/scl/sda",
        "uio[5]": "tx  /pc_io[1]/sda/scl",
        "uio[6]": "scl /pc_io[2]/dq2/rx",
        "uio[7]": "sda/pc_io[3]/dq3"
      }
    },
    {
      "macro": "tt_um_liu3hao_rv32e_min_mcu",
      "address": 258,
      "title": "tt06-RV32E_MinMCU",
      "author": "Weihao Liu",
      "description": "Microcontroller RV32E implementation. Supports inputs, outputs, GPIOs, UART and SPI.",
      "clock_hz": 24000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/liu3hao/tt06-rv32e_minmcu",
      "commit": "31cec831f64c55b79a0359b3e29fd1334069a3d6",
      "pinout": {
        "ui[0]": "IN0/UART-CTS",
        "ui[1]": "IN1",
        "ui[2]": "SPI-MISO",
        "ui[3]": "IN2",
        "ui[4]": "IN3",
        "ui[5]": "IN4",
        "ui[6]": "EN_DEBUG",
        "ui[7]": "UART-TX",
        "uo[0]": "UART-RX",
        "uo[1]": "OUT0/UART-RTS",
        "uo[2]": "OUT1",
        "uo[3]": "SPI-MOSI",
        "uo[4]": "SPI-CS1",
        "uo[5]": "SPI-SCLK",
        "uo[6]": "OUT2",
        "uo[7]": "OUT3",
        "uio[0]": "SPI-CS2",
        "uio[1]": "IO0",
        "uio[2]": "IO1",
        "uio[3]": "IO2",
        "uio[4]": "IO3",
        "uio[5]": "IO4",
        "uio[6]": "IO5",
        "uio[7]": "IO6"
      }
    },
    {
      "macro": "tt_um_lk_ans_top",
      "address": 194,
      "title": "ANS Encoder/Decoder",
      "author": "Davide Asnaghi & Lenny Khazan",
      "description": "Asymmetric Numeral Systems Encoder/Decoder",
      "clock_hz": 25000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/LK/tt06-ans",
      "commit": "4573843406d63b90c5c67fc616e9df3d7407973e",
      "pinout": {
        "ui[0]": "input",
        "ui[1]": "input",
        "ui[2]": "input",
        "ui[3]": "input",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "output",
        "uo[1]": "output",
        "uo[2]": "output",
        "uo[3]": "output",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "cmd",
        "uio[1]": "cmd",
        "uio[2]": "in_vld",
        "uio[3]": "out_rdy",
        "uio[4]": "in_rdy",
        "uio[5]": "out_vld",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_loco_choco",
      "address": 491,
      "title": "BF Processor",
      "author": "Ivan Pancheniak",
      "description": "Implementation of a Brainf*ck processor in hardware",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/loco-choco/tt-bf-processor",
      "commit": "b65fa57f35552c92e80a675ba81ec542ebc2f3a4",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Write",
        "uo[1]": "Addr",
        "uo[2]": "Instr_Addr",
        "uo[3]": "PC_Ext_8",
        "uo[4]": "PC_Ext_9",
        "uo[5]": "PC_Ext_10",
        "uo[6]": "PC_Ext_11",
        "uo[7]": "PC_Ext_12",
        "uio[0]": "Data_0",
        "uio[1]": "Data_1",
        "uio[2]": "Data_2",
        "uio[3]": "Data_3",
        "uio[4]": "Data_4",
        "uio[5]": "Data_5",
        "uio[6]": "Data_6",
        "uio[7]": "Data_7"
      }
    },
    {
      "macro": "tt_um_lucaz97_monobit",
      "address": 718,
      "title": "Monobit Test",
      "author": "Luca Collini",
      "description": "HLS implementation of NIST 800.22 Monobit Test for RNGs.",
      "clock_hz": 50000000,
      "tiles": "4x2",
      "analog_pins": [],
      "repo": "https://github.com/Lucaz97/tt06-monoibit-test",
      "commit": "2c55c8900b5dd3a54507179fba0f70c60b987c17",
      "pinout": {
        "ui[0]": "epsilon",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "is_random",
        "uo[1]": "is_random_triosy_lz",
        "uo[2]": "valid",
        "uo[3]": "valid_triosy_lz",
        "uo[4]": "epsilon_triosy_lz",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_lucaz97_rng_tests",
      "address": 842,
      "title": "rng Test",
      "author": "Luca Collini",
      "description": "HLS implementation of NIST 800.22 Monobit Test for RNGs.",
      "clock_hz": 50000000,
      "tiles": "6x2",
      "analog_pins": [],
      "repo": "https://github.com/Lucaz97/tt06_RNG2",
      "commit": "c9e1789b21a091a39848718014af9bccbd3de120",
      "pinout": {
        "ui[0]": "epsilon",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "is_random",
        "uo[1]": "is_random_triosy_lz",
        "uo[2]": "valid",
        "uo[3]": "valid_triosy_lz",
        "uo[4]": "epsilon_triosy_lz",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_mattvenn_inverter",
      "address": 486,
      "title": "Double Inverter",
      "author": "Matt Venn",
      "description": "A little inverter followed by a bigger one",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        5,
        0
      ],
      "repo": "https://github.com/mattvenn/tt06-inverter",
      "commit": "4efe453fc1028e0a57fe4273216b5590e355f0eb",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "output",
        "ua[1]": "input"
      }
    },
    {
      "macro": "tt_um_mattvenn_r2r_dac",
      "address": 229,
      "title": "Analog 8bit R2R DAC",
      "author": "Matt Venn",
      "description": "A simple 8 bit DAC with a sawtooth waveform driver",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        4
      ],
      "repo": "https://github.com/mattvenn/tt06-analog-r2r-dac",
      "commit": "1cb52fca06457504f3f6d1042522a58c63666823",
      "pinout": {
        "ui[0]": "bit 0",
        "ui[1]": "bit 1",
        "ui[2]": "bit 2",
        "ui[3]": "bit 3",
        "ui[4]": "bit 4",
        "ui[5]": "bit 5",
        "ui[6]": "bit 6",
        "ui[7]": "bit 7",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "external data",
        "uio[1]": "load divider",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "DAC output"
      }
    },
    {
      "macro": "tt_um_mattvenn_relax_osc",
      "address": 516,
      "title": "Relaxation oscillator",
      "author": "Matt Venn",
      "description": "A relaxation oscillator",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        10
      ],
      "repo": "https://github.com/mattvenn/tt06-analog-relax-osc",
      "commit": "68e9167f9d1173ab497c1a8dadec5639c0205b1b",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "inverted output of oscillator",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "analog oscillator output"
      }
    },
    {
      "macro": "tt_um_mattvenn_rgb_mixer",
      "address": 76,
      "title": "RGB Mixer demo",
      "author": "Matt Venn",
      "description": "Zero to ASIC demo project",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/tt06-rgb-mixer",
      "commit": "73b9b9a8ad9f6e2656c30faa81a76aee2b797b00",
      "pinout": {
        "ui[0]": "enc0 a",
        "ui[1]": "enc0 b",
        "ui[2]": "enc1 a",
        "ui[3]": "enc1 b",
        "ui[4]": "enc2 a",
        "ui[5]": "enc2 b",
        "ui[6]": "debug bit 0",
        "ui[7]": "debug bit 1",
        "uo[0]": "pwm0",
        "uo[1]": "pwm1",
        "uo[2]": "pwm2",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "encoder bit 0",
        "uio[1]": "encoder bit 1",
        "uio[2]": "encoder bit 2",
        "uio[3]": "encoder bit 3",
        "uio[4]": "encoder bit 4",
        "uio[5]": "encoder bit 5",
        "uio[6]": "encoder bit 6",
        "uio[7]": "encoder bit 7"
      }
    },
    {
      "macro": "tt_um_mayrmichael_wave_generator",
      "address": 965,
      "title": "Wave Generator",
      "author": "Michael Mayr",
      "description": "Generates various functions, such as a sine wave, a sawtooth wave, a triangular wave and a squared wave.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MayrMichael/jku-tt06-wave-generator",
      "commit": "d1394deb27e4bb8574b11e75e5b4c50c66330528",
      "pinout": {
        "ui[0]": "parameter bit 0 (LSB)",
        "ui[1]": "parameter bit 1",
        "ui[2]": "parameter bit 2",
        "ui[3]": "parameter bit 3",
        "ui[4]": "parameter bit 4",
        "ui[5]": "parameter bit 5",
        "ui[6]": "parameter bit 6",
        "ui[7]": "parameter bit 7 (MSB)",
        "uo[0]": "output wave bit 0",
        "uo[1]": "output wave bit 1",
        "uo[2]": "output wave bit 2",
        "uo[3]": "output wave bit 3",
        "uo[4]": "output wave bit 4",
        "uo[5]": "output wave bit 5",
        "uo[6]": "output wave bit 6",
        "uo[7]": "output wave bit 7",
        "uio[0]": "(input) enable pin",
        "uio[1]": "(input) waveform bit 0 pin",
        "uio[2]": "(input) waveform bit 1 pin",
        "uio[3]": "(input) set phase pin",
        "uio[4]": "(input) set amplitude pin",
        "uio[5]": "(output) spi cs pin",
        "uio[6]": "(output) spi mosi pin",
        "uio[7]": "(output) spi clk pin"
      }
    },
    {
      "macro": "tt_um_mbalestrini_usb_cdc_devices",
      "address": 198,
      "title": "Two ports USB CDC device",
      "author": "Maximo Balestrini",
      "description": "USB CDC device with two ports each with a different application",
      "clock_hz": 48000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/mbalestrini/tt06_usb_cdc_devices",
      "commit": "92779250e175710777d344158f9dc6c0c05a3b0f",
      "pinout": {
        "ui[0]": "input_0",
        "ui[1]": "input_1",
        "ui[2]": "input_2",
        "ui[3]": "input_3",
        "ui[4]": "input_4",
        "ui[5]": "input_5",
        "ui[6]": "input_6",
        "ui[7]": "input_7",
        "uo[0]": "usb_pu",
        "uo[1]": "debug_led",
        "uo[2]": "debug_usb_configured",
        "uo[3]": "debug_usb_tx_en",
        "uo[4]": "debug_frame[0]",
        "uo[5]": "debug_frame[1]",
        "uo[6]": "debug_frame[2]",
        "uo[7]": "debug_frame[3]",
        "uio[0]": "usp_p",
        "uio[1]": "usb_n",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_meiniKi_tt06_fazyrv_exotiny",
      "address": 462,
      "title": "FazyRV-ExoTiny",
      "author": "Meinhard Kissich",
      "description": "A minimal SoC based on FazyRV that uses external QSPI ROM and RAM.",
      "clock_hz": 50000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/meiniKi/tt06-FazyRV-ExoTiny",
      "commit": "e24b5aafedee201b78a3fe98d4c8158c1a4dee87",
      "pinout": {
        "ui[0]": "General purpose input (GPI) 0.",
        "ui[1]": "General purpose input (GPI) 1.",
        "ui[2]": "General purpose input (GPI) 2.",
        "ui[3]": "General purpose input (GPI) 3.",
        "ui[4]": "General purpose input (GPI) 4.",
        "ui[5]": "General purpose input (GPI) 5.",
        "ui[6]": "General purpose input (GPI) 6.",
        "ui[7]": "(User) SPI SDI.",
        "uo[0]": "General purpose output (GPO) 0.",
        "uo[1]": "General purpose output (GPO) 1.",
        "uo[2]": "General purpose output (GPO) 2.",
        "uo[3]": "General purpose output (GPO) 3.",
        "uo[4]": "General purpose output (GPO) 4.",
        "uo[5]": "General purpose output (GPO) 5.",
        "uo[6]": "(User) SPI SCK.",
        "uo[7]": "(User) SPI SDO.",
        "uio[0]": "QSPI ROM chip select (low active).",
        "uio[1]": "QSPI ROM/RAM SDO[0].",
        "uio[2]": "QSPI ROM/RAM SDO[1].",
        "uio[3]": "QSPI ROM/RAM SCK.",
        "uio[4]": "QSPI ROM/RAM SDO[2].",
        "uio[5]": "QSPI ROM/RAM SDO[3].",
        "uio[6]": "QSPI RAM chip select (low active).",
        "uio[7]": "NC."
      }
    },
    {
      "macro": "tt_um_minibyte",
      "address": 291,
      "title": "Minibyte CPU",
      "author": "Zach Frazee",
      "description": "A super simple 8-bit CPU",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/zacharysfrazee/tt06-minibyte-cpu",
      "commit": "da731883e25f1efe488a968a9e5f31d14f24f097",
      "pinout": {
        "ui[0]": "DEBUG_OUT_SELECT_0",
        "ui[1]": "DEBUG_OUT_SELECT_1",
        "ui[2]": "DEBUG_OUT_SELECT_2",
        "ui[3]": "HALT_CU",
        "ui[4]": "DEMO_ROM_ENABLE",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "ENABLE_GEN_REGS",
        "uo[0]": "ADDR_OUT_0",
        "uo[1]": "ADDR_OUT_1",
        "uo[2]": "ADDR_OUT_2",
        "uo[3]": "ADDR_OUT_3",
        "uo[4]": "ADDR_OUT_4",
        "uo[5]": "ADDR_OUT_5",
        "uo[6]": "ADDR_OUT_6",
        "uo[7]": "WE_OUT",
        "uio[0]": "DATA_0",
        "uio[1]": "DATA_1",
        "uio[2]": "DATA_2",
        "uio[3]": "DATA_3",
        "uio[4]": "DATA_4",
        "uio[5]": "DATA_5",
        "uio[6]": "DATA_6",
        "uio[7]": "DATA_7"
      }
    },
    {
      "macro": "tt_um_mitssdd",
      "address": 206,
      "title": "co processor for precision farming",
      "author": "MITS ECE",
      "description": "The processor will detect the deviation in sensor data and the sensor fault",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/mitsece/tt06-verilog-mitssdd",
      "commit": "a402374097c2e4e746cc151d03c9c56757588c7b",
      "pinout": {
        "ui[0]": "Input data from the sensors",
        "ui[1]": "Input data from the sensors",
        "ui[2]": "Input data from the sensors",
        "ui[3]": "Input data from the sensors",
        "ui[4]": "Input data from the sensors",
        "ui[5]": "Input data from the sensors",
        "ui[6]": "Input data from the sensors",
        "ui[7]": "Input data from the sensors",
        "uo[0]": "Deviation detector",
        "uo[1]": "Falut warning",
        "uo[2]": "Falut warning",
        "uo[3]": "Falut warning",
        "uo[4]": "Sensor identifier",
        "uo[5]": "Sensor identifier",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "Sensor identifier",
        "uio[1]": "Sensor identifier",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_motor",
      "address": 615,
      "title": "motor a pasos",
      "author": "Alan Tavira",
      "description": "Motor a pasos con base de tiempo para control de velocidad, cambio de sentido de giro y de tipo de paso ",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/AlanTavira/motor_pasos",
      "commit": "e4bc64f63b1525492e0a344261d85442dc054712",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "CLK",
        "ui[2]": "RST",
        "ui[3]": "select[0]",
        "ui[4]": "select[1]",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "I4",
        "uo[3]": "I3",
        "uo[4]": "I2",
        "uo[5]": "I1",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "paso",
        "uio[5]": "sentido",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_moving_average_master",
      "address": 108,
      "title": "Moving average filter",
      "author": "Alexander Hofer",
      "description": "10-bit moving average filter designed to smooth input data streams.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/AlexHoferW23/jku-tt06-averagefilter",
      "commit": "11bfa04aa8700c687b1a24be29b2cee7ca6896b7",
      "pinout": {
        "ui[0]": "Input for filter",
        "ui[1]": "Input for filter",
        "ui[2]": "Input for filter",
        "ui[3]": "Input for filter",
        "ui[4]": "Input for filter",
        "ui[5]": "Input for filter",
        "ui[6]": "Input for filter",
        "ui[7]": "Input for filter",
        "uo[0]": "Output for filter",
        "uo[1]": "Output for filter",
        "uo[2]": "Output for filter",
        "uo[3]": "Output for filter",
        "uo[4]": "Output for filter",
        "uo[5]": "Output for filter",
        "uo[6]": "Output for filter",
        "uo[7]": "Output for filter",
        "uio[0]": "Strobe input",
        "uio[1]": "Strobe output",
        "uio[2]": "Additional input bit",
        "uio[3]": "Additional input bit",
        "uio[4]": "Additional output bit",
        "uio[5]": "Additional output bit",
        "uio[6]": "Filter width input",
        "uio[7]": "Filter width input"
      }
    },
    {
      "macro": "tt_um_mult_2b",
      "address": 617,
      "title": "mult_2b",
      "author": "Juan Manuel Lpez Pasten",
      "description": "Multiplixador de 2 bits utilizando compyertas logicas",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JuanManuelLopezPasten/Multiplicador-2-bits",
      "commit": "2b7785c78756712bc2559d37d10868bd9484ee1c",
      "pinout": {
        "ui[0]": "a (bit 0)",
        "ui[1]": "a (bit 1)",
        "ui[2]": "b (bit 0)",
        "ui[3]": "b (bit 1)",
        "ui[4]": "not used",
        "ui[5]": "not used",
        "ui[6]": "not used",
        "ui[7]": "not used",
        "uo[0]": "out (bit 0)",
        "uo[1]": "out (bit 1)",
        "uo[2]": "out (bit 2)",
        "uo[3]": "out (bit 3)",
        "uo[4]": "not used",
        "uo[5]": "not used",
        "uo[6]": "not used",
        "uo[7]": "not used",
        "uio[0]": "not used",
        "uio[1]": "not used",
        "uio[2]": "not used",
        "uio[3]": "not used",
        "uio[4]": "not used",
        "uio[5]": "not used",
        "uio[6]": "not used",
        "uio[7]": "not used"
      }
    },
    {
      "macro": "tt_um_mw73_pmic",
      "address": 550,
      "title": "Power Management IC",
      "author": "Matt Wong",
      "description": "Creates a half bridge PWM duel output from ADC input",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/wongmatthew73/tt06-mw-pmic",
      "commit": "ab844616e5d87530b7ed307e3fd94f74338ec2d9",
      "pinout": {
        "ui[0]": "adcVoltage[0]",
        "ui[1]": "adcVoltage[1]",
        "ui[2]": "adcVoltage[2]",
        "ui[3]": "adcVoltage[3]",
        "ui[4]": "adcVoltage[4]",
        "ui[5]": "adcVoltage[5]",
        "ui[6]": "adcVoltage[6]",
        "ui[7]": "adcVoltage[7]",
        "uo[0]": "convStart",
        "uo[1]": "rd_cs",
        "uo[2]": "syncRectifierLs",
        "uo[3]": "syncRectifierHs",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "busy",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_neurocore",
      "address": 270,
      "title": "Neurocore",
      "author": "Kyrylo Kalashnikov",
      "description": "2x2 systolic array multiplier using 16bit floats",
      "clock_hz": 20000000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/kir486680/tt6_test",
      "commit": "741cafb8f8a2537e174654d97a534f8a52da5f57",
      "pinout": {
        "ui[0]": "RX input",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "RX output",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "Block multiply done status",
        "uio[1]": "Calculation start signal",
        "uio[2]": "Send State bit 0",
        "uio[3]": "Send State bit 1",
        "uio[4]": "Send State bit 2",
        "uio[5]": "Send State bit 3",
        "uio[6]": "Done send signal",
        "uio[7]": "Send data signal"
      }
    },
    {
      "macro": "tt_um_nicklausthompson_twi_monitor",
      "address": 743,
      "title": "TWI Monitor",
      "author": "Nicklaus Thompson",
      "description": "A Two Wire Interface (I2C) bus monitor",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/FangameEmpire/tt06-twi-monitor",
      "commit": "f8509bf8bb050d3fa3afb6a96fe182e274a5fa5b",
      "pinout": {
        "ui[0]": "SDA_in",
        "ui[1]": "SCL_in",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "TX_out",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_noritsuna_i4004",
      "address": 107,
      "title": "i4004 for TinyTapeout",
      "author": "ISHI-KAI",
      "description": "i4004 for TinyTapeout by ISHI-KAI.",
      "clock_hz": 741000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/noritsuna/tt06-tt_um_i4004",
      "commit": "cb935ca7c180df083e3ef02e8f61507e2f0c7498",
      "pinout": {
        "ui[0]": "data0_pad",
        "ui[1]": "data1_pad",
        "ui[2]": "data2_pad",
        "ui[3]": "data3_pad",
        "ui[4]": "clk1_pad",
        "ui[5]": "clk2_pad",
        "ui[6]": "poc_pad",
        "ui[7]": "test_pad",
        "uo[0]": "cmrom_pad",
        "uo[1]": "cmram0_pad",
        "uo[2]": "cmram1_pad",
        "uo[3]": "cmram2_pad",
        "uo[4]": "cmram3_pad",
        "uo[5]": "sync_pad",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_nubcore_default_tape",
      "address": 424,
      "title": "DEFAULT",
      "author": "Beau Ambur",
      "description": "Displays 'dEFAULt123' on 7-segment LED",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/nubcore/default-tape",
      "commit": "c6806df45ee9571e61138789b63e18a5b769b5d0",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "dot",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_nurirfansyah_alits01",
      "address": 488,
      "title": "Analog Test Circuit ITS: VCO",
      "author": "Astria Nur Irfansyah",
      "description": "Voltage controlled ring oscillator. ",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        1,
        3,
        2
      ],
      "repo": "https://github.com/nurirfansyah/tt06-analog-its_ip_alits01",
      "commit": "fe4a3a7b39162c78a9923e87c3e209f877ff1329",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "out5",
        "uo[1]": "out4",
        "uo[2]": "out3",
        "uo[3]": "out2",
        "uo[4]": "out1",
        "uo[5]": "out0",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "out",
        "ua[1]": "vcon_n",
        "ua[2]": "vcon_p"
      }
    },
    {
      "macro": "tt_um_obriensp_be8",
      "address": 111,
      "title": "8-bit CPU with Debugger (Lite)",
      "author": "Sean Patrick O'Brien",
      "description": "8-bit CPU with debugger accessible via I2C",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/obriensp/tt06-spo-be8",
      "commit": "137fa1e97c6437c8c6c15c5e13eccd4f450621c6",
      "pinout": {
        "ui[0]": "Input Port",
        "ui[1]": "Input Port",
        "ui[2]": "Input Port",
        "ui[3]": "Input Port",
        "ui[4]": "Input Port",
        "ui[5]": "Input Port",
        "ui[6]": "Input Port",
        "ui[7]": "Input Port",
        "uo[0]": "Output Port",
        "uo[1]": "Output Port",
        "uo[2]": "Output Port",
        "uo[3]": "Output Port",
        "uo[4]": "Output Port",
        "uo[5]": "Output Port",
        "uo[6]": "Output Port",
        "uo[7]": "Output Port",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "SCL",
        "uio[3]": "SDA",
        "uio[4]": "HALTED",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_obriensp_be8_nomacro",
      "address": 202,
      "title": "8-bit CPU with Debugger",
      "author": "Sean Patrick O'Brien",
      "description": "8-bit CPU with debugger accessible via I2C",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/obriensp/tt06-spo-be8-nomacro",
      "commit": "00e4cf35e4b628f683e87b176111cc09e81e9e06",
      "pinout": {
        "ui[0]": "Input Port",
        "ui[1]": "Input Port",
        "ui[2]": "Input Port",
        "ui[3]": "Input Port",
        "ui[4]": "Input Port",
        "ui[5]": "Input Port",
        "ui[6]": "Input Port",
        "ui[7]": "Input Port",
        "uo[0]": "Output Port",
        "uo[1]": "Output Port",
        "uo[2]": "Output Port",
        "uo[3]": "Output Port",
        "uo[4]": "Output Port",
        "uo[5]": "Output Port",
        "uo[6]": "Output Port",
        "uo[7]": "Output Port",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "SCL",
        "uio[3]": "SDA",
        "uio[4]": "HALTED",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_oscillating_bones",
      "address": 42,
      "title": "Oscillating Bones",
      "author": "Uri Shaked",
      "description": "A stylish ring oscillator built from SkullFET transistors",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt06-oscillating-bones",
      "commit": "8a112f5484d6cd77ae945fba2d80b616be24ce53",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "osc_out",
        "uo[1]": "osc_div_2",
        "uo[2]": "osc_div_4",
        "uo[3]": "osc_div_8",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_otp_encryptor",
      "address": 544,
      "title": "TT06 OTP Encryptor",
      "author": " , Aimee Kang, Alexander Schaefer",
      "description": "Encryption and Decryption Unit through Utilization of Psuedorandom One Time Pads",
      "clock_hz": 50000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/wmk7fe/tt06-otp-encryptor",
      "commit": "291f1df9ef274e7e775a778928b96a32218bed6a",
      "pinout": {
        "ui[0]": "data[0]",
        "ui[1]": "data[1]",
        "ui[2]": "data[2]",
        "ui[3]": "data[3]",
        "ui[4]": "data[4]",
        "ui[5]": "data[5]",
        "ui[6]": "data[6]",
        "ui[7]": "data[7]",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "decrypt",
        "uio[1]": "r_num[0]",
        "uio[2]": "r_num[1]",
        "uio[3]": "r_num[2]",
        "uio[4]": "index_out[0]",
        "uio[5]": "index_out[1]",
        "uio[6]": "index_out[2]",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_pckys_game",
      "address": 297,
      "title": "PCKY\u00b4s Successive Approximation Game",
      "author": "pcky",
      "description": "Try to retrieve a pseudo-random 8-bit number by successive approximation.",
      "clock_hz": 10000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/pcky/tt06-wokwi",
      "commit": "2be04c6f397344cfb8c71a13dd6c10c9c242bed8",
      "pinout": {
        "ui[0]": "Binary Number Input 0 (LSB)",
        "ui[1]": "Binary Number Input 1",
        "ui[2]": "Binary Number Input 2",
        "ui[3]": "Binary Number Input 3",
        "ui[4]": "Binary Number Input 4",
        "ui[5]": "Binary Number Input 5",
        "ui[6]": "Binary Number Input 6",
        "ui[7]": "Binary Number Input 7 (MSB)",
        "uo[0]": "7-segment-LED 0",
        "uo[1]": "7-segment-LED 1",
        "uo[2]": "7-segment-LED 2",
        "uo[3]": "7-segment-LED 3",
        "uo[4]": "7-segment-LED 4",
        "uo[5]": "7-segment-LED 5",
        "uo[6]": "7-segment-LED 6",
        "uo[7]": "7-segment-LED 7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_petersn_micro1",
      "address": 782,
      "title": "14 Hour Simple Computer",
      "author": "Peter Schmidt-Nielsen",
      "description": "A very simple computer that renders to VGA, designed in the last 14 hours before the submission deadline",
      "clock_hz": 50000000,
      "tiles": "8x2",
      "analog_pins": [],
      "repo": "https://github.com/petersn/tt06-submission",
      "commit": "cc90c612d334d0ee6b9ec8524439db7ac435a0bd",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "vga_r",
        "uo[1]": "vga_g",
        "uo[2]": "vga_b",
        "uo[3]": "vga_hs",
        "uo[4]": "vga_vs",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "sram_cs_n",
        "uio[1]": "sram_so",
        "uio[2]": "sram_sio2",
        "uio[3]": "sram_si",
        "uio[4]": "sram_sck",
        "uio[5]": "sram_sio3",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ppca",
      "address": 742,
      "title": "drEEm tEEm PPCA",
      "author": "Calvin Sokk, William Mingham Zhu, Calvin Yeh, Eric Liu",
      "description": "Projectile Positioning Calculation Accelerator",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/calsokk/tt6_drEEm_tEEm_ppca",
      "commit": "29e983233831642bf9d758f3defe10faa38c00e2",
      "pinout": {
        "ui[0]": "Move Left",
        "ui[1]": "Move Right",
        "ui[2]": "Aim Left",
        "ui[3]": "Aim Right",
        "ui[4]": "Shoot",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Result Valid",
        "uo[1]": "Hit",
        "uo[2]": "Select Data",
        "uo[3]": "Select Data",
        "uo[4]": "Select Data",
        "uo[5]": "Select Data",
        "uo[6]": "Select Data",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "target_x",
        "uio[3]": "target_x",
        "uio[4]": "target_x",
        "uio[5]": "target_x",
        "uio[6]": "target_x",
        "uio[7]": "0 ? target_y = 30 : target_y = 31"
      }
    },
    {
      "macro": "tt_um_ps2_morse_encoder_top",
      "address": 971,
      "title": "PS/2 Keyboard to Morse Code Encoder",
      "author": "Daniel Baumgartner",
      "description": "PS/2 Keyboard to Morse Code Encoder",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/byte-me404/jku-tt06-ps2-morse-encoder",
      "commit": "f9879387313c8d27491ae149a8047c196df78ca7",
      "pinout": {
        "ui[0]": "PS/2 Clock",
        "ui[1]": "PS/2 Data",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Dit Output",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "Dah Output",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "Morse Code Output",
        "uo[7]": "Morse Code Output (Buzzer)",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_psychogenic_wowa",
      "address": 265,
      "title": "WoWA",
      "author": "Pat Deegan",
      "description": "Is it really the World Worst ADC?  Maybe it'll be a wow-ADC instead... we'll see!",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11,
        6,
        10,
        7,
        9,
        8
      ],
      "repo": "https://github.com/psychogenic/tt06-analog-wowa",
      "commit": "70dab265073752134e0c24980f81e76263a54cad",
      "pinout": {
        "ui[0]": "reset",
        "ui[1]": "enable calibrations",
        "ui[2]": "enable comparator",
        "ui[3]": "use external threshold",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "result bit 0",
        "uo[1]": "result bit 1",
        "uo[2]": "result bit 2",
        "uo[3]": "result bit 3",
        "uo[4]": "result bit 4",
        "uo[5]": "result bit 5",
        "uo[6]": "result bit 6",
        "uo[7]": "result bit 7",
        "uio[0]": "result ready",
        "uio[1]": "0",
        "uio[2]": "0",
        "uio[3]": "0",
        "uio[4]": "1",
        "uio[5]": "1",
        "uio[6]": "1",
        "uio[7]": "1",
        "ua[0]": "Comparator out",
        "ua[1]": "p3 opamp out",
        "ua[2]": "p3 opamp plus",
        "ua[3]": "p3 opamp minus/ext threshold for comp",
        "ua[4]": "Analog input to ADC",
        "ua[5]": "Matt's DAC output"
      }
    },
    {
      "macro": "tt_um_qubitbytes_alive",
      "address": 493,
      "title": "It's Alive",
      "author": "Jonathan Anderson, Qubitbytes Ltd",
      "description": "plays a cool tune",
      "clock_hz": 100000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Qubitbytesltd/tt06-its-alive",
      "commit": "797082644de0b54a84c37f2f35460e1579f190d7",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "led segment a",
        "uo[1]": "led segment b",
        "uo[2]": "led segment c",
        "uo[3]": "led segment d",
        "uo[4]": "led segment e",
        "uo[5]": "led segment f",
        "uo[6]": "led segment g",
        "uo[7]": "led segment dot",
        "uio[0]": "speaker",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ram",
      "address": 678,
      "title": "4 bit RAM",
      "author": "Alejandro Silva Juarez",
      "description": "Is a Memory RAM (4 bits)",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/asilvaj1/tt04-submission_silva_ram",
      "commit": "4e103360dc9308a11ea0daa709e7ad6c48d55de4",
      "pinout": {
        "ui[0]": "Memory entry address [0]",
        "ui[1]": "Memory entry address [1]",
        "ui[2]": "Memory entry address [2]",
        "ui[3]": "Memory entry address [3]",
        "ui[4]": "Memory input data [0]",
        "ui[5]": "Memory input data [1]",
        "ui[6]": "Memory input data [2]",
        "ui[7]": "Memory input data [3]",
        "uo[0]": "Memory output data [0]",
        "uo[1]": "Memory output data [1]",
        "uo[2]": "Memory output data [2]",
        "uo[3]": "Memory output data [3]",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "RAM write enable input",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_rejunity_1_58bit",
      "address": 142,
      "title": "Ternary 1.58-bit x 8-bit matrix multiplier",
      "author": "ReJ aka Renaldas Zioma",
      "description": "Matrix multiplication block for 1.58 bit aka TERNARY weight LLMs",
      "clock_hz": 48000000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tiny-asic-1_58bit-matrix-mul",
      "commit": "1ba434f7055f036d086b7e4eafff3b8afee1e976",
      "pinout": {
        "ui[0]": "packed weights LSB",
        "ui[1]": "packed weights",
        "ui[2]": "packed weights",
        "ui[3]": "packed weights",
        "ui[4]": "packed weights",
        "ui[5]": "packed weights",
        "ui[6]": "packed weights",
        "ui[7]": "packed weights MSB",
        "uo[0]": "result LSB",
        "uo[1]": "result ",
        "uo[2]": "result ",
        "uo[3]": "result ",
        "uo[4]": "result ",
        "uo[5]": "result ",
        "uo[6]": "result ",
        "uo[7]": "result MSB",
        "uio[0]": "(in) activations LSB",
        "uio[1]": "(in) activations",
        "uio[2]": "(in) activations",
        "uio[3]": "(in) activations",
        "uio[4]": "(in) activations",
        "uio[5]": "(in) activations",
        "uio[6]": "(in) activations",
        "uio[7]": "(in) activations MSB"
      }
    },
    {
      "macro": "tt_um_rejunity_current_cmp",
      "address": 524,
      "title": "Analog Current Comparator",
      "author": "Renaldas Zioma",
      "description": "An analog current comparator with Excitatory (+) and Inhibitory (-) currents formed by summing up digital inputs",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        10,
        7,
        9,
        8
      ],
      "repo": "https://github.com/rejunity/tt06-analog-current-comparator",
      "commit": "40393726d8e6b979d7d7d038aba10ecad789dfcf",
      "pinout": {
        "ui[0]": "Inhibitory current bit",
        "ui[1]": "Inhibitory current bit",
        "ui[2]": "Inhibitory current bit",
        "ui[3]": "Inhibitory current bit",
        "ui[4]": "Inhibitory current bit",
        "ui[5]": "Inhibitory current bit",
        "ui[6]": "Inhibitory current bit",
        "ui[7]": "Inhibitory current bit",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "Excitatory current bit",
        "uio[1]": "Excitatory current bit",
        "uio[2]": "Excitatory current bit",
        "uio[3]": "Excitatory current bit",
        "uio[4]": "Excitatory current bit",
        "uio[5]": "Excitatory current bit",
        "uio[6]": "Excitatory current bit",
        "uio[7]": "Excitatory current bit",
        "ua[0]": "Main comparator output",
        "ua[1]": "Summed currents (debug)",
        "ua[2]": "2nd comparator input (debug)",
        "ua[3]": "2nd comparator output (debug)"
      }
    },
    {
      "macro": "tt_um_rejunity_fp4_mul_i8",
      "address": 64,
      "title": "FP4 x 8-bit matrix multiplier",
      "author": "ReJ aka Renaldas Zioma",
      "description": "4-bit floating point (E3M0) x 8-bit matrix multiplier block",
      "clock_hz": 48000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tiny-asic-4bit-matrix-mul",
      "commit": "93309d34987ca0c131b35ac5ef3655d6ed03ac7e",
      "pinout": {
        "ui[0]": "2nd FP4 weight LSB",
        "ui[1]": "2nd FP4 weight",
        "ui[2]": "2nd FP4 weight",
        "ui[3]": "2nd FP4 weight MSB",
        "ui[4]": "1st FP4 weight LSB",
        "ui[5]": "1st FP4 weight",
        "ui[6]": "1st FP4 weight",
        "ui[7]": "1st FP4 weight MSB",
        "uo[0]": "result LSB",
        "uo[1]": "result ",
        "uo[2]": "result ",
        "uo[3]": "result ",
        "uo[4]": "result ",
        "uo[5]": "result ",
        "uo[6]": "result ",
        "uo[7]": "result MSB",
        "uio[0]": "(in) activations LSB",
        "uio[1]": "(in) activations",
        "uio[2]": "(in) activations",
        "uio[3]": "(in) activations",
        "uio[4]": "(in) activations",
        "uio[5]": "(in) activations",
        "uio[6]": "(in) activations",
        "uio[7]": "(in) activations MSB"
      }
    },
    {
      "macro": "tt_um_rgbled_decoder",
      "address": 110,
      "title": "SPI to RGBLED Decoder/Driver",
      "author": "Andreas Scharnreitner",
      "description": "Control multiple RGB LEDs (WS2812B) via SPI",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/schandreas/jku-tt06-spi-led",
      "commit": "3e0afa5715ad8eae5cbb57fc302ba926b5b1e20f",
      "pinout": {
        "ui[0]": "MOSI",
        "ui[1]": "SCLK",
        "ui[2]": "nCS",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "LED_DATA",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_rng",
      "address": 683,
      "title": "Random number generator",
      "author": "VineetaVNair & ShilpaPavithran",
      "description": "Randomly generates bit stream",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/vinizz/tt06-RNG",
      "commit": "4a1226fca6c86063e75b16e2adb65540b8a821dd",
      "pinout": {
        "ui[0]": "seed[0]",
        "ui[1]": "seed[1]",
        "ui[2]": "seed[2]",
        "ui[3]": "seed[3]",
        "ui[4]": "mode[0]",
        "ui[5]": "mode[1]",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "output_data[0]",
        "uo[1]": "output_data[1]",
        "uo[2]": "output_data[2]",
        "uo[3]": "output_data[3]",
        "uo[4]": "output_data[4]",
        "uo[5]": "output_data[5]",
        "uo[6]": "output_data[6]",
        "uo[7]": "output_data[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_rng_3_lucaz97",
      "address": 654,
      "title": "RNG3",
      "author": "Luca Collini",
      "description": "NIST RNG TESTS",
      "clock_hz": 50000000,
      "tiles": "6x2",
      "analog_pins": [],
      "repo": "https://github.com/Lucaz97/RNG3_tt",
      "commit": "c6e7c4cc94293f4db780f3cebac25cfc6914b823",
      "pinout": {
        "ui[0]": "epsilon",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "is_random",
        "uo[1]": "valid",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_s1pu11i_simple_nco",
      "address": 303,
      "title": "Simple NCO",
      "author": "s1Pu11i",
      "description": "Simple NCO which can also output sine, square or sawtooth.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/s1Pu11i/tt06_simple_nco",
      "commit": "bf302604c0297232d7026f245a7d6e13b826d4f8",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "ModeSelectionBit0",
        "uio[1]": "ModeSelectionBit1",
        "uio[2]": "FrequencyWordLower8BitUpdateEnable",
        "uio[3]": "FrequencyWordUpper8BitUpdateEnable",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_sanojn_tlv2556_interface",
      "address": 814,
      "title": "UART interface to ADC TLV2556 (VHDL Test)",
      "author": "Jonas Nilsson",
      "description": "Simple interface that allows values from a TLV2556 ADC to be read out over a UART",
      "clock_hz": 48000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/sanojn/tt06-vhdl-adc_interface",
      "commit": "5965947e05887202b8237b05596d65a0bb67f682",
      "pinout": {
        "ui[0]": "adc_dout",
        "ui[1]": "adc_eoc",
        "ui[2]": "UART RxD",
        "ui[3]": "UART CTS_n (opposite polarity)",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "adc_clk",
        "uo[1]": "adc_cs",
        "uo[2]": "adc_din",
        "uo[3]": "UART TxD",
        "uo[4]": "UART RTSn (opposite polarity)",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_sanojn_ttrpg_dice",
      "address": 105,
      "title": "TTRPG Dice + simple I2C peripheral",
      "author": "Jonas Nilsson",
      "description": "TTRPG dice roller",
      "clock_hz": 32768,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/sanojn/tt06_ttrpg_dice",
      "commit": "9652a951e606134d4c0032d433870a949ed70c21",
      "pinout": {
        "ui[0]": "Btn4",
        "ui[1]": "Btn6",
        "ui[2]": "Btn8",
        "ui[3]": "Btn10",
        "ui[4]": "Btn12",
        "ui[5]": "Btn20",
        "ui[6]": "Btn100",
        "ui[7]": "GPIO input",
        "uo[0]": "segA",
        "uo[1]": "segB",
        "uo[2]": "segC",
        "uo[3]": "segD",
        "uo[4]": "segE",
        "uo[5]": "segF",
        "uo[6]": "segG",
        "uo[7]": "DP",
        "uio[0]": "PWM capable GPIO pin (bidir)",
        "uio[1]": "SDA (bidir)",
        "uio[2]": "SCL (input)",
        "uio[3]": "1s digit common (output)",
        "uio[4]": "10s digit common (output)",
        "uio[5]": "Button polarity (input)",
        "uio[6]": "Segment polarity (input)",
        "uio[7]": "Common polarity (input)"
      }
    },
    {
      "macro": "tt_um_sap_1",
      "address": 676,
      "title": "SAP-1 Computer",
      "author": "Jonathan Zhou, Rana Singh, Anika Agarwal",
      "description": "Simple as Possible computer with multiplier and divider into ASIC",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/kevinwguan/tt06-SAP-1_Computer-",
      "commit": "5b67f826e2ca3df6ed1a60721ad1e4eb78dd762c",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "bus[0]",
        "uo[1]": "bus[1]",
        "uo[2]": "bus[2]",
        "uo[3]": "bus[3]",
        "uo[4]": "bus[4]",
        "uo[5]": "bus[5]",
        "uo[6]": "bus[6]",
        "uo[7]": "bus[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_scorbetta_goa",
      "address": 103,
      "title": "GOA - grogu on ASIC",
      "author": "Simone Corbetta",
      "description": "Single neuron w/ fixed-point arithmetic",
      "clock_hz": 25,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/scorbetta/tt06-scorbetta-goa",
      "commit": "0206e8503731efd8848b47a48e6e03e5778bc27c",
      "pinout": {
        "ui[0]": "FPGA clock",
        "ui[1]": "Active-low FPGA reset",
        "ui[2]": "Loopback data",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "Debug select [0]",
        "ui[7]": "Debug select [1]",
        "uo[0]": "Shared debug output dbug_out[0]",
        "uo[1]": "Shared debug output dbug_out[1]",
        "uo[2]": "Shared debug output dbug_out[2]",
        "uo[3]": "Shared debug output dbug_out[3]",
        "uo[4]": "Shared debug output dbug_out[4]",
        "uo[5]": "Shared debug output dbug_out[5]",
        "uo[6]": "Shared debug output dbug_out[6]",
        "uo[7]": "Shared debug output dbug_out[7]",
        "uio[0]": "SCI_CSN",
        "uio[1]": "SCI_REQ",
        "uio[2]": "SCI_RESP",
        "uio[3]": "SCI_ACK",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_seven_segment_fun1",
      "address": 32,
      "title": "7-segment-FUN",
      "author": "Armin Hartl",
      "description": "Many different Animations on an 7-Segment-Display",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/akaArmin/jku-tt06-7-segment-FUN",
      "commit": "6c5a0aaa2ccb4945ffb7f3096c6fa0fcb9ace8e1",
      "pinout": {
        "ui[0]": "btn1_incAni",
        "ui[1]": "btn2_decAni",
        "ui[2]": "btn3_incSpeed",
        "ui[3]": "btn4_decSpeed",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "segment a1",
        "uo[1]": "segment b2",
        "uo[2]": "segment c3",
        "uo[3]": "segment d4",
        "uo[4]": "segment e5",
        "uo[5]": "segment f6",
        "uo[6]": "segment g7",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_shivam",
      "address": 230,
      "title": "Pulse Width Modulation",
      "author": "Shivam Bhardwaj, Sachin Sharma and Ambika Prasad Shah",
      "description": "This Verilog module generates a Pulse Width Modulation (PWM) signal with adjustable duty cycle. It utilizes a 50MHz clock input and debounced buttons to increase or decrease the duty cycle, producing a 5MHz PWM output for various applications like motor speed control or LED brightness adjustment.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/OnSachinSharma/tt06-verilog-PWM",
      "commit": "078d9dd50af6e94d5290f3030b67270a38c0a0cc",
      "pinout": {
        "ui[0]": "clk",
        "ui[1]": "ui_in[0]",
        "ui[2]": "ui_in[1]",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "PWM_OUT",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_signed_unsigned_4x4_bit_multiplier",
      "address": 429,
      "title": "Signed Unsigned multiplyer",
      "author": "Ole Henrik Moller",
      "description": "Do a 4x4 multiplication ",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jorgenkraghjakobsen/tt06-signed_unsigned_4x4_bit_multiplier",
      "commit": "458df24213c89872a5568cab7ee7961ac7fd8a4d",
      "pinout": {
        "ui[0]": "multiplier[0]",
        "ui[1]": "multiplier[1]",
        "ui[2]": "multiplier[2]",
        "ui[3]": "multiplier[3]",
        "ui[4]": "multiplicand[0]",
        "ui[5]": "multiplicand[1]",
        "ui[6]": "multiplicand[2]",
        "ui[7]": "multiplicand[3]",
        "uo[0]": "product[0]",
        "uo[1]": "product[1]",
        "uo[2]": "product[2]",
        "uo[3]": "product[3]",
        "uo[4]": "product[4]",
        "uo[5]": "product[5]",
        "uo[6]": "product[6]",
        "uo[7]": "product[7]",
        "uio[0]": "signed_mode",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_silicon_tinytapeout_lm07",
      "address": 417,
      "title": "Digital Temperature Monitor",
      "author": "Priyansu Sahoo and Saroj Rout",
      "description": "This projects reads 8-bit temperature data using SPI from a LM70 sensor.",
      "clock_hz": 10000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/silicon-efabless/tt06-silicon-tinytapeout-lm07",
      "commit": "6cf0ee19483bb555328d01bf7db6d31108e3405f",
      "pinout": {
        "ui[0]": "Ext/Int",
        "ui[1]": "Int-LSB",
        "ui[2]": "Ext-CorF",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "7seg-A",
        "uo[1]": "7seg-B",
        "uo[2]": "7seg-C",
        "uo[3]": "7seg-D",
        "uo[4]": "7seg-E",
        "uo[5]": "7seg-F",
        "uo[6]": "7seg-G",
        "uo[7]": "7seg-DP",
        "uio[0]": "CS (O)",
        "uio[1]": "SCK (O)",
        "uio[2]": "SIO (I)",
        "uio[3]": "7seg-sel0 (O)",
        "uio[4]": "7seg-sel1 (O)",
        "uio[5]": "7seg-sel2 (O)",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_simplez_rcoeurjoly",
      "address": 740,
      "title": "tt6-simplez",
      "author": "Roland Coeurjoly",
      "description": "Simplez",
      "clock_hz": 12000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RCoeurjoly/tt06-simplez",
      "commit": "ef6a66318697b84da4f07e890bbf2ca62aac54c2",
      "pinout": {
        "ui[0]": "RX Serial Input from Keyboard",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "LED 0",
        "uo[1]": "LED 1",
        "uo[2]": "LED 2",
        "uo[3]": "LED 3",
        "uo[4]": "LED 4",
        "uo[5]": "LED 5",
        "uo[6]": "LED 6",
        "uo[7]": "LED 7",
        "uio[0]": "Stop Signal Indicator",
        "uio[1]": "TX Serial Output to Display",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_soundgen",
      "address": 897,
      "title": "soundgen",
      "author": "Yanik Drmla",
      "description": "plays prelude.wav in endless loop",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dyanik9/jku-tt06-soundgen",
      "commit": "081f7b2914ec0ad979e7b0ccec58816258c426db",
      "pinout": {
        "ui[0]": "nc",
        "ui[1]": "nc",
        "ui[2]": "nc",
        "ui[3]": "nc",
        "ui[4]": "nc",
        "ui[5]": "nc",
        "ui[6]": "nc",
        "ui[7]": "nc",
        "uo[0]": "nc",
        "uo[1]": "nc",
        "uo[2]": "nc",
        "uo[3]": "nc",
        "uo[4]": "nc",
        "uo[5]": "nc",
        "uo[6]": "nc",
        "uo[7]": "nc",
        "uio[0]": "nc",
        "uio[1]": "nc",
        "uio[2]": "nc",
        "uio[3]": "nc",
        "uio[4]": "nc",
        "uio[5]": "nc",
        "uio[6]": "pwm_pos",
        "uio[7]": "pwm_neg"
      }
    },
    {
      "macro": "tt_um_spi_pwm_djuara",
      "address": 97,
      "title": "spi_pwm",
      "author": "djuara",
      "description": "This is a PWM generator and 8-bit width IO, spi controlled (2 different interfaces, just for testing).",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/djuara-rbz/tt_spi_pwm",
      "commit": "44ec47fb6976c579f5fc432f23b27b8bfef6d91b",
      "pinout": {
        "ui[0]": "clk_sclk",
        "ui[1]": "clk_mosi",
        "ui[2]": "clk_cs",
        "ui[3]": "sampled_sclk",
        "ui[4]": "sampled_mosi",
        "ui[5]": "sampled_cs",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "clk_miso",
        "uo[1]": "sampled_miso",
        "uo[2]": "pwm",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "IO0",
        "uio[1]": "IO1",
        "uio[2]": "IO2",
        "uio[3]": "IO3",
        "uio[4]": "IO4",
        "uio[5]": "IO5",
        "uio[6]": "IO6",
        "uio[7]": "IO7"
      }
    },
    {
      "macro": "tt_um_spiff42_exp_led_pwm",
      "address": 168,
      "title": "LED PWM controller",
      "author": "Mikkel Holm Olsen",
      "description": "Exponential LED PWM controller",
      "clock_hz": 32768000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/spiff42/tt06-exp-led-pwm",
      "commit": "17e882d06a1ede26ae933e6653011f8f31b980ba",
      "pinout": {
        "ui[0]": "duty[0]",
        "ui[1]": "duty[1]",
        "ui[2]": "duty[2]",
        "ui[3]": "duty[3]",
        "ui[4]": "duty[4]",
        "ui[5]": "duty[5]",
        "ui[6]": "duty[6]",
        "ui[7]": "duty[7]",
        "uo[0]": "PWM channel 0",
        "uo[1]": "PWM channel 1",
        "uo[2]": "PWM channel 2",
        "uo[3]": "PWM channel 3",
        "uo[4]": "PWM channel 4",
        "uo[5]": "PWM channel 5",
        "uo[6]": "PWM channel 6",
        "uo[7]": "PWM channel 7",
        "uio[0]": "",
        "uio[1]": "SDA",
        "uio[2]": "SCL",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ss_register",
      "address": 686,
      "title": "serie_serie_register",
      "author": "C.A. Vel\u00e1zquez-Morales",
      "description": "Registro Serie-Serie, con 4 registros y corrimiento hacia la izquierda o derecha",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/CarlosVel17/Serie_Serie",
      "commit": "e466ce784e3d46f27b75b3a08f28f3a77f01499c",
      "pinout": {
        "ui[0]": "data_in",
        "ui[1]": "clk",
        "ui[2]": "rst",
        "ui[3]": "ena",
        "ui[4]": "leri",
        "ui[5]": "No_Used",
        "ui[6]": "No_Used",
        "ui[7]": "No_Used",
        "uo[0]": "Data_Out",
        "uo[1]": "No_Used",
        "uo[2]": "No_Used",
        "uo[3]": "No_Used",
        "uo[4]": "No_Used",
        "uo[5]": "No_Used",
        "uo[6]": "No_Used",
        "uo[7]": "No_Used",
        "uio[0]": "No_Used",
        "uio[1]": "No_Used",
        "uio[2]": "No_Used",
        "uio[3]": "No_Used",
        "uio[4]": "No_Used",
        "uio[5]": "No_Used",
        "uio[6]": "No_Used",
        "uio[7]": "No_Used"
      }
    },
    {
      "macro": "tt_um_stepper",
      "address": 684,
      "title": "Stepper",
      "author": "Miguel de Jes\u00fas Salazar Pedraza",
      "description": "Stepper Control Bipolar Motor",
      "clock_hz": 1000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/miguelsape/msalazar",
      "commit": "0003c2cff3698d166b0eaa0592c920b64c34c5cd",
      "pinout": {
        "ui[0]": "Unused",
        "ui[1]": "Unused",
        "ui[2]": "Unused",
        "ui[3]": "Unused",
        "ui[4]": "Unused",
        "ui[5]": "Unused",
        "ui[6]": "Unused",
        "ui[7]": "Unused",
        "uo[0]": "Unused",
        "uo[1]": "Unused",
        "uo[2]": "Unused",
        "uo[3]": "Unused",
        "uo[4]": "Unused",
        "uo[5]": "Unused",
        "uo[6]": "Unused",
        "uo[7]": "Unused",
        "uio[0]": "Output Bit 0",
        "uio[1]": "Output Bit 1",
        "uio[2]": "Output Bit 2",
        "uio[3]": "Output Bit 3",
        "uio[4]": "enable",
        "uio[5]": "direction",
        "uio[6]": "Unused",
        "uio[7]": "Unused"
      }
    },
    {
      "macro": "tt_um_thorkn_audiochip_v2",
      "address": 514,
      "title": "AudioChip_V2",
      "author": "Thorsten Knoll",
      "description": "The AudioChip plays waveforms on PWM outputs. The inputs alter these waveforms in many ways.",
      "clock_hz": 12000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/ThorKn/TT06_AudioChip_V2",
      "commit": "11f0144ba906f521638acc2429fc8e8564e0a7f1",
      "pinout": {
        "ui[0]": "freq_bit_in_0",
        "ui[1]": "freq_bit_in_1",
        "ui[2]": "freq_bit_in_2",
        "ui[3]": "freq_bit_in_3",
        "ui[4]": "freq_bit_in_4",
        "ui[5]": "freq_bit_in_5",
        "ui[6]": "freq_bit_in_6",
        "ui[7]": "freq_bit_in_7",
        "uo[0]": "pwm_1_out",
        "uo[1]": "pwm_2_out",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "adsr_choice_in_0",
        "uio[1]": "adsr_choice_in_1",
        "uio[2]": "adsr_choice_in_2",
        "uio[3]": "adsr_switch_in",
        "uio[4]": "freq_bit_in_8",
        "uio[5]": "freq_bit_in_9",
        "uio[6]": "freq_bit_in_10",
        "uio[7]": "freq_bit_in_11"
      }
    },
    {
      "macro": "tt_um_timer_counter_UGM",
      "address": 737,
      "title": "4-Digit Scanning Digital Timer Counter",
      "author": "Muhammad Shofuwan Anwar",
      "description": "Automatic timer and manual counter controlled by buttons",
      "clock_hz": 1000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Shofuuu/tt06-timer_counter-UGM",
      "commit": "9934d4de2b86c58d1985e71582c9687908dded4f",
      "pinout": {
        "ui[0]": "inv",
        "ui[1]": "mode",
        "ui[2]": "start",
        "ui[3]": "stop",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "segment[0]",
        "uo[1]": "segment[1]",
        "uo[2]": "segment[2]",
        "uo[3]": "segment[3]",
        "uo[4]": "segment[4]",
        "uo[5]": "segment[5]",
        "uo[6]": "segment[6]",
        "uo[7]": "segment[7]",
        "uio[0]": "digit[0]",
        "uio[1]": "digit[1]",
        "uio[2]": "digit[2]",
        "uio[3]": "digit[3]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tiny_shader_mole99",
      "address": 295,
      "title": "Tiny Shader",
      "author": "Leo Moser",
      "description": "With Tiny Shader you can write a small program to create different images and even animations.",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mole99/tt06-tiny-shader",
      "commit": "536d21090f2a5fd3394901b410a7e25a1b0e2f86",
      "pinout": {
        "ui[0]": "mode",
        "ui[1]": "debug_i[0]",
        "ui[2]": "debug_i[1]",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R[1]",
        "uo[1]": "G[1]",
        "uo[2]": "B[1]",
        "uo[3]": "vsync",
        "uo[4]": "R[0]",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "CS",
        "uio[1]": "MOSI",
        "uio[2]": "MISO",
        "uio[3]": "SCK",
        "uio[4]": "next_vertical",
        "uio[5]": "next_frame",
        "uio[6]": "debug_o[0]",
        "uio[7]": "debug_o[1]"
      }
    },
    {
      "macro": "tt_um_toivoh_retro_console",
      "address": 458,
      "title": "Retro Console",
      "author": "Toivo Henningsson",
      "description": "8\u00bd bit retro console with sprite and tile graphics + synth",
      "clock_hz": 50350000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/toivoh/tt06-retro-console",
      "commit": "0ba2cb6a3082c664f4839961a3639472d2e525c6",
      "pinout": {
        "ui[0]": "data_in[0]",
        "ui[1]": "data_in[1]",
        "ui[2]": "data_in[2]",
        "ui[3]": "data_in[3]",
        "ui[4]": "rx_alt_in[0]",
        "ui[5]": "rx_alt_in[1]",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "vsync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "hsync",
        "uio[0]": "addr_out[0]",
        "uio[1]": "addr_out[1]",
        "uio[2]": "addr_out[2]",
        "uio[3]": "addr_out[3]",
        "uio[4]": "tx_out[0]",
        "uio[5]": "tx_out[1]",
        "uio[6]": "rx_in[0] / Gm1_active_out",
        "uio[7]": "rx_in[1] / RBm1_pixelclk_out"
      }
    },
    {
      "macro": "tt_um_tomkeddie_a",
      "address": 905,
      "title": "VGA Experiments in Tennis",
      "author": "Tom Keddie",
      "description": "Simple Game",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TomKeddie/tinytapeout-2024-tt06a",
      "commit": "17fa311998ec1dd681721bee7250d91ba8c219c9",
      "pinout": {
        "ui[0]": "left paddle up",
        "ui[1]": "left paddle down",
        "ui[2]": "right paddle up",
        "ui[3]": "right paddle down",
        "ui[4]": "score reset",
        "ui[5]": "Speed LSB",
        "ui[6]": "Speed MSB",
        "ui[7]": "pmod sel (high=mole99, low=digilent)",
        "uo[0]": "r1/r0 (mole99/digilent)",
        "uo[1]": "g1/r1 (mole99/digilent)",
        "uo[2]": "b1/r2 (mole99/digilent)",
        "uo[3]": "vsync/r3 (mole99/digilent)",
        "uo[4]": "r0/b0 (mole99/digilent)",
        "uo[5]": "g0/b1 (mole99/digilent)",
        "uo[6]": "b0/b2 (mole99/digilent)",
        "uo[7]": "hsync/b3 (mole99/digilent)",
        "uio[0]": "g0",
        "uio[1]": "g1",
        "uio[2]": "g2",
        "uio[3]": "g3",
        "uio[4]": "hsync",
        "uio[5]": "vsync",
        "uio[6]": "tied low",
        "uio[7]": "tied low"
      }
    },
    {
      "macro": "tt_um_tommythorn_4b_cpu_v2",
      "address": 175,
      "title": "Silly 4b CPU v2",
      "author": "Tommy Thorn",
      "description": "A trivial little 4b CPU in the style of the PDP-8, 2nd try",
      "clock_hz": 50,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tommythorn/tt06-tommythorn-4b-cpu",
      "commit": "26b037760cd534540b2e9fb5859ec2047b174bf2",
      "pinout": {
        "ui[0]": "clock",
        "ui[1]": "cmd[0]",
        "ui[2]": "cmd[1]",
        "ui[3]": "",
        "ui[4]": "cmdarg[0]",
        "ui[5]": "cmdarg[1]",
        "ui[6]": "cmdarg[2]",
        "ui[7]": "cmdarg[3]",
        "uo[0]": "acc[0]",
        "uo[1]": "acc[1]",
        "uo[2]": "acc[2]",
        "uo[3]": "acc[3]",
        "uo[4]": "pc[0]",
        "uo[5]": "pc[1]",
        "uo[6]": "pc[2]",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tommythorn_ncl_lfsr",
      "address": 618,
      "title": "NCL LFSR",
      "author": "Tommy Thorn",
      "description": "A trivial little example to try out self-timed logic",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tommythorn/tt06-ncl-lfsr",
      "commit": "2d96cda23468d727c453a917afd512b3a38b71be",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_topTDC",
      "address": 545,
      "title": "Convertidor de Tiempo a Digital (TDC)",
      "author": "Juan Vargas Ferrer & Luis Carlos Alvarez Sim\u00f3n",
      "description": "El proyecto consiste en el dise\u00f1o de un circuito Front end o interfaz para convertir a digital la se\u00f1al proveniente de un sensor con salida en tiempo.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jferrer08/latinpractice",
      "commit": "ad02bf4051a0f0cce24b58344ec7c2722ad6a061",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "eot",
        "uio[1]": "tx",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "reset",
        "uio[7]": "stop"
      }
    },
    {
      "macro": "tt_um_triple_watchdog",
      "address": 289,
      "title": "Triple Watchdog",
      "author": "Ignacio Chechile",
      "description": "A redundant watchdog to be part of a larger fault-tolerant supervisor/failover manager later on",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ignaciosim/tt06-triple-watchdog",
      "commit": "f62814ae28226e335956c1094d540f5c12c07506",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "watchdog_expired1",
        "uo[1]": "watchdog_expired2",
        "uo[2]": "watchdog_expired3",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_urish_charge_pump",
      "address": 269,
      "title": "Dickson Charge Pump",
      "author": "Uri Shaked",
      "description": "Pumps the input voltage up to ~5.4V",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        8
      ],
      "repo": "https://github.com/urish/tt06-charge-pump",
      "commit": "f50f8488a869aa89bde5446a0e53b634c58f9f9b",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "vout_div"
      }
    },
    {
      "macro": "tt_um_urish_dffram",
      "address": 452,
      "title": "DFFRAM Example (128 bytes)",
      "author": "Uri Shaked",
      "description": "128 bytes DFFRAM module",
      "clock_hz": 0,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt06-dffram-example",
      "commit": "c77deb5d025a2d9d9768a33aeeea6332ec20ea20",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "addr[4]",
        "ui[5]": "addr[5]",
        "ui[6]": "addr[6]",
        "ui[7]": "wen",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "in[0]",
        "uio[1]": "in[1]",
        "uio[2]": "in[2]",
        "uio[3]": "in[3]",
        "uio[4]": "in[4]",
        "uio[5]": "in[5]",
        "uio[6]": "in[6]",
        "uio[7]": "in[7]"
      }
    },
    {
      "macro": "tt_um_urish_simon",
      "address": 899,
      "title": "Simon Says game",
      "author": "Uri Shaked",
      "description": "A simple memory game",
      "clock_hz": 50000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt06-simon-game",
      "commit": "37f3538ba18fb3eeea73ad37d0f36e631189ae75",
      "pinout": {
        "ui[0]": "btn1",
        "ui[1]": "btn2",
        "ui[2]": "btn3",
        "ui[3]": "btn4",
        "ui[4]": "seginv",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "led1",
        "uo[1]": "led2",
        "uo[2]": "led3",
        "uo[3]": "led4",
        "uo[4]": "speaker",
        "uo[5]": "dig1",
        "uo[6]": "dig2",
        "uo[7]": "",
        "uio[0]": "seg_a",
        "uio[1]": "seg_b",
        "uio[2]": "seg_c",
        "uio[3]": "seg_d",
        "uio[4]": "seg_e",
        "uio[5]": "seg_f",
        "uio[6]": "seg_g",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_urish_spell",
      "address": 642,
      "title": "SPELL",
      "author": "Uri Shaked",
      "description": "SPELL is a minimal, cryptic, stack-based programming language crafted for The Skull CTF",
      "clock_hz": 10000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt06-spell",
      "commit": "faf79a5c35be799a5d361876a4060eda82a86978",
      "pinout": {
        "ui[0]": "run",
        "ui[1]": "step",
        "ui[2]": "load",
        "ui[3]": "dump",
        "ui[4]": "shift_in",
        "ui[5]": "reg_sel[0]",
        "ui[6]": "reg_sel[1]",
        "ui[7]": "",
        "uo[0]": "sleep",
        "uo[1]": "stop",
        "uo[2]": "wait_delay",
        "uo[3]": "shift_out",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "gpio[0]",
        "uio[1]": "gpio[1]",
        "uio[2]": "gpio[2]",
        "uio[3]": "gpio[3]",
        "uio[4]": "gpio[4]",
        "uio[5]": "gpio[5]",
        "uio[6]": "gpio[6]",
        "uio[7]": "gpio[7]"
      }
    },
    {
      "macro": "tt_um_vaf_555_timer",
      "address": 267,
      "title": "A 555-Timer Clone for Tiny Tapeout 6",
      "author": "Vincent Fusco",
      "description": "Blinks an LED the hard way",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        7,
        9,
        8
      ],
      "repo": "https://github.com/vincentfusco/tt06_555",
      "commit": "d6d15863d6a5ec6e1ea4f2659cf53d1356629780",
      "pinout": {
        "ui[0]": "DI_RESET_N",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "DO_OUT",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "V_THRESH_I",
        "ua[1]": "V_TRIG_B_I",
        "ua[2]": "V_DISCH_O"
      }
    },
    {
      "macro": "tt_um_vks_pll",
      "address": 237,
      "title": "PLL blocks",
      "author": "Vipul Sharma",
      "description": "This design contains blocks used in PLL circuit",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        5,
        0,
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/engrvip123/tt_um_vks_pll",
      "commit": "1f40d17d2501ef804efddfb470b5ba87a170570b",
      "pinout": {
        "ui[0]": "CP-1:QA",
        "ui[1]": "CP-1:QB",
        "ui[2]": "FD-2:Clk",
        "ui[3]": "FD-3:fo",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "ref",
        "ui[7]": "",
        "uo[0]": "PFD-2:QA",
        "uo[1]": "PFD-2:QB",
        "uo[2]": "FD-2:fo_4",
        "uo[3]": "FD-2:fo_8",
        "uo[4]": "FD-3:fo_4",
        "uo[5]": "FD-3:fo_8",
        "uo[6]": "FD-4:Out_4",
        "uo[7]": "FD-4:Out_8",
        "uio[0]": "FD-1:fo",
        "uio[1]": "FD-1:fo_by_8",
        "uio[2]": "PFD-1:A",
        "uio[3]": "PFD-1:B",
        "uio[4]": "PFD-1:QA",
        "uio[5]": "PFD-1:QB",
        "uio[6]": "PFD-2:A",
        "uio[7]": "PFD-2:B",
        "ua[0]": "CP_bias",
        "ua[1]": "vout",
        "ua[2]": "vctrl",
        "ua[3]": "Osc_out",
        "ua[4]": "cp_bias",
        "ua[5]": "out"
      }
    },
    {
      "macro": "tt_um_voting_thingey",
      "address": 751,
      "title": "Voting thingey",
      "author": "Zoda + Jade",
      "description": "Does modified-consensus voting for redundant microcontrollers, as a vaguely functional-safety thing",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jadebuilds/tt06-mcu-voting",
      "commit": "5c0d9a802c65c19bf274ae9fb816f97101aac0e0",
      "pinout": {
        "ui[0]": "vote0",
        "ui[1]": "vote1",
        "ui[2]": "vote2",
        "ui[3]": "vote3",
        "ui[4]": "vote4",
        "ui[5]": "vote5",
        "ui[6]": "vote6",
        "ui[7]": "vote7",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wallace_hhrb98",
      "address": 687,
      "title": "UACJ-Wallace multiplier",
      "author": "UACJ Group A",
      "description": "Wallace multiplier",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/HHRB98/UACJ-MIE-Wallace",
      "commit": "bd55b93734a75b8bdb379868bf2132549f2a2078",
      "pinout": {
        "ui[0]": "ui[0]",
        "ui[1]": "ui[1]",
        "ui[2]": "ui[2]",
        "ui[3]": "ui[3]",
        "ui[4]": "ui[4]",
        "ui[5]": "ui[5]",
        "ui[6]": "ui[6]",
        "ui[7]": "ui[7]",
        "uo[0]": "uo [0]",
        "uo[1]": "uo [1]",
        "uo[2]": "uo [2]",
        "uo[3]": "uo [3]",
        "uo[4]": "uo [4]",
        "uo[5]": "uo [5]",
        "uo[6]": "uo [6]",
        "uo[7]": "uo [7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_384437973887503361",
      "address": 33,
      "title": "Asynchronous Down Counter",
      "author": "Alen Music",
      "description": "Counter",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/AlenMusic12/jku-tt06-downcounter",
      "commit": "89d0a5bd320cbf55eabac8bad6e1b61b8283e4cc",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_384711264596377601",
      "address": 37,
      "title": "luckyCube",
      "author": "Lejla Rahmanovic-Abdic",
      "description": "Lucky Number 6",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/leyla224/jku-tt06-luckyCube",
      "commit": "b485cb9bda590bb2bc9cca442b0d2e6c48299268",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_384804985843168257",
      "address": 39,
      "title": "playwithnumbers",
      "author": "Rukija Hafizovic",
      "description": "Even/Odd Numbers",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/rukija15/jku-tt06-playwithnumbers",
      "commit": "0e80416eb396a93a7d13c8920552f637bbe98bbf",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_390913889347409921",
      "address": 673,
      "title": "Notre Dame Dorms LED",
      "author": "Allison Fleming, Daniel Yu, Matthew Morrison",
      "description": "Solves a puzzle based on the correct selection of Notre Dame dorms",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/aflemin7/tinytapeout",
      "commit": "69ef461f4770e32b11f3deb702a2adf207e9fb88",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_392873974467527681",
      "address": 101,
      "title": "PILIPINAS",
      "author": "Alexander Co Abad and Dino Dominic Ligutan",
      "description": "7-seg Display for PILIPINASLASALLE",
      "clock_hz": 1,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/alexandercoabad/PILIPINAS",
      "commit": "ad4e3198d8d2972130c878fd34c58d5605946e84",
      "pinout": {
        "ui[0]": "BCD Bit 3 (A)",
        "ui[1]": "BCD Bit 2 (A)",
        "ui[2]": "BCD Bit 1 (A)",
        "ui[3]": "BCD Bit 0 (A)",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "Manual Input Mode",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "segment dp",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_393815624518031361",
      "address": 293,
      "title": "My Chip",
      "author": "Ani Hakobyan",
      "description": "Design of my chip",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/AniBobChum/My-Chip",
      "commit": "9f5ddbd8cc4224743e2365ed79c372e9d45695f5",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_394618582085551105",
      "address": 165,
      "title": "Keypad Decoder",
      "author": "Slobodan Vrkacevic",
      "description": "A simple controller that detects a pressed key in 4x4 keypad matrix, and displays it on 7-seg. display",
      "clock_hz": 1000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/wrkanet/tt06-keypad-decoder",
      "commit": "2a6bad2a5059820e16fc77fa46ad8a58314c3884",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "dot",
        "uio[0]": "col 4 (input)",
        "uio[1]": "col 3 (input)",
        "uio[2]": "col 2 (input)",
        "uio[3]": "col 1 (input)",
        "uio[4]": "row 4 (output)",
        "uio[5]": "row 3 (output)",
        "uio[6]": "row 2 (output)",
        "uio[7]": "row 1 (output)"
      }
    },
    {
      "macro": "tt_um_wokwi_394640918790880257",
      "address": 553,
      "title": "IFSC Keypad Locker",
      "author": "Roddy Romero; Gabriel Mota; Luis Davi Paganella; Vinicius Westphal De Paula; ",
      "description": "4 digit Locker of an ordinary 4x4 contact keypad (based on Arduino keypad)",
      "clock_hz": 100,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/luisdavikp/tt06-IFSC_Keyboard_Locker",
      "commit": "ff85216fd88ed0878ab6b29ee4f6ee181771502e",
      "pinout": {
        "ui[0]": "VCC",
        "ui[1]": "RESET",
        "ui[2]": "GND",
        "ui[3]": "Keypad Column pin 1",
        "ui[4]": "Keypad Column pin 2",
        "ui[5]": "Keypad Column pin 3",
        "ui[6]": "Keypad Column pin 4",
        "ui[7]": "",
        "uo[0]": "Keypad Row pin 1",
        "uo[1]": "Keypad Row pin 2",
        "uo[2]": "Keypad Row pin 3",
        "uo[3]": "Keypad Row pin 4",
        "uo[4]": "",
        "uo[5]": "Locker State (LED 1)",
        "uo[6]": "Registered Password Signal (LED 2)",
        "uo[7]": "Line Verifier (LED 3)",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_394704587372210177",
      "address": 160,
      "title": "32-Bit Fibonacci Linear Feedback Shift Register",
      "author": "icaris lab",
      "description": "32-bit Fibonacci libear feedback shift register with taps at (32, 30, 26, 25).",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/icarislab/tt06_32bit-fibonacci-prng_cu",
      "commit": "f23a71b1c5dea3b5436c243682f8a35f3298f189",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "data_in",
        "ui[2]": "load_en",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "r25_val",
        "uo[1]": "r26_val",
        "uo[2]": "r27_val",
        "uo[3]": "r28_val",
        "uo[4]": "r29_val",
        "uo[5]": "r30_val",
        "uo[6]": "r31_val",
        "uo[7]": "r32_val_LSFR_out",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_394707429798790145",
      "address": 418,
      "title": "32-Bit Galois Linear Feedback Shift Register",
      "author": "icaris lab",
      "description": "32-bit Galois linear feedback shift register with taps at (32, 30, 26, 25).",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/icarislab/tt06_32bit-galois-prng_cu",
      "commit": "fc39b8cafe71360e96f4135ef76b33448970b04a",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "data_in",
        "ui[2]": "load_en",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "r08_val",
        "uo[1]": "r07_val",
        "uo[2]": "r06_val",
        "uo[3]": "r05_val",
        "uo[4]": "r04_val",
        "uo[5]": "r03_val",
        "uo[6]": "r02_val",
        "uo[7]": "r01_val_LSFR_out",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_394830069681034241",
      "address": 423,
      "title": "Cyclic Redundancy Check 8 bit",
      "author": "EconomIC Engineers",
      "description": "Error detecting circuit commonly used in digital networks and storage devices to detect accidental changes to digital data.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ariz207/tt06-CRC8bit",
      "commit": "acd23874bb303a1e10af76384f4440b059229244",
      "pinout": {
        "ui[0]": "Data Stream input",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "Set for all flip flops",
        "uo[0]": "8th bit",
        "uo[1]": "7th bit",
        "uo[2]": "6th bit",
        "uo[3]": "5th bit",
        "uo[4]": "4th bit",
        "uo[5]": "3rd bit",
        "uo[6]": "2nd bit",
        "uo[7]": "1st bit",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_394888799427677185",
      "address": 232,
      "title": "4-bit stochastic multiplier traditional",
      "author": "Vedika Sharma and David PArent",
      "description": "Two 4-bit || vectors are converted into 1-bit serial stochastic signals and then multiplied with a two input and gate. ",
      "clock_hz": 10000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/davidparent/tt06-woko-4bit-stocastic-muliplier-vedika-davidparent",
      "commit": "c5619e5ec976248806f76f44ca05f369aee6538b",
      "pinout": {
        "ui[0]": "A0",
        "ui[1]": "A1",
        "ui[2]": "A2",
        "ui[3]": "A3",
        "ui[4]": "B0",
        "ui[5]": "B1",
        "ui[6]": "B2",
        "ui[7]": "B3",
        "uo[0]": "SSA",
        "uo[1]": "SSB",
        "uo[2]": "PRBS0",
        "uo[3]": "PRBS1",
        "uo[4]": "PRBS2",
        "uo[5]": "PRBS3",
        "uo[6]": "S_M",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_394898807123828737",
      "address": 173,
      "title": "4-bit Stochastic Multiplier Compact with Stochastic Resonator",
      "author": " Spandan Kottakota and David Parent",
      "description": " This is a 4-bit stochastic multiplier with a more compact architecture.  Also the Schmitt trigger on the input pins is used as a stochastic reonator.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/davidparent/tt06-wokwi-stochastic-multiplier-spandan-davidparent",
      "commit": "7d733151fa191d27b508cfa59a012f478bf031a7",
      "pinout": {
        "ui[0]": "A0",
        "ui[1]": "A1",
        "ui[2]": "A2",
        "ui[3]": "A3",
        "ui[4]": "B0",
        "ui[5]": "B1",
        "ui[6]": "B2",
        "ui[7]": "B3",
        "uo[0]": "CK",
        "uo[1]": "RST",
        "uo[2]": "PRBS0",
        "uo[3]": "SM",
        "uo[4]": "SS0",
        "uo[5]": "SS1",
        "uo[6]": "SR0",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395034561853515777",
      "address": 552,
      "title": "2 bit Binary Calculator",
      "author": "Nikhil Jindal",
      "description": "This is a 2 bit calculator that can multiply, subtract or even add 2 bit binary numbers.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/alexishereok/binary-calculator",
      "commit": "df739b5f44897f585ddfb0c6120a033cb6879139",
      "pinout": {
        "ui[0]": "A0",
        "ui[1]": "A1",
        "ui[2]": "B0",
        "ui[3]": "B1",
        "ui[4]": "Multiply",
        "ui[5]": "Sum",
        "ui[6]": "Subtract",
        "ui[7]": "",
        "uo[0]": "a",
        "uo[1]": "b",
        "uo[2]": "c",
        "uo[3]": "d",
        "uo[4]": "e",
        "uo[5]": "f",
        "uo[6]": "g",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395054466384583681",
      "address": 290,
      "title": "1-Bit ALU 2",
      "author": "FW",
      "description": "Test Tapeout",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/aisvo1/TinyTapeoutTest",
      "commit": "ce4d883969e64855713faae61a869636dc7fbe24",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395054508867644417",
      "address": 546,
      "title": "SynchMux",
      "author": "bc2kaneda",
      "description": "A 2 bit synchronous mux with output enable",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/bc2berlin/tt06",
      "commit": "e885d8f5b83b01a3e68fb5f9ffdc02342da3b4e4",
      "pinout": {
        "ui[0]": "CLK",
        "ui[1]": "RST",
        "ui[2]": "A1",
        "ui[3]": "A2",
        "ui[4]": "B1",
        "ui[5]": "B2",
        "ui[6]": "SEL",
        "ui[7]": "OE",
        "uo[0]": "POPCNT_Y0",
        "uo[1]": "POPCNT_Y1",
        "uo[2]": "POPCNT_Z0",
        "uo[3]": "POPCNT_Z1",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "Y1",
        "uio[1]": "Y2",
        "uio[2]": "YP",
        "uio[3]": "Z1",
        "uio[4]": "Z2",
        "uio[5]": "ZP",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395054564978002945",
      "address": 292,
      "title": "Bestagon LED matrix driver",
      "author": "Marijn",
      "description": "Driver for a hexagonal charlieplexed LED matrix",
      "clock_hz": 1000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/x3e/tt06-wokwi-template",
      "commit": "076114875d418f6a153eeb18b4881e259357d6de",
      "pinout": {
        "ui[0]": "Data",
        "ui[1]": "Display Enable",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "Display pin 0",
        "uio[1]": "Display pin 1",
        "uio[2]": "Display pin 2",
        "uio[3]": "Display pin 3",
        "uio[4]": "Display pin 4",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395054820631340033",
      "address": 163,
      "title": "Workshop Hackaday Juli",
      "author": "Juli",
      "description": "TinyTapeOut Workshop Hackaday project",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jpdasilva/tinytapeout-workshop",
      "commit": "a3dfb9f8d32265becf3c0fafaa4c7116ad519724",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395054823569451009",
      "address": 300,
      "title": "First TT Project",
      "author": "t4m",
      "description": "First TinyTakeout Project at Hackaday",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/thornoff/tiny_tapeout_hackaday",
      "commit": "4fd73db57402387247a08f58f9d1c28648f39c8e",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395054823837887489",
      "address": 298,
      "title": "Dice",
      "author": "Mastro Gippo",
      "description": "Roll a dice",
      "clock_hz": 10000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mastrogippo/tt06-mastrogippo",
      "commit": "731b3185476a5bbea28c4f464fda24067c717cea",
      "pinout": {
        "ui[0]": "btn_r",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "da",
        "uo[1]": "db",
        "uo[2]": "dc",
        "uo[3]": "dd",
        "uo[4]": "de",
        "uo[5]": "df",
        "uo[6]": "dg",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395055035944909825",
      "address": 161,
      "title": "Some_LEDs",
      "author": "marsPRE",
      "description": "Nothing special ",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/marsPRE/tinytapeout_workshop",
      "commit": "50693c5b26485f320d264639f947fc45f10b2a3e",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395055341723330561",
      "address": 296,
      "title": "Workshop_chip",
      "author": "Inne Lemstra",
      "description": "My first chip design, to be honest I'm not sure how far I will get.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Inne-Lemstra/HaD_chip_workshop",
      "commit": "d5365a42fd4a38dd2bcea98b4561d81fd520a136",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395055351144787969",
      "address": 302,
      "title": "Hack a day Tiny Tapeout project",
      "author": "Manuel",
      "description": "Circuit designed during the Hack a day workshop",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mmartinortiz/tinytapeout-workshop",
      "commit": "45889990035d4bacdfd8dfb20bfd40fa5ee32ced",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395055359324730369",
      "address": 301,
      "title": "Tiny_Tapeout_6_Frank",
      "author": "Frank Hellmann",
      "description": "7Seg Around the Clock / FH display",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/sandman72/Tiny_Tapeout_6_Frank",
      "commit": "fcaeafca20c4f57bc02a21df9326035635102bf9",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395055455727667201",
      "address": 556,
      "title": "Hardware Trojan Part II",
      "author": "Jeremy Hong",
      "description": "Pseudorandom number generator with and without hardware trojan",
      "clock_hz": 10000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/hongselectronics/HW_Trojan_Rev2",
      "commit": "c4470c85912a6633662be9ba14e3c49bc9e12ed8",
      "pinout": {
        "ui[0]": "Scan Enable",
        "ui[1]": "ScanIn 1",
        "ui[2]": "ScanIn 2",
        "ui[3]": "ScanIn 3",
        "ui[4]": "ScanIn 4",
        "ui[5]": "ScanIn 5",
        "ui[6]": "ScanIn 6",
        "ui[7]": "ScanIn 7",
        "uo[0]": "PRNG 1 output Trojan Free",
        "uo[1]": "PRNG 2 output trojan inserted",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "Input, ScanIn 8",
        "uio[1]": "Input, ScanIn 9",
        "uio[2]": "Input, ScanIn 10",
        "uio[3]": "Input, External Trojan Trigger",
        "uio[4]": "Output, single inverter test",
        "uio[5]": "Input, single inverter test",
        "uio[6]": "Input, 8 inverters test",
        "uio[7]": "Output, 8 inverters test"
      }
    },
    {
      "macro": "tt_um_wokwi_395055722430895105",
      "address": 420,
      "title": "Servo Signal Tester",
      "author": "Holunder",
      "description": "If you provide a 4kHz Clock and 8 LED's as Output, the LED's will light up according to the Servo Signal on Input 0",
      "clock_hz": 4000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/holunder00/TinyTapeout_SecondTry",
      "commit": "08f331f2c0f8ce2f174be5ad4594376110fb642e",
      "pinout": {
        "ui[0]": "Servo Signal",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "LED 0",
        "uo[1]": "LED 1",
        "uo[2]": "LED 2",
        "uo[3]": "LED 3",
        "uo[4]": "LED 4",
        "uo[5]": "LED 5",
        "uo[6]": "LED 6",
        "uo[7]": "LED 7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395058308283408385",
      "address": 288,
      "title": "test for tiny tapeout hackaday",
      "author": "ivo-tt",
      "description": "a useless test",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ivo-tt/tiny-tapeout-01",
      "commit": "4fecdddecec74a5999173ebb5b101f72ac1811a9",
      "pinout": {
        "ui[0]": "a",
        "ui[1]": "b",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "0",
        "uo[1]": "1",
        "uo[2]": "2",
        "uo[3]": "3",
        "uo[4]": "4",
        "uo[5]": "5",
        "uo[6]": "6",
        "uo[7]": "7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395061443288867841",
      "address": 495,
      "title": "BCD to single 7 segment display Converter",
      "author": "Kelvin Kung",
      "description": "BCD to single 7 segment display",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/kelvinutp/bcd-2-7segment-decoder",
      "commit": "e454fa7be63dfa8a75c6dde7cbe1d6466e660f2d",
      "pinout": {
        "ui[0]": "B3",
        "ui[1]": "B2",
        "ui[2]": "B1",
        "ui[3]": "B0",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "A",
        "uo[1]": "B",
        "uo[2]": "C",
        "uo[3]": "D",
        "uo[4]": "E",
        "uo[5]": "F",
        "uo[6]": "G",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395134712676183041",
      "address": 426,
      "title": "Inverters",
      "author": "James Meech",
      "description": "A set of inverters",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JamesTimothyMeech/TT06-beta",
      "commit": "52f9da938c72d4fa6970acac83839390bc689288",
      "pinout": {
        "ui[0]": "D Flip Flop Input",
        "ui[1]": "Inverter 1 input",
        "ui[2]": "Inverter 2 input",
        "ui[3]": "Inverter 3 input",
        "ui[4]": "Inverter 4 input",
        "ui[5]": "Inverter 5 input",
        "ui[6]": "Inverter 6 input, also the output enable for all bidirectional pins connected to inverter inputs",
        "ui[7]": "Inverter 7 input, also the output enable for all bidirectional pins connected to inverter output",
        "uo[0]": "D Flip Flop output",
        "uo[1]": "Inverter 1 output",
        "uo[2]": "Inverter 2 output",
        "uo[3]": "Inverter 3 output",
        "uo[4]": "Inverter 4 output",
        "uo[5]": "Inverter 5 output",
        "uo[6]": "Inverter 6 output",
        "uo[7]": "Inverter 7 output",
        "uio[0]": "Bidirectional inverter 1 input",
        "uio[1]": "Bidirectional inverter 1 output",
        "uio[2]": "Bidirectional inverter 2 input",
        "uio[3]": "Bidirectional inverter 2 output",
        "uio[4]": "Bidirectional inverter 3 input",
        "uio[5]": "Bidirectional inverter 3 output",
        "uio[6]": "Bidirectional inverter 4 input",
        "uio[7]": "Bidirectional inverter 4 output"
      }
    },
    {
      "macro": "tt_um_wokwi_395142547244224513",
      "address": 430,
      "title": "EFAB Demo 2",
      "author": "Anton Maurovic",
      "description": "Displays 'EFAB' on 7seg display",
      "clock_hz": 2,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/amm-efab/tt_efab_demo",
      "commit": "06ee307c8391ec7aaa04744a96bb797da26383a6",
      "pinout": {
        "ui[0]": "run",
        "ui[1]": "",
        "ui[2]": "state_init[0]",
        "ui[3]": "state_init[1]",
        "ui[4]": "state_init[2]",
        "ui[5]": "state_init[3]",
        "ui[6]": "",
        "ui[7]": "no_blink",
        "uo[0]": "a",
        "uo[1]": "b",
        "uo[2]": "c",
        "uo[3]": "d",
        "uo[4]": "e",
        "uo[5]": "f",
        "uo[6]": "g",
        "uo[7]": "dot",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395179352683141121",
      "address": 622,
      "title": "Combination Lock",
      "author": "Eric Cheng",
      "description": "4-bit combination lock with a maximum of 3 attempts per lock and a master reset",
      "clock_hz": 10000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/echeng98/tt06-combolock",
      "commit": "a54295ab0f36f588d0bd74944cbb91b4ec880ed1",
      "pinout": {
        "ui[0]": "Set",
        "ui[1]": "Pswd[0]",
        "ui[2]": "Pswd[1]",
        "ui[3]": "Pswd[2]",
        "ui[4]": "Pswd[3]",
        "ui[5]": "Enter",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "CurrPswd[0]",
        "uo[1]": "CurrPswd[0]",
        "uo[2]": "CurrPswd[0]",
        "uo[3]": "CurrPswd[0]",
        "uo[4]": "Unlocked",
        "uo[5]": "PinLocked",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395263962779770881",
      "address": 421,
      "title": "Bivium-B Non-Linear Feedback Shift Register",
      "author": "icaris lab",
      "description": "Bivium-B stream cipher used as a non-linear feedback shift register.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/icarislab/tt06_biviumb-prng_cu",
      "commit": "86f2f21290cd272d366a608ac19ba11776a98adb",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "data_in",
        "ui[2]": "load_en",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "r000_val",
        "uo[1]": "r068_val",
        "uo[2]": "INTERM_fb",
        "uo[3]": "r065_val",
        "uo[4]": "r092_val",
        "uo[5]": "r161_val",
        "uo[6]": "r176_val",
        "uo[7]": "NLSFR_out",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395355133883896833",
      "address": 551,
      "title": "BIT COMPARATOR",
      "author": "FELIPE SD",
      "description": "Compare two bits ",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/felipe-SD/tt06-wokwi-template-BIT_TEST",
      "commit": "99be8383548cbc58a266b0452e8c4537eaaab764",
      "pinout": {
        "ui[0]": "BIT A",
        "ui[1]": "BIT B",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "OUTPUT A",
        "uo[1]": "OUTPUT B",
        "uo[2]": "OUTPUT C",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395357890431011841",
      "address": 487,
      "title": "Trivium Non-Linear Feedback Shift Register",
      "author": "icaris lab",
      "description": "Trivium stream cipher used as a non-linear feedback shift register.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/icarislab/tt06_trivium-prng_cu",
      "commit": "e830c0c56964fb2a6cf743a52d4e2f4b68c579bc",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "data_in",
        "ui[2]": "load_en",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "r000_val",
        "uo[1]": "INTERM_fb",
        "uo[2]": "r092_val",
        "uo[3]": "r093_val",
        "uo[4]": "r176_val",
        "uo[5]": "r177_val",
        "uo[6]": "r287_val",
        "uo[7]": "NLSFR_out",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395414987024660481",
      "address": 481,
      "title": "HELP for tinyTapeout",
      "author": "Ariella Eliassaf",
      "description": "Use 7segment to show 'HELP'",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/AriellaE/tt06-help",
      "commit": "a308a772d0f6747f7e51ec0f3b37a4d856562748",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "seg_a",
        "uo[1]": "seg_b",
        "uo[2]": "seg_c",
        "uo[3]": "seg_d",
        "uo[4]": "seg_e",
        "uo[5]": "seg_f",
        "uo[6]": "seg_g",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395444977868278785",
      "address": 167,
      "title": "*NOT WORKING* HP 5082-7500 Decoder",
      "author": "Per Jensen",
      "description": "Trying to recreate the decoding logic in the HP 5082-7500-display. At this moment project is not finished.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/zaprodk/HP5082-7500_Decoder",
      "commit": "6e84fef4474b55816352665b1850100c7403fa8e",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395514572866576385",
      "address": 608,
      "title": "Parity Generator",
      "author": "Eric Ulteig",
      "description": "TT06 Learning Exercise",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Beird0/TT06_Parity-Generator",
      "commit": "1e09bd4c09764893418204b776bbb30214255dfc",
      "pinout": {
        "ui[0]": "input1",
        "ui[1]": "input2",
        "ui[2]": "input3",
        "ui[3]": "input4",
        "ui[4]": "input5",
        "ui[5]": "input6",
        "ui[6]": "input7",
        "ui[7]": "input8",
        "uo[0]": "output1",
        "uo[1]": "output2",
        "uo[2]": "output3",
        "uo[3]": "output4",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395522292785089537",
      "address": 744,
      "title": "Displays CIt",
      "author": "Cambridge",
      "description": "To display 'CIt' on 7 segment display",
      "clock_hz": 1,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/cittapeout/Citech",
      "commit": "c3d40da605a2ffc6ad68a30974ef861b90c705b9",
      "pinout": {
        "ui[0]": "run",
        "ui[1]": "state_init[0]",
        "ui[2]": "state_init[1]",
        "ui[3]": "state_init[2]",
        "ui[4]": "state_init[3]",
        "ui[5]": "unused",
        "ui[6]": "unused",
        "ui[7]": "unused",
        "uo[0]": "led_a",
        "uo[1]": "led_b",
        "uo[2]": "led_c",
        "uo[3]": "led_d",
        "uo[4]": "led_e",
        "uo[5]": "led_f",
        "uo[6]": "led_g",
        "uo[7]": "led_h",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395567106413190145",
      "address": 672,
      "title": "4-Bit Full Adder and Subtractor with Hardware Trojan",
      "author": "Jeremy Hong",
      "description": "Externally triggered hardware trojan in a 4-bit full adder and subtractor",
      "clock_hz": 100000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/hongselectronics/FA_SUB_HWT",
      "commit": "0f7667922e5c60e4933191d1d17534a816816bbd",
      "pinout": {
        "ui[0]": "Add/Subtract",
        "ui[1]": "A0",
        "ui[2]": "B0",
        "ui[3]": "A1",
        "ui[4]": "B1",
        "ui[5]": "A2",
        "ui[6]": "B2",
        "ui[7]": "A3",
        "uo[0]": "7 Segment Display",
        "uo[1]": "7 Segment Display",
        "uo[2]": "7 Segment Display",
        "uo[3]": "7 Segment Display",
        "uo[4]": "7 Segment Display",
        "uo[5]": "7 Segment Display",
        "uo[6]": "7 Segment Display",
        "uo[7]": "7 Segment Display",
        "uio[0]": "Input - B3",
        "uio[1]": "Input - Hardware Trojan Trigger",
        "uio[2]": "Output - LFSR 1",
        "uio[3]": "Output - LFSR 2",
        "uio[4]": "Output - LFSR 3",
        "uio[5]": "Input - LFSR 3",
        "uio[6]": "Input - LFSR 4",
        "uio[7]": "Output - LFSR 7"
      }
    },
    {
      "macro": "tt_um_wokwi_395599496098067457",
      "address": 681,
      "title": "EVEN AND ODD COUNTERS",
      "author": "Dr.LIPIKA GUPTA, DEVRAJ, JUGRAJ",
      "description": "WE CAN CHOOSE TO COUNT EVEN AND ODD BCD",
      "clock_hz": 10000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/DevrajC03/Jugraj-Devraj-Counters",
      "commit": "ae2304e5d03ad5214fdb4e6495d187bcb408ba35",
      "pinout": {
        "ui[0]": "IN1",
        "ui[1]": "IN2",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "OUT0",
        "uo[1]": "OUT1",
        "uo[2]": "OUT2",
        "uo[3]": "OUT3",
        "uo[4]": "OUT4",
        "uo[5]": "OUT5",
        "uo[6]": "OUT6",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395614106833794049",
      "address": 812,
      "title": "Universal gates",
      "author": "htfab",
      "description": "A modern take on 74-series chips",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/htfab/unigate-wokwi",
      "commit": "f1e4d11192b8ca69e88a1bd06dddcefdf2ec2c82",
      "pinout": {
        "ui[0]": "a",
        "ui[1]": "b",
        "ui[2]": "c",
        "ui[3]": "d",
        "ui[4]": "e",
        "ui[5]": "f",
        "ui[6]": "g",
        "ui[7]": "h",
        "uo[0]": "i",
        "uo[1]": "j",
        "uo[2]": "k",
        "uo[3]": "l",
        "uo[4]": "m",
        "uo[5]": "n",
        "uo[6]": "o",
        "uo[7]": "p",
        "uio[0]": "u21(a..d)",
        "uio[1]": "u31(a..f)",
        "uio[2]": "u22(a..f).1",
        "uio[3]": "u22(a..f).2",
        "uio[4]": "u41(a..j)",
        "uio[5]": "nand(e, f)",
        "uio[6]": "u21(g..j)",
        "uio[7]": "u31(k..p)"
      }
    },
    {
      "macro": "tt_um_wokwi_395615790979120129",
      "address": 745,
      "title": "Cambio de giro de motor CD",
      "author": "Equipo6TESVG",
      "description": "Cambio de giro de motor CD",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JuanSebastianMoya7/tt06-32b_fibonacci",
      "commit": "1394b391e6f6f270a4edee11542b3d3960bd51b6",
      "pinout": {
        "ui[0]": "E0",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "E4",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "E7",
        "uo[0]": "S0",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "S7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_395618714068432897",
      "address": 749,
      "title": "32b Fibonacci Original",
      "author": "Felipe Serrano",
      "description": "Fibonacci Serie",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JuanSebastianMoya7/tt06-32b_fibonacci_original",
      "commit": "37593d40ff8c45f09186ab1ffedffa4c62c6e79c",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "In1",
        "ui[2]": "In2",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Out0",
        "uo[1]": "Out1",
        "uo[2]": "Out2",
        "uo[3]": "Out3",
        "uo[4]": "Out4",
        "uo[5]": "Out5",
        "uo[6]": "Out6",
        "uo[7]": "Out7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wuehr1999_servotester",
      "address": 422,
      "title": "Servotester",
      "author": "Jonas Wuehr",
      "description": "Generate a 50 Hz test signal for RC servos.",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/wuehr1999/tt06-wuehr1999-servotester",
      "commit": "4de958024cf66c7ab35e92249a6573f8726abdfc",
      "pinout": {
        "ui[0]": "position bit 0",
        "ui[1]": "position bit 1",
        "ui[2]": "position bit 2",
        "ui[3]": "position bit 3",
        "ui[4]": "position bit 4",
        "ui[5]": "position bit 5",
        "ui[6]": "position bit 6",
        "ui[7]": "position bit 7",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "servo pulse"
      }
    },
    {
      "macro": "tt_um_zhwa_rgb_mixer",
      "address": 162,
      "title": "RGB Mixer",
      "author": "Zhe Wang",
      "description": "Zero to ASIC demo project",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/zhwa/zeroasic",
      "commit": "cfe3cd5628735c544dd4fcfa4e3b1902c85de30d",
      "pinout": {
        "ui[0]": "enc0 a",
        "ui[1]": "enc0 b",
        "ui[2]": "enc1 a",
        "ui[3]": "enc1 b",
        "ui[4]": "enc2 a",
        "ui[5]": "enc2 b",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "pwm0",
        "uo[1]": "pwm1",
        "uo[2]": "pwm2",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    }
  ]
}