{
  "version": 3,
  "id": "ttihp25a",
  "name": "Tiny Tapeout IHP 25a",
  "repo": "https://github.com/TinyTapeout/tinytapeout-ihp-25a",
  "commit": "7bda8e80b849e025bbaab50ec379810ad815250f",
  "updated": "2025-04-01T12:09:18Z",
  "projects": [
    {
      "macro": "tt_um_09eksdee",
      "address": 10,
      "title": "eksdee",
      "author": "lucy revi",
      "description": "That's for none of us to know and all of us to find out.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Fi50/tt09-eksdee",
      "commit": "7ac4c80d27c9a04b2ee3f12cc7aa6cdcfea082c4",
      "pinout": {
        "ui[0]": "IN0",
        "ui[1]": "IN1",
        "ui[2]": "IN2",
        "ui[3]": "IN3",
        "ui[4]": "IN4",
        "ui[5]": "IN5",
        "ui[6]": "IN6",
        "ui[7]": "IN7",
        "uo[0]": "OUT0",
        "uo[1]": "OUT1",
        "uo[2]": "OUT2",
        "uo[3]": "OUT3",
        "uo[4]": "OUT4",
        "uo[5]": "OUT5",
        "uo[6]": "OUT6",
        "uo[7]": "OUT7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_10_vga_crossyroad",
      "address": 449,
      "title": "Crossyroad",
      "author": "Matt, Jovan, Ryan",
      "description": "Crossyroad game recreated on an ASIC",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mchen26/tt10-vga-crossyroad",
      "commit": "373df6c609763b8fdfdf3b053eaacc5cff8caed8",
      "pinout": {
        "ui[0]": "move_btn",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "red",
        "uo[1]": "green",
        "uo[2]": "blue",
        "uo[3]": "vsync",
        "uo[4]": "red",
        "uo[5]": "green",
        "uo[6]": "blue",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_16_mic_beamformer_arghunter",
      "address": 239,
      "title": "16 Mic Beamformer",
      "author": "Armaan Gomes",
      "description": "A 0 delays fixed delay and sum beamformer that can utilize up to 16 input microphones",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/arghunter/CIC-Filter-Verilog",
      "commit": "dbdd7c07f17e7abcd619f34b3c8fa26e3e5d2ef4",
      "pinout": {
        "ui[0]": "PDM Input Mics 0,1",
        "ui[1]": "PDM Input Mics 2,3",
        "ui[2]": "PDM Input Mics 4,5",
        "ui[3]": "PDM Input Mics 6,7",
        "ui[4]": "PDM Input Mics 8,9",
        "ui[5]": "PDM Input Mics 10,11",
        "ui[6]": "PDM Input Mics 12,13",
        "ui[7]": "PDM Input Mics 14,15",
        "uo[0]": "I2S Out",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "Bit Clock (3.072 MHz)",
        "uio[1]": "LR Clock (48kHz)",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_2048_vga_game",
      "address": 334,
      "title": "2048 sliding tile puzzle game (VGA)",
      "author": "Uri Shaked",
      "description": "Slide numbered tiles on a grid to combine them to create a tile with the number 2048.",
      "clock_hz": 25175000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt10-2048-game",
      "commit": "dc1a6c10d62debccb5a5596a5335e8f27aef3f1b",
      "pinout": {
        "ui[0]": "btn_up",
        "ui[1]": "btn_down",
        "ui[2]": "btn_left",
        "ui[3]": "btn_right",
        "ui[4]": "gamepad_latch",
        "ui[5]": "gamepad_clk",
        "ui[6]": "gamepad_data",
        "ui[7]": "debug_mode",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "debug_cmd",
        "uio[1]": "debug_cmd",
        "uio[2]": "debug_cmd",
        "uio[3]": "debug_cmd",
        "uio[4]": "debug_data",
        "uio[5]": "debug_data",
        "uio[6]": "debug_data",
        "uio[7]": "debug_data"
      }
    },
    {
      "macro": "tt_um_4_bit_ALU",
      "address": 102,
      "title": "ALU in verilog",
      "author": "Carl Emil Vinten",
      "description": "Simple ALU in verilog",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/CarlVinten/TinyTapeout_1",
      "commit": "f1e9d91995e731d52dd33dccd9da14df1d71b71f",
      "pinout": {
        "ui[1]": "in_0",
        "ui[2]": "in_1",
        "ui[0]": "in_2",
        "ui[3]": "in_3",
        "ui[4]": "in_4",
        "ui[5]": "in_5",
        "ui[6]": "in_6",
        "ui[7]": "in_7",
        "uo[0]": "out_0",
        "uo[1]": "out_1",
        "uo[2]": "out_2",
        "uo[3]": "out_3",
        "uo[4]": "out_4",
        "uo[5]": "out_5",
        "uo[6]": "out_6",
        "uo[7]": "out_7",
        "uio[0]": "inout_0",
        "uio[1]": "inout_1",
        "uio[2]": "inout_2",
        "uio[3]": "inout_3",
        "uio[4]": "inout_4",
        "uio[5]": "inout_5",
        "uio[6]": "inout_6",
        "uio[7]": "inout_7"
      }
    },
    {
      "macro": "tt_um_CLA8",
      "address": 7,
      "title": "8-bit Carry Look-Ahead Adder",
      "author": "Seongwan Jeon and Michael Zeng",
      "description": "Fast 8-bit adder",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/sej3939/Carry-Lookahead-Adder",
      "commit": "4e553447c4286efc706c3720492d2f14e4bacb4b",
      "pinout": {
        "ui[0]": "a[0]",
        "ui[1]": "a[1]",
        "ui[2]": "a[2]",
        "ui[3]": "a[3]",
        "ui[4]": "a[4]",
        "ui[5]": "a[5]",
        "ui[6]": "a[6]",
        "ui[7]": "a[7]",
        "uo[0]": "sum[0]",
        "uo[1]": "sum[1]",
        "uo[2]": "sum[2]",
        "uo[3]": "sum[3]",
        "uo[4]": "sum[4]",
        "uo[5]": "sum[5]",
        "uo[6]": "sum[6]",
        "uo[7]": "sum[7]",
        "uio[0]": "b[0]",
        "uio[1]": "b[1]",
        "uio[2]": "b[2]",
        "uio[3]": "b[3]",
        "uio[4]": "b[4]",
        "uio[5]": "b[5]",
        "uio[6]": "b[6]",
        "uio[7]": "b[7]"
      }
    },
    {
      "macro": "tt_um_CarrySelect8bit",
      "address": 490,
      "title": "carry_select",
      "author": "Juan, Leyang",
      "description": "This project designs a 8-bit carry select adder.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JuanGGil/tt09-carryselect8bit",
      "commit": "d71a6bdc81d227f0a86c73ef1a5b0129ecc8a728",
      "pinout": {
        "ui[0]": "a[0]",
        "ui[1]": "a[1]",
        "ui[2]": "a[2]",
        "ui[3]": "a[3]",
        "ui[4]": "a[4]",
        "ui[5]": "a[5]",
        "ui[6]": "a[6]",
        "ui[7]": "a[7]",
        "uo[0]": "sum[0]",
        "uo[1]": "sum[1]",
        "uo[2]": "sum[2]",
        "uo[3]": "sum[3]",
        "uo[4]": "sum[4]",
        "uo[5]": "sum[5]",
        "uo[6]": "sum[6]",
        "uo[7]": "sum[7]",
        "uio[0]": "b[0]",
        "uio[1]": "b[1]",
        "uio[2]": "b[2]",
        "uio[3]": "b[3]",
        "uio[4]": "b[4]",
        "uio[5]": "b[5]",
        "uio[6]": "b[6]",
        "uio[7]": "b[7]"
      }
    },
    {
      "macro": "tt_um_Coline3003_spect_top",
      "address": 690,
      "title": "Spectrogram extractor, 2 channels",
      "author": "Coline Chehense, Dinko Oletic",
      "description": "Digital part of a time-frequency feature extraction sensor interface, two-channel real-time signal amplitude tracker. 7 input lines per channel represent thermometer code output of a flash ADC. Two-channel serial output.",
      "clock_hz": 1000000,
      "tiles": "6x2",
      "analog_pins": [],
      "repo": "https://github.com/DinkoOletic/tt09-HDL_unizgfer_2ch_AE_tf_spectrogram",
      "commit": "47c65f767e760975226cf4666a4fef081809ae02",
      "pinout": {
        "ui[0]": "ch1(0)",
        "ui[1]": "ch1(1)",
        "ui[2]": "ch1(2)",
        "ui[3]": "ch1(3)",
        "ui[4]": "ch1(4)",
        "ui[5]": "ch1(5)",
        "ui[6]": "ch1(6)",
        "ui[7]": "RTC_clk(1kHz)",
        "uo[0]": "serial_out(0)",
        "uo[1]": "serial_out(1)",
        "uo[2]": "SL_time",
        "uo[3]": "SL_ch",
        "uo[4]": "signal_detected",
        "uo[5]": "memorization_completed",
        "uo[6]": "serial_readout",
        "uo[7]": "sending_data",
        "uio[0]": "ch2(0)",
        "uio[1]": "ch2(1)",
        "uio[2]": "ch2(2)",
        "uio[3]": "ch2(3)",
        "uio[4]": "ch2(4)",
        "uio[5]": "ch2(5)",
        "uio[6]": "ch2(6)",
        "uio[7]": "serial_readout_clk(4Mhz)"
      }
    },
    {
      "macro": "tt_um_Coline3003_top",
      "address": 753,
      "title": "15 channels emission counter",
      "author": "Coline Chehense, Dinko Oletic",
      "description": "Counts the number of pulses received on each of 15 input channel and returns periodically a serial output of these values.",
      "clock_hz": 12000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/DinkoOletic/tt09-HDL_unizgfer_15ch_AE_evt_counter",
      "commit": "90e15b62b6379c2b15e2a412dcaed24c519c3282",
      "pinout": {
        "ui[0]": "RTC",
        "ui[1]": "Channel 1",
        "ui[2]": "Channel 2",
        "ui[3]": "Channel 3",
        "ui[4]": "Channel 4",
        "ui[5]": "Channel 5",
        "ui[6]": "Channel 6",
        "ui[7]": "Channel 7",
        "uo[0]": "serial_out",
        "uo[1]": "ovf_global",
        "uo[2]": "ovf_RTC",
        "uo[3]": "a0",
        "uo[4]": "a1",
        "uo[5]": "a2",
        "uo[6]": "a3",
        "uo[7]": "SL_out",
        "uio[0]": "Channel 8",
        "uio[1]": "Channel 9",
        "uio[2]": "Channel 10",
        "uio[3]": "Channel 11",
        "uio[4]": "Channel 12",
        "uio[5]": "Channel 13",
        "uio[6]": "Channel 14",
        "uio[7]": "Channel 15"
      }
    },
    {
      "macro": "tt_um_DaDDS",
      "address": 48,
      "title": "DaDDS",
      "author": "Jeremiasz Dados",
      "description": "8-bit High-Frequency Direct Digital Synthesizer with OOK and FSK modulation",
      "clock_hz": 60000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jdados/DaDDS",
      "commit": "f7829710e720a21f92429a8bf5479046d01ec33e",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "UART RX",
        "ui[4]": "FREQ SEL",
        "ui[5]": "RF DATA",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "DAC[0]",
        "uo[1]": "DAC[1]",
        "uo[2]": "DAC[2]",
        "uo[3]": "DAC[3]",
        "uo[4]": "DAC[4]",
        "uo[5]": "DAC[5]",
        "uo[6]": "DAC[6]",
        "uo[7]": "DAC[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_Electom_cla_4bits",
      "address": 293,
      "title": "4-bit CLA",
      "author": "Wei Zhang",
      "description": "A 4 bit carry look-ahead adder",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Electom/tt08_CSA_4bits",
      "commit": "213ea903e947a2fbc5415d67e893da5d43385ffe",
      "pinout": {
        "ui[0]": "a[0]",
        "ui[1]": "a[1]",
        "ui[2]": "a[2]",
        "ui[3]": "a[3]",
        "ui[4]": "b[0]",
        "ui[5]": "b[1]",
        "ui[6]": "b[2]",
        "ui[7]": "b[3]",
        "uo[0]": "s[0]",
        "uo[1]": "s[1]",
        "uo[2]": "s[2]",
        "uo[3]": "s[3]",
        "uo[4]": "co",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "ci",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_Esteban_Oman_Mendoza_maze_2024_top",
      "address": 803,
      "title": "Space Detective Maze Explorer",
      "author": "Esteban Oman Mendoza",
      "description": "A maze explorer game, output uses qty5 7segment displays or LED equivalent",
      "clock_hz": 50000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Esteban-Oman-Mendoza/maze_game",
      "commit": "1ee121d2b5b8e91d7cb510e173ed56e16a03b76d",
      "pinout": {
        "ui[0]": " user_input[0] Move forward (move one step in selected direction",
        "ui[1]": " user_input[1] (considered least significant bit used in selection direction) Used to select facing direction where 2'b00 = N, 2'b01= East, 2'b10 = South, and 2'b11 = West",
        "ui[2]": " user_input[2] (considered least most significant bit used in selection direction) Used to select facing direction where 2'b00 = N, 2'b01= East, 2'b10 = South, and 2'b11 = West",
        "ui[3]": "not used",
        "ui[4]": "not used",
        "ui[5]": "not used",
        "ui[6]": "not used",
        "ui[7]": "not used",
        "uo[0]": "       a        segments[0] = a ",
        "uo[1]": "      ---       segments[1] = b ",
        "uo[2]": "  f  | g |  b   segments[2] = c ",
        "uo[3]": "     |   |      segments[3] = d ",
        "uo[4]": "      ---       segments[4] = e ",
        "uo[5]": "     |   |      segments[5] = f ",
        "uo[6]": "  e  | d |  c   segments[6] = g ",
        "uo[7]": "     |   |      segments[7] = dp",
        "uio[0]": "state LSB",
        "uio[1]": "state MSB",
        "uio[2]": "Direction LSB",
        "uio[3]": "Direction MSB",
        "uio[4]": "Top half of segment used to display the walls of the room as seen from above (birds eye view). The top most segment(a) represents the wall directly in front of you in the chosen direction N,E,S, or West.",
        "uio[5]": "not used",
        "uio[6]": "not used",
        "uio[7]": "not used"
      }
    },
    {
      "macro": "tt_um_I2C",
      "address": 480,
      "title": "I2C and SPI",
      "author": "Vidyamol and Arun A V",
      "description": "Design of I2C and SPI communication protocols",
      "clock_hz": 400000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/arunav321/tt09-i2c",
      "commit": "4edc262a7f6ced74f10eaab990617041843143da",
      "pinout": {
        "ui[0]": "i2c_data_in",
        "ui[1]": "i2c_clk_in",
        "ui[2]": "miso_i",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "i2c_wb_err_i",
        "ui[6]": "i2c_wb_rty_i",
        "ui[7]": "",
        "uo[0]": "sck_o",
        "uo[1]": "mosi_o",
        "uo[2]": "i2c_data_out",
        "uo[3]": "i2c_clk_out",
        "uo[4]": "i2c_data_oe",
        "uo[5]": "i2c_clk_oe",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_JAC_EE_segdecode",
      "address": 196,
      "title": "7 Segment Decode",
      "author": "Jack Clayton",
      "description": "ASIC implementation of a university CPLD project which drives 4 multiplexed 7 segment displays, and scans a multiplexed keypad.",
      "clock_hz": 5000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JAC-EE/tt08-SegDecode-ASIC",
      "commit": "8029a33959ac51fe8c0fcfa9570b4cc15f07a72c",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "MOSI",
        "ui[2]": "EN",
        "ui[3]": "RESET",
        "ui[4]": "KeyPlxr[0]",
        "ui[5]": "KeyPlxr[1]",
        "ui[6]": "KeyPlxr[2]",
        "ui[7]": "KeyPlxr[3]",
        "uo[0]": "Out7S[0]",
        "uo[1]": "Out7S[1]",
        "uo[2]": "Out7S[2]",
        "uo[3]": "Out7S[3]",
        "uo[4]": "Out7S[4]",
        "uo[5]": "Out7S[5]",
        "uo[6]": "Out7S[6]",
        "uo[7]": "MISO",
        "uio[0]": "ScreenSel[0]",
        "uio[1]": "ScreenSel[1]",
        "uio[2]": "ScreenSel[2]",
        "uio[3]": "ScreenSel[3]",
        "uio[4]": "High-Z",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_JesusMinguillon_freqSweep",
      "address": 813,
      "title": "freqSweep",
      "author": "Jesus Minguillon",
      "description": "Frequency sweeper",
      "clock_hz": 5000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JesusMinguillon/tt09-verilog-freqSweep",
      "commit": "9656f665dd4aee45c6f4a7cca9d15d0f7029a9fa",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "uo_out[0]",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_KoushikCSN_RISCV",
      "address": 76,
      "title": "RISCV Processor Design",
      "author": "KOUSHIK CSN",
      "description": "RISCV Processor Design",
      "clock_hz": 64000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/KoushikCSN/TT_RISCV",
      "commit": "1a1dbcc3589c0f350c478cb35ee59ab2a53a5d21",
      "pinout": {
        "ui[0]": "instruction[0]",
        "ui[1]": "instruction[1]",
        "ui[2]": "instruction[2]",
        "ui[3]": "instruction[3]",
        "ui[4]": "instruction[4]",
        "ui[5]": "instruction[5]",
        "ui[6]": "instruction[6]",
        "ui[7]": "instruction[7]",
        "uo[0]": "result[0]",
        "uo[1]": "result[1]",
        "uo[2]": "result[2]",
        "uo[3]": "result[3]",
        "uo[4]": "result[4]",
        "uo[5]": "result[5]",
        "uo[6]": "result[6]",
        "uo[7]": "result[7]",
        "uio[0]": "instruction[8]",
        "uio[1]": "instruction[9]",
        "uio[2]": "instruction[10]",
        "uio[3]": "instruction[11]",
        "uio[4]": "instruction[12]",
        "uio[5]": "instruction[13]",
        "uio[6]": "instruction[14]",
        "uio[7]": "instruction[15]"
      }
    },
    {
      "macro": "tt_um_LFSR_Encrypt",
      "address": 75,
      "title": "LFSR Encrypter",
      "author": "Mitchell Tansey",
      "description": "Simple LFSR data encrypter. Takes data in and xor's it with an lfsr output to encrypt data.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MitchTansey/tt09-LFSR-Encrypter",
      "commit": "9f384413c40d52e05d4133c7aad70be20f3ad87e",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "ui_out[0]",
        "uo[1]": "ui_out[1]",
        "uo[2]": "ui_out[2]",
        "uo[3]": "ui_out[3]",
        "uo[4]": "ui_out[4]",
        "uo[5]": "ui_out[5]",
        "uo[6]": "ui_out[6]",
        "uo[7]": "ui_out[7]",
        "uio[0]": "uio_out[0]",
        "uio[1]": "uio_out[1]",
        "uio[2]": "uio_out[2]",
        "uio[3]": "uio_out[3]",
        "uio[4]": "uio_out[4]",
        "uio[5]": "uio_out[5]",
        "uio[6]": "uio_out[6]",
        "uio[7]": "uio_out[7]"
      }
    },
    {
      "macro": "tt_um_MAC_Accelerator_OnSachinSharma",
      "address": 421,
      "title": "MAC Operation",
      "author": "Sachin & Sandeep",
      "description": "Multiplication & accumulation",
      "clock_hz": 100000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/OnSachinSharma/tt10-verilog-MAC_Accelerator",
      "commit": "634485fc87803e544b85202e61cf2105585e5055",
      "pinout": {
        "ui[0]": "ui[0]",
        "ui[1]": "ui[1]",
        "ui[2]": "ui[2]",
        "ui[3]": "ui[3]",
        "ui[4]": "ui[4]",
        "ui[5]": "ui[5]",
        "ui[6]": "ui[6]",
        "ui[7]": "ui[7]",
        "uo[0]": "uo[0]",
        "uo[1]": "uo[1]",
        "uo[2]": "uo[2]",
        "uo[3]": "uo[3]",
        "uo[4]": "uo[4]",
        "uo[5]": "uo[5]",
        "uo[6]": "uo[6]",
        "uo[7]": "uo[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_MichaelBell_canon",
      "address": 165,
      "title": "TT08 Pachelbel's Canon demo",
      "author": "Mike Bell",
      "description": "Tiny Tapeout visuals with the classic Canon soundtrack",
      "clock_hz": 36000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/tt08-canon",
      "commit": "76d44c18c1139fab761e65768c159eb3e7a102c3",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R[1]",
        "uo[1]": "G[1]",
        "uo[2]": "B[1]",
        "uo[3]": "vsync",
        "uo[4]": "R[0]",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "PWM output"
      }
    },
    {
      "macro": "tt_um_MichaelBell_hd_8b10b",
      "address": 65,
      "title": "8b10b decoder and multiplier",
      "author": "Mike Bell",
      "description": "8b10b decoder and multiplier (HD version)",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/tt09-8b10b-decoder-hd",
      "commit": "953cd56a7977ce2598fa0be18afbe63d6dc00473",
      "pinout": {
        "ui[0]": "A 8b10b in",
        "ui[1]": "B 8b10b in",
        "ui[2]": "Decoder status",
        "ui[3]": "Multiply result",
        "ui[4]": "Multiply result (update gated)",
        "ui[5]": "Decoded values (registered)",
        "ui[6]": "Decoded values (unregistered)",
        "ui[7]": "Bidir output enable",
        "uo[0]": "Out 0",
        "uo[1]": "Out 1",
        "uo[2]": "Out 2",
        "uo[3]": "Out 3",
        "uo[4]": "Out 4",
        "uo[5]": "Out 5",
        "uo[6]": "Out 6",
        "uo[7]": "Out 7",
        "uio[0]": "Out 8",
        "uio[1]": "Out 9",
        "uio[2]": "Out 10",
        "uio[3]": "Out 11",
        "uio[4]": "Out 12",
        "uio[5]": "Out 13",
        "uio[6]": "Out 14",
        "uio[7]": "Out 15"
      }
    },
    {
      "macro": "tt_um_MichaelBell_mandelbrot",
      "address": 848,
      "title": "VGA Mandelbrot",
      "author": "Mike Bell",
      "description": "Mandelbrot on VGA, racing the beam",
      "clock_hz": 100000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/tt08-mandelbrot",
      "commit": "c1644c8feae6fdf4f0d76114e2a361654e785504",
      "pinout": {
        "ui[0]": "Ctrl 0",
        "ui[1]": "Ctrl 1",
        "ui[2]": "Ctrl 2",
        "ui[3]": "Input 0",
        "ui[4]": "Input 1",
        "ui[5]": "Input 2",
        "ui[6]": "Input 3",
        "ui[7]": "Input 4",
        "uo[0]": "R[1]",
        "uo[1]": "G[1]",
        "uo[2]": "B[1]",
        "uo[3]": "vsync",
        "uo[4]": "R[0]",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "Input 5",
        "uio[1]": "Input 6",
        "uio[2]": "Input 7",
        "uio[3]": "Input 8",
        "uio[4]": "Input 9",
        "uio[5]": "Input 10",
        "uio[6]": "Input 11",
        "uio[7]": "Input 12"
      }
    },
    {
      "macro": "tt_um_MichaelBell_rle_vga",
      "address": 486,
      "title": "RLE Video Player",
      "author": "Mike Bell",
      "description": "Reads run length encoded data from QSPI flash, displays on VGA",
      "clock_hz": 24000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/tt09-rle-vga",
      "commit": "f432bf60b6c9c29653fb6a307d741fc6c26792f1",
      "pinout": {
        "ui[0]": "SPI latency[0]",
        "ui[1]": "SPI latency[1]",
        "ui[2]": "SPI latency[2]",
        "ui[3]": "Select QSPI pinout",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R[1]",
        "uo[1]": "G[1]",
        "uo[2]": "B[1]",
        "uo[3]": "vsync",
        "uo[4]": "R[0]",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "CS",
        "uio[1]": "SD0 / SCK",
        "uio[2]": "SD1 / SD0",
        "uio[3]": "SCK / SD1",
        "uio[4]": "SD2",
        "uio[5]": "SD3",
        "uio[6]": "Unused CS",
        "uio[7]": "PWM audio"
      }
    },
    {
      "macro": "tt_um_MichaelBell_tinyQV",
      "address": 780,
      "title": "TinyQV Risc-V SoC",
      "author": "Michael Bell",
      "description": "A Risc-V SoC for Tiny Tapeout",
      "clock_hz": 64000000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/tt10-tinyQV",
      "commit": "f2a2edf91875d786502274aae0553a63888899ea",
      "pinout": {
        "ui[0]": "Interrupt 0",
        "ui[1]": "Interrupt 1",
        "ui[2]": "SPI MISO",
        "ui[3]": "1 MHz clock for time",
        "ui[4]": "Game controller latch",
        "ui[5]": "Game controller clock",
        "ui[6]": "Game controller data",
        "ui[7]": "UART RX",
        "uo[0]": "UART TX",
        "uo[1]": "UART RTS",
        "uo[2]": "SPI DC",
        "uo[3]": "SPI MOSI",
        "uo[4]": "SPI CS",
        "uo[5]": "SPI SCK",
        "uo[6]": "Debug UART TX",
        "uo[7]": "Debug signal / PWM",
        "uio[0]": "Flash CS",
        "uio[1]": "SD0",
        "uio[2]": "SD1",
        "uio[3]": "SCK",
        "uio[4]": "SD2",
        "uio[5]": "SD3",
        "uio[6]": "RAM A CS",
        "uio[7]": "RAM B CS / PWM"
      }
    },
    {
      "macro": "tt_um_NicklausThompson_SkyKing",
      "address": 295,
      "title": "SkyKing Demo",
      "author": "Nicklaus Thompson",
      "description": "Types some text over an image of a plane flying into the sunset",
      "clock_hz": 25200000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/FangameEmpire/tt08_skyking",
      "commit": "6346dd0a2a31cec81d6e90ce4540dc08e2bb2e84",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "HS",
        "uo[1]": "R0",
        "uo[2]": "G0",
        "uo[3]": "B0",
        "uo[4]": "VS",
        "uo[5]": "R1",
        "uo[6]": "G1",
        "uo[7]": "B1",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_Nishanth_RISCV",
      "address": 74,
      "title": "RISCV Processor Design",
      "author": "Nishanth Kotla",
      "description": "RISCV Processor Design",
      "clock_hz": 64000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Nishanth2969/TT_RISCV",
      "commit": "e6f22d55c76221ab622e3c6deef5420376e3d2c0",
      "pinout": {
        "ui[0]": "instruction[0]",
        "ui[1]": "instruction[1]",
        "ui[2]": "instruction[2]",
        "ui[3]": "instruction[3]",
        "ui[4]": "instruction[4]",
        "ui[5]": "instruction[5]",
        "ui[6]": "instruction[6]",
        "ui[7]": "instruction[7]",
        "uo[0]": "result[0]",
        "uo[1]": "result[1]",
        "uo[2]": "result[2]",
        "uo[3]": "result[3]",
        "uo[4]": "result[4]",
        "uo[5]": "result[5]",
        "uo[6]": "result[6]",
        "uo[7]": "result[7]",
        "uio[0]": "instruction[8]",
        "uio[1]": "instruction[9]",
        "uio[2]": "instruction[10]",
        "uio[3]": "instruction[11]",
        "uio[4]": "instruction[12]",
        "uio[5]": "instruction[13]",
        "uio[6]": "instruction[14]",
        "uio[7]": "instruction[15]"
      }
    },
    {
      "macro": "tt_um_Qwendu_spi_fpu",
      "address": 179,
      "title": "SPI FPU",
      "author": "Sebastian Pfeiler",
      "description": "A 32bit floating point adder accessible over spi",
      "clock_hz": 50000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/Qwendu/tt_spi_fpu",
      "commit": "4aa2fbd59e2229abedb26c1c76e0404ad0ee7b65",
      "pinout": {
        "ui[0]": "SPI_CLK",
        "ui[1]": "SPI_NCS",
        "ui[2]": "SPI_IN",
        "ui[3]": "Unused",
        "ui[4]": "Unused",
        "ui[5]": "Unused",
        "ui[6]": "Unused",
        "ui[7]": "Unused",
        "uo[0]": "SPI_OUT",
        "uo[1]": "Unused",
        "uo[2]": "Unused",
        "uo[3]": "Unused",
        "uo[4]": "Unused",
        "uo[5]": "Unused",
        "uo[6]": "Unused",
        "uo[7]": "Unused",
        "uio[0]": "Unused",
        "uio[1]": "Unused",
        "uio[2]": "Unused",
        "uio[3]": "Unused",
        "uio[4]": "Unused",
        "uio[5]": "Unused",
        "uio[6]": "Unused",
        "uio[7]": "Unused"
      }
    },
    {
      "macro": "tt_um_Rapoport",
      "address": 494,
      "title": "Perceptron",
      "author": "Mimi Rapoport",
      "description": "Simulates a perceptron",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Rapoport-Mimi/Mimi-Rapoport-ECE-210",
      "commit": "52d4014c8b6f57b9c4ed68106af8db5cb98f808c",
      "pinout": {
        "ui[0]": "Input bit [0]",
        "ui[1]": "Input bit [1]",
        "ui[2]": "Input bit [2]",
        "ui[3]": "Input bit [3]",
        "ui[4]": "Input bit [4]",
        "ui[5]": "Input bit [5]",
        "ui[6]": "Input bit [6]",
        "ui[7]": "Input bit [7]",
        "uo[0]": "Output bit [0]",
        "uo[1]": "Output bit [1]",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_Richard28277",
      "address": 845,
      "title": "4-bit ALU",
      "author": "Richard Xu, Louis Barbosa, Hallie Ho, Emmy Xu, Gia Bhatia, Emily Chen",
      "description": "The 4-bit ALU is designed to perform basic arithmetic and logical operations on 4-bit binary numbers",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Richard28277/4bit_alu",
      "commit": "cbe1d323580ab6f76fbbe0389392dcea2947bb92",
      "pinout": {
        "ui[0]": "a[0]",
        "ui[1]": "a[1]",
        "ui[2]": "a[2]",
        "ui[3]": "a[3]",
        "ui[4]": "b[0]",
        "ui[5]": "b[1]",
        "ui[6]": "b[2]",
        "ui[7]": "b[3]",
        "uo[0]": "result[0]",
        "uo[1]": "result[1]",
        "uo[2]": "result[2]",
        "uo[3]": "result[3]",
        "uo[4]": "result[4]",
        "uo[5]": "result[5]",
        "uo[6]": "result[6]",
        "uo[7]": "result[7]",
        "uio[0]": "opcode[0]",
        "uio[1]": "opcode[1]",
        "uio[2]": "opcode[2]",
        "uio[3]": "opcode[3]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "carry_out",
        "uio[7]": "overflow"
      }
    },
    {
      "macro": "tt_um_Strider93",
      "address": 497,
      "title": "digital LIF Neuron",
      "author": "Kosmas Wernhard",
      "description": "digital LIF Neuron",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Strider93/tt_verilog_test",
      "commit": "dbe944dee1582879ecaae4c28ea1d395b04ddfcf",
      "pinout": {
        "ui[0]": "Weight0",
        "ui[1]": "Weight1",
        "ui[2]": "Weight2",
        "ui[3]": "Weight3",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "Spike_IN",
        "uo[0]": "Spike_OUT",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_UartMain",
      "address": 397,
      "title": "XOR Cipher",
      "author": "Damian",
      "description": "Simple XOR Cipher with UART",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/gantover/tt10-verilog-gantover",
      "commit": "7389825df6426002f9fa63078a4e7f790558e456",
      "pinout": {
        "ui[0]": "updateKey",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "rx",
        "uo[0]": "tx",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_VanceWiberg_top",
      "address": 420,
      "title": "Team 17's 8 bit DAC",
      "author": "Vance Wiberg",
      "description": "This 8 bit digital to analogue converter uses a SAR to convert signals from Digial into Analoge",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/VanceWiberg/8bitSAR",
      "commit": "cf118f1821ad3d85474f94a9f1abb73aee76dbce",
      "pinout": {
        "ui[0]": "A[0]",
        "ui[1]": "A[1]",
        "ui[2]": "A[2]",
        "ui[3]": "A[3]",
        "ui[4]": "A[4]",
        "ui[5]": "A[5]",
        "ui[6]": "A[6]",
        "ui[7]": "A[7]",
        "uo[0]": "Z[0]",
        "uo[1]": "Z[1]",
        "uo[2]": "Z[2]",
        "uo[3]": "Z[3]",
        "uo[4]": "Z[4]",
        "uo[5]": "Z[5]",
        "uo[6]": "Z[6]",
        "uo[7]": "Z[7]",
        "uio[0]": "O[0]",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_a1k0n_demo",
      "address": 339,
      "title": "Demo by a1k0n",
      "author": "Andy Sloane",
      "description": "Tiny Tapeout demo competition entry",
      "clock_hz": 48000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/a1k0n/tt08-vgademo",
      "commit": "3c307ec9d3c559bf81d7cb05dcb0c7897d4faab5",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "AudioPWM"
      }
    },
    {
      "macro": "tt_um_a1k0n_nyancat",
      "address": 658,
      "title": "VGA Nyan Cat",
      "author": "Andy Sloane",
      "description": "Displays the classic nyan.cat animation",
      "clock_hz": 25175000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/a1k0n/tt08-nyan",
      "commit": "0f08a682be2ba9f0af95dc9c984fdce4a3e86d66",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "AudioPWM"
      }
    },
    {
      "macro": "tt_um_a1k0n_vgadonut",
      "address": 844,
      "title": "VGA donut",
      "author": "Andy Sloane",
      "description": "Renders a 3D torus on a VGA display",
      "clock_hz": 48000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/a1k0n/tt08-vga-donut",
      "commit": "4354b71f9415cbb04f7805a3dbb1edfad27f322c",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_adder_accumulator_sathworld",
      "address": 71,
      "title": "adder-accumulator",
      "author": "Damir Gazizullin, Owen Golden",
      "description": "8-bit ripple adder and the complementary accumulator register",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/sathworld/tt09-adder-damir",
      "commit": "bdc1d3eded3604a2c3985426fe3d56a91df37510",
      "pinout": {
        "ui[0]": "bus[0] if ~(Ea|Eu)",
        "ui[1]": "bus[1] if ~(Ea|Eu)",
        "ui[2]": "bus[2] if ~(Ea|Eu)",
        "ui[3]": "bus[3] if ~(Ea|Eu)",
        "ui[4]": "bus[4] if ~(Ea|Eu)",
        "ui[5]": "bus[5] if ~(Ea|Eu)",
        "ui[6]": "bus[6] if ~(Ea|Eu)",
        "ui[7]": "bus[7] if ~(Ea|Eu)",
        "uo[0]": "bus[0]/regA[0], bus_regA_sel = 1/0",
        "uo[1]": "bus[1]/regA[1], bus_regA_sel = 1/0",
        "uo[2]": "bus[2]/regA[2], bus_regA_sel = 1/0",
        "uo[3]": "bus[3]/regA[3], bus_regA_sel = 1/0",
        "uo[4]": "bus[4]/regA[4], bus_regA_sel = 1/0",
        "uo[5]": "bus[5]/regA[5], bus_regA_sel = 1/0",
        "uo[6]": "bus[6]/regA[6], bus_regA_sel = 1/0",
        "uo[7]": "bus[7]/regA[7], bus_regA_sel = 1/0",
        "uio[0]": "out_ZF",
        "uio[1]": "out_CF",
        "uio[2]": "in_sub",
        "uio[3]": "in_Eu",
        "uio[4]": "in_Ea",
        "uio[5]": "in_nLb",
        "uio[6]": "in_nLa",
        "uio[7]": "in_bus_regA_sel"
      }
    },
    {
      "macro": "tt_um_aditya_patra",
      "address": 100,
      "title": "Priority-Encoded Arbiter",
      "author": "Aditya Patra",
      "description": "Cycles through states based on enable state signals",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/aditya-patra/tt10-verilog",
      "commit": "17efa3e5365b7a2e61c9eec642b98d0582227c9b",
      "pinout": {
        "ui[0]": "sensor1",
        "ui[1]": "sensor2",
        "ui[2]": "sensor3",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "speaker1",
        "uo[1]": "speaker2",
        "uo[2]": "speaker3",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_alf19185_ALU",
      "address": 807,
      "title": "4 bit ALU ",
      "author": "Gabriela Alfaro",
      "description": "A simple design of an Arithmetic Logic Unit capable of basic operations: addition, substraction , multiplication, division and some logic operations.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/alf19185/TT09-ALU",
      "commit": "122513d6fdaae91c74c9da48c1016db803fdd631",
      "pinout": {
        "ui[0]": "A[0]",
        "ui[1]": "A[1]",
        "ui[2]": "A[2]",
        "ui[3]": "A[3]",
        "ui[4]": "B[0]",
        "ui[5]": "B[1]",
        "ui[6]": "B[2]",
        "ui[7]": "B[3]",
        "uo[0]": "ALU_Out[0]",
        "uo[1]": "ALU_Out[1]",
        "uo[2]": "ALU_Out[2]",
        "uo[3]": "ALU_Out[3]",
        "uo[4]": "ALU_Out[4]",
        "uo[5]": "ALU_Out[5]",
        "uo[6]": "ALU_Out[6]",
        "uo[7]": "ALU_Out[7]",
        "uio[0]": "ZeroFlag",
        "uio[1]": "CarryOut",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_algofoogle_tt09_ring_osc",
      "address": 877,
      "title": "Verilog ring oscillator",
      "author": "algofoogle (Anton Maurovic)",
      "description": "Simple ring oscillator by instantiating a sky130 inv_2 inverter ring",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/algofoogle/tt09-ring-osc",
      "commit": "15f798de96369adba0beb9c710171e15cf051026",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "osc_out",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_algofoogle_tt09_ring_osc2",
      "address": 516,
      "title": "Verilog ring oscillator V2",
      "author": "algofoogle (Anton Maurovic)",
      "description": "Multiple simple ring oscillators by instantiating sky130 inv_2 inverter rings",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/algofoogle/tt09-ring-osc2",
      "commit": "ee2feec185f6f5ddf48dfbf057093a3cfc8f5dea",
      "pinout": {
        "ui[0]": "pwm2_in[0]",
        "ui[1]": "pwm2_in[1]",
        "ui[2]": "pwm3_in[0]",
        "ui[3]": "pwm3_in[1]",
        "ui[4]": "",
        "ui[5]": "pwm3a_in[0]",
        "ui[6]": "pwm3a_in[1]",
        "ui[7]": "pwm3a_in[2]",
        "uo[0]": "ring_125",
        "uo[1]": "ring_251",
        "uo[2]": "ring_501",
        "uo[3]": "ring_1001",
        "uo[4]": "c0_3",
        "uo[5]": "c1_3",
        "uo[6]": "c2_5",
        "uo[7]": "c3_5",
        "uio[0]": "dummy",
        "uio[1]": "pwm3a_out",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "pwm2_out",
        "uio[7]": "pwm3_out"
      }
    },
    {
      "macro": "tt_um_algofoogle_tt09_ring_osc3",
      "address": 2,
      "title": "Verilog ring oscillator V3",
      "author": "algofoogle (Anton Maurovic)",
      "description": "sky130 inv_2 ring oscillator with externally-selectable length",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/algofoogle/tt09-ring-osc3",
      "commit": "5786e93f3615bafefbf220597621b8ff69d89f86",
      "pinout": {
        "ui[0]": "tap[0]",
        "ui[1]": "tap[1]",
        "ui[2]": "tap[2]",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_algofoogle_vga",
      "address": 720,
      "title": "IHP VGA demo",
      "author": "algofoogle (Anton Maurovic)",
      "description": "Simple VGA demo for IHP tapeout (inc. Matt Venn's VGA clock)",
      "clock_hz": 25000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/algofoogle/ttihp25a-tt10-vga",
      "commit": "c8de87dc2639ddd365f3214abe61750f2cf83816",
      "pinout": {
        "ui[0]": "adj_hrs",
        "ui[1]": "adj_min",
        "ui[2]": "adj_sec",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "mode",
        "uo[0]": "r1",
        "uo[1]": "g1",
        "uo[2]": "b1",
        "uo[3]": "vsync",
        "uo[4]": "r0",
        "uo[5]": "g0",
        "uo[6]": "b0",
        "uo[7]": "hsync",
        "uio[0]": "hmax",
        "uio[1]": "vmax",
        "uio[2]": "hblank",
        "uio[3]": "vblank",
        "uio[4]": "visible",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_alif",
      "address": 15,
      "title": "3 Neuron ALIF",
      "author": "Andrew Smith",
      "description": "TODO",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/and-rewsmith/tt09-verilog-template-andrewsmith",
      "commit": "4f1b3ca388ec16ae1b8a81aa9d8252c35b17704b",
      "pinout": {
        "ui[0]": "Input current bit [0]",
        "ui[1]": "Input current bit [1]",
        "ui[2]": "Input current bit [2]",
        "ui[3]": "Input current bit [3]",
        "ui[4]": "Input current bit [4]",
        "ui[5]": "Input current bit [5]",
        "ui[6]": "Input current bit [6]",
        "ui[7]": "Input current bit [7]",
        "uo[0]": "State variable bit [0]",
        "uo[1]": "State variable bit [1]",
        "uo[2]": "State variable bit [2]",
        "uo[3]": "State variable bit [3]",
        "uo[4]": "State variable bit [4]",
        "uo[5]": "State variable bit [5]",
        "uo[6]": "State variable bit [6]",
        "uo[7]": "State variable bit [7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Spike bit"
      }
    },
    {
      "macro": "tt_um_alphaonesoc",
      "address": 786,
      "title": "AlphaOneSoC",
      "author": "Abhiram Gopal Dasika",
      "description": "A 32-bit RISC-V SoC, based on TinyQV by Michael Bell",
      "clock_hz": 64000000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/alfadelta10010/tt10-AlphaOneSoC",
      "commit": "18651cbd7666840b0d7456334e7589c06ab8fb65",
      "pinout": {
        "ui[0]": "Interrupt 0",
        "ui[1]": "Interrupt 1",
        "ui[2]": "SPI MISO",
        "ui[3]": "GPI3",
        "ui[4]": "GPI4",
        "ui[5]": "GPI5",
        "ui[6]": "GPI6",
        "ui[7]": "UART RX",
        "uo[0]": "UART TX",
        "uo[1]": "UART RTS",
        "uo[2]": "SPI DC",
        "uo[3]": "SPI MOSI",
        "uo[4]": "SPI CS",
        "uo[5]": "SPI SCK",
        "uo[6]": "Debug UART TX",
        "uo[7]": "Debug Signal",
        "uio[0]": "Flash CS",
        "uio[1]": "SD0",
        "uio[2]": "SD1",
        "uio[3]": "SCK",
        "uio[4]": "SD2",
        "uio[5]": "SD3",
        "uio[6]": "RAM A CS",
        "uio[7]": "RAM B CS"
      }
    },
    {
      "macro": "tt_um_anas_7193",
      "address": 584,
      "title": "Programmable PWM Generator",
      "author": "Anas Alam",
      "description": "Programmabel PWM Generator",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/SyedAnasAlam/TinyTapeout09",
      "commit": "f54f1bc1ea15e777cee4750259204720bd1599bc",
      "pinout": {
        "ui[0]": "pwm_threshold shift_amount[0]",
        "ui[1]": "pwm_threshold shift_amount[1]",
        "ui[2]": "pwm_threshold shift_amount[2]",
        "ui[3]": "pwm_threshold shift_amount[3]",
        "ui[4]": "pwm_threshold shift_amount[4]",
        "ui[5]": "pwm_threshold base[0]",
        "ui[6]": "pwm_threshold base[1]",
        "ui[7]": "pwm_threshold base[3]",
        "uo[0]": "pwm output",
        "uo[1]": "design is enabled (active high)",
        "uo[2]": "wired 0",
        "uo[3]": "wired 0",
        "uo[4]": "wired 0",
        "uo[5]": "wired 0",
        "uo[6]": "wired 0",
        "uo[7]": "wired 0",
        "uio[0]": "input: pwm_top shift_amount[0]",
        "uio[1]": "input: pwm_top shift_amount[1]",
        "uio[2]": "input: pwm_top shift_amount[2]",
        "uio[3]": "input: pwm_top shift_amount[3]",
        "uio[4]": "input: pwm_top shift_amount[4]",
        "uio[5]": "input: pwm_top base[0]",
        "uio[6]": "input: pwm_top base[1]",
        "uio[7]": "input: pwm_top base[2]"
      }
    },
    {
      "macro": "tt_um_anislam",
      "address": 520,
      "title": "Leaky integrate and fire spiking neural network",
      "author": "Aliyaa Islam",
      "description": "simulates a lif neuron",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/alnislam/tt09-ece-110",
      "commit": "f8326ef1f8a8c7906b87443ba5107863be857d7d",
      "pinout": {
        "ui[0]": "Input current bit [0]",
        "ui[1]": "Input current bit [1]",
        "ui[2]": "Input current bit [2]",
        "ui[3]": "Input current bit [3]",
        "ui[4]": "Input current bit [4]",
        "ui[5]": "Input current bit [5]",
        "ui[6]": "Input current bit [6]",
        "ui[7]": "Input current bit [7]",
        "uo[0]": "State varibale bit [0]",
        "uo[1]": "State varibale bit [1]",
        "uo[2]": "State varibale bit [2]",
        "uo[3]": "State varibale bit [3]",
        "uo[4]": "State varibale bit [4]",
        "uo[5]": "State varibale bit [5]",
        "uo[6]": "State varibale bit [6]",
        "uo[7]": "State varibale bit [7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Spike bit"
      }
    },
    {
      "macro": "tt_um_arandomdev_fir_engine_top",
      "address": 743,
      "title": "FIREngine",
      "author": "Hao Wang, Andrew Malnicof",
      "description": "FIR Filter for Audio PMOD",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/amalnicof/tt09-firEngine",
      "commit": "385ab8728bea9ed5cf89d6bccc68ab488c990591",
      "pinout": {
        "ui[0]": "SPI CS",
        "ui[1]": "SPI MOSI",
        "ui[2]": "",
        "ui[3]": "SPI SCLK",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "DAC MCLK",
        "uio[1]": "DAC LRCK",
        "uio[2]": "DAC SCLK",
        "uio[3]": "DAC Data",
        "uio[4]": "ADC MCLK",
        "uio[5]": "ADC LRCK",
        "uio[6]": "ADC SCLK",
        "uio[7]": "ADC Data"
      }
    },
    {
      "macro": "tt_um_array_secD7",
      "address": 426,
      "title": "Tiny Tapeout Group 7 Lab D",
      "author": "Will and Andrea",
      "description": "Our project implements a 4x4 array multiplier",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/WillPelech/tt09-secD7-array-multiplier",
      "commit": "013f05d279ff638c6b6ad11ea8574815846a8c49",
      "pinout": {
        "ui[0]": "m[0]",
        "ui[1]": "m[1]",
        "ui[2]": "m[2]",
        "ui[3]": "m[3]",
        "ui[4]": "q[0]",
        "ui[5]": "q[1]",
        "ui[6]": "q[2]",
        "ui[7]": "q[3]",
        "uo[0]": "p[0]",
        "uo[1]": "p[1]",
        "uo[2]": "p[2]",
        "uo[3]": "p[3]",
        "uo[4]": "p[4]",
        "uo[5]": "p[5]",
        "uo[6]": "p[6]",
        "uo[7]": "p[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_asgerwenneb",
      "address": 712,
      "title": "My Project",
      "author": "Asger Wenneberg",
      "description": "This is a tiny tapeout design",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/AsgerWenneb/trt10-verilog",
      "commit": "e9ffcbf662c684ba1648f3e016dce9b910df7d67",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_in[0]",
        "uio[1]": "uio_in[1]",
        "uio[2]": "uio_in[2]",
        "uio[3]": "uio_in[3]",
        "uio[4]": "uio_in[4]",
        "uio[5]": "uio_in[5]",
        "uio[6]": "uio_in[6]",
        "uio[7]": "uio_in[7]"
      }
    },
    {
      "macro": "tt_um_asheldon44_dsm_decimation_filter",
      "address": 869,
      "title": "Delta-Sigma ADC Decimation Filter",
      "author": "Alexander Sheldon",
      "description": "Decimation filter for output of a delta-sigma ADC.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/asheldon44/tt09-delta-sigma-decimation-filter",
      "commit": "555de2f5fedc77ed02615ae476148b4a74257a4c",
      "pinout": {
        "ui[0]": "dec_in",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "mux_out[0]",
        "uo[1]": "mux_out[1]",
        "uo[2]": "mux_out[2]",
        "uo[3]": "mux_out[3]",
        "uo[4]": "mux_out[4]",
        "uo[5]": "mux_out[5]",
        "uo[6]": "mux_out[6]",
        "uo[7]": "mux_out[7]",
        "uio[0]": "div_clk8x",
        "uio[1]": "",
        "uio[2]": "div_clk",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_atomNPU",
      "address": 429,
      "title": "AtomNPU",
      "author": "Aakash Apoorv",
      "description": "A 4-bit Neural Processing Unit performing multiply-accumulate operations",
      "clock_hz": 100000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ToyMath/AtomNPU-tt10",
      "commit": "a2be5dcfa192f701b5c7c4d63f25e63f07bccca2",
      "pinout": {
        "ui[0]": "input_data[0]",
        "ui[1]": "input_data[1]",
        "ui[2]": "input_data[2]",
        "ui[3]": "input_data[3]",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "output_data[0]",
        "uo[1]": "output_data[1]",
        "uo[2]": "output_data[2]",
        "uo[3]": "output_data[3]",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "weight[0]",
        "uio[1]": "weight[1]",
        "uio[2]": "weight[2]",
        "uio[3]": "weight[3]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_benpayne_ps2_decoder",
      "address": 198,
      "title": "PS2 Decoder",
      "author": "Ben Payne",
      "description": "A PS2 keyboard decoder",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/benpayne/tt08-ps2-68k",
      "commit": "a1691c78f5e5c58e79b57d67b1867b62f78c7867",
      "pinout": {
        "ui[0]": "ps2_clk",
        "ui[1]": "ps2_data",
        "ui[2]": "clear_int",
        "ui[3]": "cs",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "valid",
        "uo[1]": "interupt",
        "uo[2]": "data_rdy",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "data_out[0]",
        "uio[1]": "data_out[1]",
        "uio[2]": "data_out[2]",
        "uio[3]": "data_out[3]",
        "uio[4]": "data_out[4]",
        "uio[5]": "data_out[5]",
        "uio[6]": "data_out[6]",
        "uio[7]": "data_out[7]"
      }
    },
    {
      "macro": "tt_um_betz_morse_keyer",
      "address": 847,
      "title": "Morse Code Keyer",
      "author": "Brady Etz",
      "description": "Convert a keyed CW input to morse tones and 7-segment character output",
      "clock_hz": 12000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/b-etz/tt08-morse-keyer",
      "commit": "0fbb3c5c77f2acc871ad060cdc5da30bd89080c4",
      "pinout": {
        "ui[0]": "Paddle Selection (1 = Iambic)",
        "ui[1]": "Iambic-A/B Type Selection (1 = B)",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "WPM Select [0] (LSB)",
        "ui[5]": "WPM Select [1]",
        "ui[6]": "WPM Select [2]",
        "ui[7]": "WPM Select [3] (MSB)",
        "uo[0]": "7-Seg. Display A",
        "uo[1]": "7-Seg. Display B",
        "uo[2]": "7-Seg. Display C",
        "uo[3]": "7-Seg. Display D",
        "uo[4]": "7-Seg. Display E",
        "uo[5]": "7-Seg. Display F",
        "uo[6]": "7-Seg. Display G",
        "uo[7]": "7-Seg. Display .",
        "uio[0]": "External Dit / Straight In (active-high)",
        "uio[1]": "External Dah In (active-high)",
        "uio[2]": "Aux. Dit Paddle Out (active-high)",
        "uio[3]": "Aux. Dah Paddle Out (active-high)",
        "uio[4]": "Aux. Morse Out (active-high)",
        "uio[5]": "Buzzer Tone Out",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_bilal_trng",
      "address": 746,
      "title": "TRNG",
      "author": "Muhammad Bilal",
      "description": "Generate Raw and Hashed Random Numbers",
      "clock_hz": 50000000,
      "tiles": "6x2",
      "analog_pins": [],
      "repo": "https://github.com/engrbilal992/tt10-TRNG",
      "commit": "d823309df866321011780f9d0fd9f7fef2a1fe9f",
      "pinout": {
        "ui[0]": "TRNG_Enable",
        "ui[1]": "ctrl_mode",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "failure",
        "uo[1]": "hash_rdy",
        "uo[2]": "UART_Tx",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_bitty",
      "address": 718,
      "title": "Bitty",
      "author": "Moldir",
      "description": "16-bit simple processor",
      "clock_hz": 10,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/Molidier/bitty-tt10",
      "commit": "c9b5b5396284e380033c525bc7ae2e565aac0550",
      "pinout": {
        "ui[0]": "rx_data_bit",
        "ui[1]": "sel_baude_rate[0]",
        "ui[2]": "sel_baude_rate[1]",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "tx_data_bit",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_brailliance",
      "address": 132,
      "title": "Brailliance",
      "author": "Akshat B, Evana T, John L, Rittrija M, Riley Gu ",
      "description": "ASCII-to-Braille Converter",
      "clock_hz": 5000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/rileyguu/tt08-brailliance",
      "commit": "ee388fdc052bc78bef367db190e3a65b54227605",
      "pinout": {
        "ui[0]": "clk",
        "ui[1]": "reset",
        "ui[2]": "next",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "reader1_out[0]",
        "uo[1]": "reader1_out[1]",
        "uo[2]": "reader1_out[2]",
        "uo[3]": "reader1_out[3]",
        "uo[4]": "reader1_out[4]",
        "uo[5]": "reader1_out[5]",
        "uo[6]": "reader1_out[6]",
        "uo[7]": "reader1_out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_branch_pred",
      "address": 704,
      "title": "TinyTapeout Minimal Branch Predictor",
      "author": "Tristan Robitaille",
      "description": "A minimal perceptron-based branch predictor",
      "clock_hz": 1000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/TristanRobitaille/tt_branch_pred",
      "commit": "c1b791a045487b875496b10b43719cad60421dd4",
      "pinout": {
        "ui[0]": "inst_addr[0]",
        "ui[1]": "inst_addr[1]",
        "ui[2]": "inst_addr[2]",
        "ui[3]": "inst_addr[3]",
        "ui[4]": "inst_addr[4]",
        "ui[5]": "inst_addr[5]",
        "ui[6]": "inst_addr[6]",
        "ui[7]": "inst_addr[7]",
        "uo[0]": "pred_ready",
        "uo[1]": "prediction",
        "uo[2]": "training_done",
        "uo[3]": "mem_reset_done",
        "uo[4]": "DEBUG_new_data_avail_posedge",
        "uo[5]": "DEBUG_state_pred[0]",
        "uo[6]": "DEBUG_state_pred[1]",
        "uo[7]": "DEBUG_state_rst_mem",
        "uio[0]": "new_data_avail",
        "uio[1]": "direction_ground_truth",
        "uio[2]": "DEBUG_perceptron_index[0]",
        "uio[3]": "DEBUG_perceptron_index[1]",
        "uio[4]": "DEBUG_perceptron_index[2]",
        "uio[5]": "DEBUG_wr_en",
        "uio[6]": "DEBUG_history_buffer_output",
        "uio[7]": "history_buffer_request"
      }
    },
    {
      "macro": "tt_um_brandonramos_VGA_Pong_with_NES_Controllers",
      "address": 754,
      "title": "VGA Pong with NES Controllers",
      "author": "Brandon S. Ramos",
      "description": "Pong using 2 NES Controllers with a VGA display",
      "clock_hz": 25175000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/J0NTrollston/tt08-VGA-Pong-with-NES-Controllers",
      "commit": "53e38925cb7987a9b900e4312febe1aaf9af7625",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "h_sync",
        "uo[1]": "v_sync",
        "uo[2]": "r",
        "uo[3]": "g",
        "uo[4]": "b",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "NES_Controller_Left[0]",
        "uio[1]": "NES_Controller_Left[1]",
        "uio[2]": "NES_Controller_Left[2]",
        "uio[3]": "NES_Controller_Right[0]",
        "uio[4]": "NES_Controller_Right[1]",
        "uio[5]": "NES_Controller_Right[2]",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_brukstus_tdc_with_spi",
      "address": 175,
      "title": "TDC with SPI",
      "author": "Tautvydas Brukstus",
      "description": "TDC with SPI design",
      "clock_hz": 50000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/Brukstus/tt10_tdc_with_spi",
      "commit": "756a43fff464e904cd2a50a2ffd7bc9a7d84b341",
      "pinout": {
        "ui[0]": "cpol",
        "ui[1]": "cpha",
        "ui[2]": "smapling_clk",
        "ui[3]": "start_signal",
        "ui[4]": "stop_signal",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "busy",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "spi_miso",
        "uio[4]": "spi_cs_n",
        "uio[5]": "spi_clk",
        "uio[6]": "spi_mosi",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_bytex64_munch",
      "address": 841,
      "title": "Munch",
      "author": "bytex64",
      "description": "Displays munching squares through VGA PMOD",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/bytex64/tt-munch",
      "commit": "7428bdc8ceb4d3c4ed4c7be23137f9e19d85cb27",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSYNC",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSYNC",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "beat clock bit 1 (output)",
        "uio[5]": "beat clock bit 2 (output)",
        "uio[6]": "beat clock bit 3 (output)",
        "uio[7]": "audio (output)"
      }
    },
    {
      "macro": "tt_um_carryskip_adder8",
      "address": 11,
      "title": "8-bit carry-skip",
      "author": "Dennis_Du",
      "description": "two 8-bit input adder",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dennisduu/Carry_skip_adder",
      "commit": "5195c1dc73ea9c0e5e8038a85e2b83090033d0ce",
      "pinout": {
        "ui[0]": "a[0]",
        "ui[1]": "a[1]",
        "ui[2]": "a[2]",
        "ui[3]": "a[3]",
        "ui[4]": "a[4]",
        "ui[5]": "a[5]",
        "ui[6]": "a[6]",
        "ui[7]": "a[7]",
        "uio[0]": "b[0]",
        "uio[1]": "b[1]",
        "uio[2]": "b[2]",
        "uio[3]": "b[3]",
        "uio[4]": "b[4]",
        "uio[5]": "b[5]",
        "uio[6]": "b[6]",
        "uio[7]": "b[7]",
        "uo[0]": "sum[0]",
        "uo[1]": "sum[1]",
        "uo[2]": "sum[2]",
        "uo[3]": "sum[3]",
        "uo[4]": "sum[4]",
        "uo[5]": "sum[5]",
        "uo[6]": "sum[6]",
        "uo[7]": "sum[7]"
      }
    },
    {
      "macro": "tt_um_carryskip_adder9",
      "address": 434,
      "title": "carry skip adder",
      "author": "Dron Sankhala",
      "description": "two 8-bit input adder",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dronsankhala2605/TinyTapeout",
      "commit": "39a135552ea375fccd2f805553c7bc33aacbdcff",
      "pinout": {
        "ui[0]": "a[0]",
        "ui[1]": "a[1]",
        "ui[2]": "a[2]",
        "ui[3]": "a[3]",
        "ui[4]": "a[4]",
        "ui[5]": "a[5]",
        "ui[6]": "a[6]",
        "ui[7]": "a[7]",
        "uio[0]": "b[0]",
        "uio[1]": "b[1]",
        "uio[2]": "b[2]",
        "uio[3]": "b[3]",
        "uio[4]": "b[4]",
        "uio[5]": "b[5]",
        "uio[6]": "b[6]",
        "uio[7]": "b[7]",
        "uo[0]": "sum[0]",
        "uo[1]": "sum[1]",
        "uo[2]": "sum[2]",
        "uo[3]": "sum[3]",
        "uo[4]": "sum[4]",
        "uo[5]": "sum[5]",
        "uo[6]": "sum[6]",
        "uo[7]": "sum[7]"
      }
    },
    {
      "macro": "tt_um_cattuto_sr_latch",
      "address": 204,
      "title": "TT08 - experiments with latch-based shift registers",
      "author": "Ciro Cattuto",
      "description": "A 512-bit latch-based shift register in 1 tile",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ccattuto/tt08-sr-latch",
      "commit": "39def64a3648573854a12fad811a9771b0d83ec2",
      "pinout": {
        "ui[0]": "shift register input",
        "ui[1]": "shift control (edge-triggered)",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "shift register output",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ccu_goatgate",
      "address": 78,
      "title": "tiny cipher 4 bit key",
      "author": "sriram nimmala",
      "description": "a tiny encryption core that encryptes based on input key",
      "clock_hz": 5000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/goatgate/tt09-teeny-tiny-aes-template",
      "commit": "eff95af44fb95384442bd1eda467f2bc2fe256b5",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_cdc_test",
      "address": 77,
      "title": "SkyKing Demo",
      "author": "Nicklaus Thompson",
      "description": "Types some text over an image of a plane flying into the sunset",
      "clock_hz": 25200000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/FangameEmpire/tt09-CDC-test",
      "commit": "8fccc4042690f89b3df493d013ab4db8249621d5",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "HS",
        "uo[1]": "R0",
        "uo[2]": "G0",
        "uo[3]": "B0",
        "uo[4]": "VS",
        "uo[5]": "R1",
        "uo[6]": "G1",
        "uo[7]": "B1",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_cejmu",
      "address": 210,
      "title": "CEJMU Beers and Adders",
      "author": "Prof. Dr.-Ing. Matthias Jung, Philipp Wetzstein, Derek Christ, Jonathan Hager",
      "description": "Several projects to show in lectures. Includes a simple state-machine, a decoder and two 24 bit adders. Refer to documentation for details",
      "clock_hz": 12000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/CEJMU/tt08_cejmu",
      "commit": "1bb3170854e6de87bc143b817f58d1d9aeab84ca",
      "pinout": {
        "ui[0]": "Multiplexed to all designs (refer to documentation for details)",
        "ui[1]": "...",
        "ui[2]": "...",
        "ui[3]": "...",
        "ui[4]": "...",
        "ui[5]": "...",
        "ui[6]": "...",
        "ui[7]": "...",
        "uo[0]": "Multiplexed from all designs (refer to documentation for details)",
        "uo[1]": "...",
        "uo[2]": "...",
        "uo[3]": "...",
        "uo[4]": "...",
        "uo[5]": "...",
        "uo[6]": "...",
        "uo[7]": "...",
        "uio[0]": "Select design (input)",
        "uio[1]": "Select design (input)",
        "uio[2]": "start_calc",
        "uio[3]": "output_result",
        "uio[4]": "unused",
        "uio[5]": "unused",
        "uio[6]": "overflow bit of RCA (output)",
        "uio[7]": "overflow bit of CLA (output)"
      }
    },
    {
      "macro": "tt_um_cellular_alchemist",
      "address": 496,
      "title": "Hopfield Network with Izhikevich-type RS and FS Neurons",
      "author": "Daniel Solis",
      "description": "An on-chip implementation of a Hopfield neural network using Izhikevich-type regular spiking (RS) and fast spiking (FS) neurons with on-chip Hebbian learning for pattern storage and retrieval.",
      "clock_hz": 16000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/cellular-alchemist/tt09-danielsolis",
      "commit": "b5ad6f67f91eb77cc1485594e6a9c85d1d3a620a",
      "pinout": {
        "ui[0]": "learning_enable",
        "ui[1]": "pattern_input[0]",
        "ui[2]": "pattern_input[1]",
        "ui[3]": "pattern_input[2]",
        "ui[4]": "pattern_input[3]",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "spikes[0]",
        "uio[1]": "spikes[1]",
        "uio[2]": "spikes[2]",
        "uio[3]": "spikes[3]",
        "uio[4]": "spikes[4]",
        "uio[5]": "spikes[5]",
        "uio[6]": "spikes[6]",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_cfib_demo",
      "address": 843,
      "title": "cfib Demoscene Entry",
      "author": "Christian Fibich",
      "description": "Generates VGA video and PWM audio",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/cfib/tt08-cfib-demo",
      "commit": "6a8ba7c70c6913362b0ef2009978116ee7ec5f80",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "r[1]",
        "uo[1]": "g[1]",
        "uo[2]": "b[1]",
        "uo[3]": "vsync",
        "uo[4]": "r[0]",
        "uo[5]": "g[0]",
        "uo[6]": "b[0]",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "pwm"
      }
    },
    {
      "macro": "tt_um_chip4lyfe",
      "address": 424,
      "title": "Leaky Integrate Fire Neuron",
      "author": "Rocky Lim",
      "description": "Simulates a Leaky Integrate Fire Neuron based on snnTorch's implementation",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/bluemeaniez/tt09-chip4lyfe",
      "commit": "36c4f7092ddc4ed0fbcc8246bc68ada2a1268609",
      "pinout": {
        "ui[0]": "Input Current Bit [0] (Input Neuron 1)",
        "ui[1]": "Input Current Bit [1] (Input Neuron 1)",
        "ui[2]": "Input Current Bit [2] (Input Neuron 1)",
        "ui[3]": "Input Current Bit [3] (Input Neuron 1)",
        "ui[4]": "Input Current Bit [4] (Input Neuron 2)",
        "ui[5]": "Input Current Bit [5] (Input Neuron 2)",
        "ui[6]": "Input Current Bit [6] (Input Neuron 2)",
        "ui[7]": "Input Current Bit [7] (Input Neuron 2)",
        "uo[0]": "State Variable Bit [0] (Output Neuron 1)",
        "uo[1]": "State Variable Bit [1] (Output Neuron 1)",
        "uo[2]": "State Variable Bit [2] (Output Neuron 1)",
        "uo[3]": "State Variable Bit [3] (Output Neuron 1)",
        "uo[4]": "State Variable Bit [4] (Output Neuron 2)",
        "uo[5]": "State Variable Bit [5] (Output Neuron 2)",
        "uo[6]": "State Variable Bit [6] (Output Neuron 2)",
        "uo[7]": "State Variable Bit [7] (Output Neuron 2)",
        "uio[0]": "Spike Bit (Output Layer, Neuron 2)",
        "uio[1]": "Spike Bit (Output Layer, Neuron 1)",
        "uio[2]": "Spike Bit (Inner Layer 2, Neuron 2)",
        "uio[3]": "Spike Bit (Inner Layer 2, Neuron 1)",
        "uio[4]": "Spike Bit (Inner Layer 1, Neuron 2)",
        "uio[5]": "Spike Bit (Inner Layer 1, Neuron 1)",
        "uio[6]": "Spike Bit (Input Layer, Neuron 2)",
        "uio[7]": "Spike Bit (Input Layer, Neuron 1)"
      }
    },
    {
      "macro": "tt_um_chip_rom",
      "address": 0,
      "title": "Chip ROM",
      "author": "Uri Shaked",
      "description": "ROM with information about the chip",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt-chip-rom",
      "commit": "bb743722e70e5313617c15b7d6f487745634a0fa",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "addr[4]",
        "ui[5]": "addr[5]",
        "ui[6]": "addr[6]",
        "ui[7]": "addr[7]",
        "uo[0]": "data[0]",
        "uo[1]": "data[1]",
        "uo[2]": "data[2]",
        "uo[3]": "data[3]",
        "uo[4]": "data[4]",
        "uo[5]": "data[5]",
        "uo[6]": "data[6]",
        "uo[7]": "data[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_claudiotalarico_counter",
      "address": 418,
      "title": "4-bit up/down binary counter",
      "author": "claudiotalarico",
      "description": "4-bit up/down binary counter with enable and test mode ",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/claudiotalarico/tt-count",
      "commit": "8e55bcdcdcadfce3df7e3699d9f2f345741de165",
      "pinout": {
        "ui[0]": "test",
        "ui[1]": "ud",
        "ui[2]": "en",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "cnt[0]",
        "uo[1]": "cnt[1]",
        "uo[2]": "cnt[2]",
        "uo[3]": "cnt[3]",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_clock_divider_arghunter",
      "address": 353,
      "title": "Clock Divider ",
      "author": "Armaan Gomes",
      "description": "A clock divider with lag correction",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/arghunter/Clock-Divider-Verilog",
      "commit": "e154d5c88f06e9d05e202bdde1934b123c04ee67",
      "pinout": {
        "ui[0]": "Bit Clock (3.072 Mhz)",
        "ui[1]": "LR Clock (48Khz)",
        "ui[2]": "PDM Input Mics 0,1",
        "ui[3]": "PDM Input Mics 2,3",
        "ui[4]": "PDM Input Mics 4,5",
        "ui[5]": "PDM Input Mics 6,7",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "PCM Out Mic 0",
        "uo[1]": "PCM Out Mic 1",
        "uo[2]": "PCM Out Mic 2",
        "uo[3]": "PCM Out Mic 3",
        "uo[4]": "PCM Out Mic 4",
        "uo[5]": "PCM Out Mic 5",
        "uo[6]": "PCM Out Mic 6",
        "uo[7]": "PCM Out Mic 7",
        "uio[0]": "Delay Select 0",
        "uio[1]": "Delay Select 1",
        "uio[2]": "Delay Select 2",
        "uio[3]": "Delay Select 3",
        "uio[4]": "Delay Select 4",
        "uio[5]": "Beamformed PCM Output",
        "uio[6]": "Mic Clock",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_comm_ic_bhavuk",
      "address": 237,
      "title": "Comm_IC",
      "author": "Bhavuk",
      "description": "Communication protcols: UART, SPI, I2C",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/Bhavuk-HDL/tty8_comm_ic",
      "commit": "f1cb2df40ff540ad3d8a22d0b6d4bc27a5150aaa",
      "pinout": {
        "ui[0]": "UART_RX",
        "ui[1]": "MISO",
        "ui[2]": "data_en",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "UART_TX",
        "uo[1]": "SEN",
        "uo[2]": "SCLK",
        "uo[3]": "MOSI",
        "uo[4]": "SCL",
        "uo[5]": "busy_uart",
        "uo[6]": "busy_spi",
        "uo[7]": "busy_i2c",
        "uio[0]": "SDA_out",
        "uio[1]": "new_uart",
        "uio[2]": "data_out[0]",
        "uio[3]": "data_out[1]",
        "uio[4]": "data_out[2]",
        "uio[5]": "data_out[3]",
        "uio[6]": "error_i2c",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_control_block",
      "address": 73,
      "title": "ECE 298A 8-Bit CPU Control Block",
      "author": "Siddharth Nema & Gerry Chen",
      "description": "Generates the control signals required for other CPU sub blocks",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/SiddharthN16/TT09-Control-Block",
      "commit": "47ba976976c9bbee45b337ee351522458515b94b",
      "pinout": {
        "ui[0]": "opcode[0]",
        "ui[1]": "opcode[1]",
        "ui[2]": "opcode[2]",
        "ui[3]": "opcode[3]",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "SIG_RAM_LOAD_N",
        "uo[1]": "SIG_RAM_EN_N",
        "uo[2]": "SIG_MAR_MEM_LOAD_N",
        "uo[3]": "SIG_MAR_ADDR_LOAD_N",
        "uo[4]": "SIG_PC_LOAD",
        "uo[5]": "SIG_PC_EN",
        "uo[6]": "SIG_PC_INC",
        "uo[7]": "halted",
        "uio[0]": "SIG_OUT_LOAD_N",
        "uio[1]": "SIG_REGB_LOAD_N",
        "uio[2]": "SIG_REGB_EN",
        "uio[3]": "SIG_ADDER_SUB",
        "uio[4]": "SIG_REGA_EN",
        "uio[5]": "SIG_REGA_LOAD_N",
        "uio[6]": "SIG_IR_EN_N",
        "uio[7]": "SIG_IR_LOAD_N"
      }
    },
    {
      "macro": "tt_um_couchand_cora16",
      "address": 747,
      "title": "CORA-16",
      "author": "Andrew Dona-Couch",
      "description": "Simply 16-bit CPU",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/couchand/tt09-cora16",
      "commit": "f2d152e8afd87940be9a30f7b6e917a7d267ed3a",
      "pinout": {
        "ui[0]": "Data In 0",
        "ui[1]": "Data In 1",
        "ui[2]": "Data In 2",
        "ui[3]": "Data In 3",
        "ui[4]": "Data In 4",
        "ui[5]": "Data In 5",
        "ui[6]": "Data In 6",
        "ui[7]": "Data In 7",
        "uo[0]": "Data Out 0",
        "uo[1]": "Data Out 1",
        "uo[2]": "Data Out 2",
        "uo[3]": "Data Out 3",
        "uo[4]": "Data Out 4",
        "uo[5]": "Data Out 5",
        "uo[6]": "Data Out 6",
        "uo[7]": "Data Out 7",
        "uio[0]": "SPI MOSI",
        "uio[1]": "SPI CS",
        "uio[2]": "SPI CLK",
        "uio[3]": "SPI MISO",
        "uio[4]": "Step",
        "uio[5]": "Busy",
        "uio[6]": "Halt",
        "uio[7]": "Trap"
      }
    },
    {
      "macro": "tt_um_crispy_vga",
      "address": 777,
      "title": "Crispy VGA",
      "author": "James Meech",
      "description": "The scrolling VGA example from the vga playground but as you set more inputs high it gets successively more crispy",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JamesTimothyMeech/James-Meech-TT08-Demoscene",
      "commit": "94292fa606f901a5e31c8383e54cdac67b513909",
      "pinout": {
        "ui[0]": "R[1] vga input",
        "ui[1]": "G[1] vga input",
        "ui[2]": "B[1] vga input",
        "ui[3]": "vsync vga input",
        "ui[4]": "R[0] vga input",
        "ui[5]": "G[0] vga input",
        "ui[6]": "B[0] vga input",
        "ui[7]": "hsync vga input",
        "uo[0]": "R[1] vga input",
        "uo[1]": "G[1] vga input",
        "uo[2]": "B[1] vga input",
        "uo[3]": "vsync vga input",
        "uo[4]": "R[0] vga input",
        "uo[5]": "G[0] vga input",
        "uo[6]": "B[0] vga input",
        "uo[7]": "hsync vga input",
        "uio[0]": "Crispy input bit 0 that toggles the noise on the hsync signal on or off. Also adds one bit of noise to audio.",
        "uio[1]": "Crispy input bit 1 toggles the noise on the B signal on or off. Also adds one bit of noise to audio.",
        "uio[2]": "Crispy input bit 2 toggles the noise on the G signal on or off. Also adds one bit of noise to audio.",
        "uio[3]": "Crispy input bit 3 toggles the noise on the R signal on or off. Also adds one bit of noise to audio.",
        "uio[4]": "Crispy input bit 4 that toggles the noise on the vsync signal on or off. Also adds one bit of noise to audio.",
        "uio[5]": "Crispy input bit 5 that sets the noise level applied to the R, G, and B wires to high or low. Also adds one bit of noise to audio.",
        "uio[6]": "Audio input bit",
        "uio[7]": "Audio output bit"
      }
    },
    {
      "macro": "tt_um_daobaanh_rng",
      "address": 457,
      "title": "RNG_test",
      "author": "Ba-Anh Dao",
      "description": "trying to implement lightweight all digital trng",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/daobaanh/tt10-trng-test",
      "commit": "da6d9c595a3351df6d31610de427258d0419a4d4",
      "pinout": {
        "ui[0]": "RX_Serial",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "TX_Serial",
        "uo[1]": "o_RO",
        "uo[2]": "o_RG",
        "uo[3]": "led",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_daosvik_aesinvsbox",
      "address": 202,
      "title": "AES Inverse S-box",
      "author": "Dag Arne Osvik",
      "description": "Advanced Encryption Standard (AES) Inverse S-box",
      "clock_hz": 125000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/daosvik/tt08-aes-invsbox",
      "commit": "e78636840df3af0a11027db7fe2a0d3a82821521",
      "pinout": {
        "ui[0]": "x[0]",
        "ui[1]": "x[1]",
        "ui[2]": "x[2]",
        "ui[3]": "x[3]",
        "ui[4]": "x[4]",
        "ui[5]": "x[5]",
        "ui[6]": "x[6]",
        "ui[7]": "x[7]",
        "uo[0]": "y[0]",
        "uo[1]": "y[1]",
        "uo[2]": "y[2]",
        "uo[3]": "y[3]",
        "uo[4]": "y[4]",
        "uo[5]": "y[5]",
        "uo[6]": "y[6]",
        "uo[7]": "y[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_db_MAC",
      "address": 582,
      "title": "8 bit MAC Unit",
      "author": "Devesh Bhaskaran",
      "description": "Implementation Of 8-bit MAC Using Vedic Multipliers And Reversible Gates",
      "clock_hz": 40000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/devesh-b/tt09-deveshb-8-bitMAC",
      "commit": "b92c0054ea6cb14cb6d40aae77717146285595ab",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio[0]",
        "uio[1]": "uio[1]",
        "uio[2]": "uio[2]",
        "uio[3]": "uio[3]",
        "uio[4]": "uio[4]",
        "uio[5]": "uio[5]",
        "uio[6]": "uio[6]",
        "uio[7]": "uio[7]"
      }
    },
    {
      "macro": "tt_um_ddc_arghunter",
      "address": 266,
      "title": "DDC",
      "author": "Armaan Gomes",
      "description": "Converts I2S input to PDM output",
      "clock_hz": 0,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/arghunter/DDC-Digital-to-DIgital-Converter",
      "commit": "73d05d45cedb8eda8526502c03179d0eb99dc122",
      "pinout": {
        "ui[0]": "Bit Clock (3.072 Mhz)",
        "ui[1]": "LR Clock (48Khz)",
        "ui[2]": "PDM Input Mics 0,1",
        "ui[3]": "PDM Input Mics 2,3",
        "ui[4]": "PDM Input Mics 4,5",
        "ui[5]": "PDM Input Mics 6,7",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "PCM Out Mic 0",
        "uo[1]": "PCM Out Mic 1",
        "uo[2]": "PCM Out Mic 2",
        "uo[3]": "PCM Out Mic 3",
        "uo[4]": "PCM Out Mic 4",
        "uo[5]": "PCM Out Mic 5",
        "uo[6]": "PCM Out Mic 6",
        "uo[7]": "PCM Out Mic 7",
        "uio[0]": "Delay Select 0",
        "uio[1]": "Delay Select 1",
        "uio[2]": "Delay Select 2",
        "uio[3]": "Delay Select 3",
        "uio[4]": "Delay Select 4",
        "uio[5]": "Beamformed PCM Output",
        "uio[6]": "Mic Clock",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_delta_liafn",
      "address": 879,
      "title": "Delta RNN and Leaky Integrate-and-Fire Nueron Circuit",
      "author": "Katherine Rogacheva",
      "description": "A physical representation of a delta recurrent neural network (Delta RNN) and a leaky integrate-and-fire (LIF) neuron, that creates an artificial spike when the difference in the previous and current state is greater than a set delta threshold.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/katrogacheva/tt09-LIAFN-chip-design",
      "commit": "e18d0342d4ea8d4828287433900c7f0a10dce44f",
      "pinout": {
        "ui[0]": "Input current bit [0]",
        "ui[1]": "Input current bit [1]",
        "ui[2]": "Input current bit [2]",
        "ui[3]": "Input current bit [3]",
        "ui[4]": "Input current bit [4]",
        "ui[5]": "Input current bit [5]",
        "ui[6]": "Input current bit [6]",
        "ui[7]": "Input current bit [7]",
        "uo[0]": "State variable bit [0]",
        "uo[1]": "State variable bit [1]",
        "uo[2]": "State variable bit [2]",
        "uo[3]": "State variable bit [3]",
        "uo[4]": "State variable bit [4]",
        "uo[5]": "State variable bit [5]",
        "uo[6]": "State variable bit [6]",
        "uo[7]": "State variable bit [7]",
        "uio[0]": "Difference in states bit [1]",
        "uio[1]": "Difference in states bit [2]",
        "uio[2]": "Difference in states bit [3]",
        "uio[3]": "Difference in states bit [4]",
        "uio[4]": "Difference in states bit [5]",
        "uio[5]": "Difference in states bit [6]",
        "uio[6]": "Difference in states bit [7]",
        "uio[7]": "Difference in states bit [8]"
      }
    },
    {
      "macro": "tt_um_demosiine_sda",
      "address": 839,
      "title": "DemoSiine",
      "author": "SagarDevAchar",
      "description": "A Wavy and Rainbowy TT08 Demoscene Submission",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/SagarDevAchar/tt08-demosiine",
      "commit": "396391b25440e8c8202c4723a872cdd98d2e3a8e",
      "pinout": {
        "ui[0]": "Frame Positive / Negative",
        "ui[1]": "Enable / Disable Little Sine Layer",
        "ui[2]": "Enable / Disable Big Sine Layer",
        "ui[3]": "Enable / Disable Overlay",
        "ui[4]": "Toggle Overlay Style",
        "ui[5]": "Toggle Background Style",
        "ui[6]": "Run / Stop Animation",
        "ui[7]": "Play / Pause Audio",
        "uo[0]": "Video Red MSB",
        "uo[1]": "Video Green MSB",
        "uo[2]": "Video Blue MSB",
        "uo[3]": "Video V-Sync",
        "uo[4]": "Video Red LSB",
        "uo[5]": "Video Green LSB",
        "uo[6]": "Video Blue LSB",
        "uo[7]": "Video H-Sync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Audio Output"
      }
    },
    {
      "macro": "tt_um_dendraws_donut",
      "address": 683,
      "title": "donut",
      "author": "Daniel Endraws",
      "description": "Showing a Donut",
      "clock_hz": 50350000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/daniel-endraws/tt08-donut",
      "commit": "7b69c908d0541b151c67b8543aeb44cced6a3892",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R[1]",
        "uo[1]": "G[1]",
        "uo[2]": "B[1]",
        "uo[3]": "vsync",
        "uo[4]": "R[0]",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_devinatkin_basys3_uart",
      "address": 322,
      "title": "Basys 3 Over UART Link",
      "author": "Devin Atkin",
      "description": "Run the main Basys 3 Peripherals over a 115200 Uart Link ",
      "clock_hz": 50000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/devinatkin/tt09-basys3-uart-link",
      "commit": "8bf96aac6b82ec8814e5f44e78ca0da8cad1285b",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "uart_tx",
        "uio[1]": "uart_rx",
        "uio[2]": "uart_tx_ready",
        "uio[3]": "uart_tx_valid",
        "uio[4]": "uart_rx_valid",
        "uio[5]": "uart_rx_ready",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_devmonk_ay8913",
      "address": 708,
      "title": "Classic 8-bit era Programmable Sound Generator AY-3-8913",
      "author": "Eric Farrow - ReJ aka Renaldas Zioma",
      "description": "The AY-3-8913 is a 3-voice programmable sound generator (PSG) chip from General Instruments. The AY-3-8913 is a smaller variant of AY-3-8910 or its analog YM2149.",
      "clock_hz": 2000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/devmonkZA/devmonk-tto-ay8913",
      "commit": "ade19ba75b8764c4c20efd922d1c078af42fa1c5",
      "pinout": {
        "ui[0]": "DA0 - multiplexed data/address bus LSB",
        "ui[1]": "DA1 - multiplexed data/address bus",
        "ui[2]": "DA2 - multiplexed data/address bus",
        "ui[3]": "DA3 - multiplexed data/address bus",
        "ui[4]": "DA4 - multiplexed data/address bus",
        "ui[5]": "DA5 - multiplexed data/address bus",
        "ui[6]": "DA6 - multiplexed data/address bus",
        "ui[7]": "DA7 - multiplexed data/address bus MSB",
        "uo[0]": "audio out (PWM)",
        "uo[1]": "digita audio LSB",
        "uo[2]": "digita audio ",
        "uo[3]": "digita audio ",
        "uo[4]": "digita audio ",
        "uo[5]": "digita audio ",
        "uo[6]": "digita audio ",
        "uo[7]": "digita audio MSB",
        "uio[0]": "(in) **BC1** bus control",
        "uio[1]": "(in) **BDIR** bus direction",
        "uio[2]": "(in) **SEL0** clock divider",
        "uio[3]": "(in) **SEL1** clock divider",
        "uio[4]": "(out) channel A (PWM)",
        "uio[5]": "(out) channel B (PWM)",
        "uio[6]": "(out) channel C (PWM)",
        "uio[7]": "(out) AUDIO OUT master (PWM)"
      }
    },
    {
      "macro": "tt_um_dff_mem",
      "address": 514,
      "title": "dff_mem",
      "author": "dmrudait",
      "description": "16 byte RAM built out of DFFs",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Troops3/TinyRAM",
      "commit": "8efe6240041b96b63018aa59c2fdb0cd6c2ca8b8",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "addr[4]",
        "ui[5]": "",
        "ui[6]": "lr_n",
        "ui[7]": "ce_n",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "in[0]",
        "uio[1]": "in[1]",
        "uio[2]": "in[2]",
        "uio[3]": "in[3]",
        "uio[4]": "in[4]",
        "uio[5]": "in[5]",
        "uio[6]": "in[6]",
        "uio[7]": "in[7]"
      }
    },
    {
      "macro": "tt_um_digital_clock_example",
      "address": 576,
      "title": "7-Segment Digital Desk Clock",
      "author": "Samuel Ellicott",
      "description": "7-Segment Desk Clock",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/sellicott/tt09_desk_alarm_clock",
      "commit": "6725a86b9fbdbef5ae0cd5cae59695eae7ce1b34",
      "pinout": {
        "ui[0]": "refclk",
        "ui[1]": "",
        "ui[2]": "Fast/Slow Set",
        "ui[3]": "Set Hours",
        "ui[4]": "Set Minutes",
        "ui[5]": "12-Hour Mode",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "Display CS",
        "uio[1]": "Display MOSI",
        "uio[2]": "",
        "uio[3]": "Display SCK",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_dlfloatmac",
      "address": 229,
      "title": "DL float MAC",
      "author": "Ananya P & Nidhi M D",
      "description": "MAC unit for 16 bit DL float data type",
      "clock_hz": 40000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/ananya343B/tt08_dlfloat_mac",
      "commit": "7ea09d55d6d3b1f9bea796369bdb7c2436280ff1",
      "pinout": {
        "ui[0]": "FP16 in[0]",
        "ui[1]": "FP16 in[1]",
        "ui[2]": "FP16 in[2]",
        "ui[3]": "FP16 in[3]",
        "ui[4]": "FP16 in[4]",
        "ui[5]": "FP16 in[5]",
        "ui[6]": "FP16 in[6]",
        "ui[7]": "FP16 in[7]",
        "uo[0]": "FP16 out[0]/FP16 out[8]",
        "uo[1]": "FP16 out[1]/FP16 out[9]",
        "uo[2]": "FP16 out[2]/FP16 out[10]",
        "uo[3]": "FP16 out[3]/FP16 out[11]",
        "uo[4]": "FP16 out[4]/FP16 out[12]",
        "uo[5]": "FP16 out[5]/FP16 out[13]",
        "uo[6]": "FP16 out[6]/FP16 out[14]",
        "uo[7]": "FP16 out[7]/FP16 out[15]",
        "uio[0]": "FP16 in[8]",
        "uio[1]": "FP16 in[9]",
        "uio[2]": "FP16 in[10]",
        "uio[3]": "FP16 in[11]",
        "uio[4]": "FP16 in[12]",
        "uio[5]": "FP16 in[13]",
        "uio[6]": "FP16 in[14]",
        "uio[7]": "FP16 in[15]"
      }
    },
    {
      "macro": "tt_um_dlmiles_dffram32x8_2r1w",
      "address": 755,
      "title": "Tiny RAM DFF 2r1w",
      "author": "Darryl Miles",
      "description": "RAM made from DFF 2r1w (32x8)",
      "clock_hz": 10000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/dlmiles/tt09-dffram-2r1w",
      "commit": "46fbf3a307b5ffe37c2cd27a951bd30d1aa0da4f",
      "pinout": {
        "ui[0]": "DI_A[0]",
        "ui[1]": "DI_A[1]",
        "ui[2]": "DI_A[2]",
        "ui[3]": "DI_A[3]",
        "ui[4]": "AD_A[0]",
        "ui[5]": "AD_A[1]",
        "ui[6]": "AD_A[2]",
        "ui[7]": "AD_A[3]",
        "uo[0]": "DO_A[0]",
        "uo[1]": "DO_A[1]",
        "uo[2]": "DO_A[2]",
        "uo[3]": "DO_A[3]",
        "uo[4]": "DO_B[0]",
        "uo[5]": "DO_B[1]",
        "uo[6]": "DO_B[2]",
        "uo[7]": "DO_B[3]",
        "uio[0]": "AD_B[0] (in)",
        "uio[1]": "AD_B[1] (in)",
        "uio[2]": "AD_B[2] (in)",
        "uio[3]": "AD_B[3] (in)",
        "uio[4]": "LOHI_A (in)",
        "uio[5]": "LOHI_B (in)",
        "uio[6]": "",
        "uio[7]": "W_EN (in)"
      }
    },
    {
      "macro": "tt_um_dlmiles_poc_fskmodem_hdlctrx",
      "address": 689,
      "title": "FSK Modem +HDLC +UART (PoC)",
      "author": "Darryl Miles",
      "description": "FSK Modem w/ HDLC transciever + UART (PoC digital side)",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/dlmiles/tt06-poc-fskmodem-hdlctrx",
      "commit": "3d019d43c111ae1054eccc71a2c5a618149fb888",
      "pinout": {
        "ui[0]": "Rx Data",
        "ui[1]": "Tx Data",
        "ui[2]": "UART RTS",
        "ui[3]": "TableData[0]",
        "ui[4]": "TableData[1]",
        "ui[5]": "TableData[2]",
        "ui[6]": "TableData[3]",
        "ui[7]": "UART RX",
        "uo[0]": "UART TX",
        "uo[1]": "UART CTS",
        "uo[2]": "UART DCD",
        "uo[3]": "Rx Error",
        "uo[4]": "Tx Error",
        "uo[5]": "Sending",
        "uo[6]": "",
        "uo[7]": "Tx Clock Stobe",
        "uio[0]": "Rx Clock (bidi)",
        "uio[1]": "Up/Down (bidi)",
        "uio[2]": "TableAddr[0]",
        "uio[3]": "TableAddr[1]",
        "uio[4]": "TableAddr[2]",
        "uio[5]": "TableAddr[3]",
        "uio[6]": "TableAddr[4]",
        "uio[7]": "TableAddr[5]"
      }
    },
    {
      "macro": "tt_um_dlmiles_tt08_poc_uart",
      "address": 685,
      "title": "UART",
      "author": "Darryl Miles",
      "description": "UART",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/dlmiles/tt08-poc-uart",
      "commit": "218ea32926b5ca52a5ad40a87cc74225b6cfc274",
      "pinout": {
        "ui[0]": "altclk",
        "ui[1]": "busMode0",
        "ui[2]": "busMode1",
        "ui[3]": "rxd",
        "ui[4]": "dsr",
        "ui[5]": "dcd",
        "ui[6]": "cts",
        "ui[7]": "ri",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "dtr",
        "uo[4]": "txd",
        "uo[5]": "rts",
        "uo[6]": "intTx",
        "uo[7]": "intRx",
        "uio[0]": "busData0",
        "uio[1]": "busData1",
        "uio[2]": "busData2",
        "uio[3]": "busData3",
        "uio[4]": "busData4",
        "uio[5]": "busData5",
        "uio[6]": "busData6",
        "uio[7]": "busData7"
      }
    },
    {
      "macro": "tt_um_dmtd_arghunter",
      "address": 305,
      "title": "DMTD ",
      "author": "Armaan Gomes",
      "description": "A Dual Mixer Timer DIfferential",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/arghunter/DMTD-Verilog",
      "commit": "ee10c00040748583f4fcd2091524dc684b20e68f",
      "pinout": {
        "ui[0]": "Bit Clock (3.072 Mhz)",
        "ui[1]": "LR Clock (48Khz)",
        "ui[2]": "PDM Input Mics 0,1",
        "ui[3]": "PDM Input Mics 2,3",
        "ui[4]": "PDM Input Mics 4,5",
        "ui[5]": "PDM Input Mics 6,7",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "PCM Out Mic 0",
        "uo[1]": "PCM Out Mic 1",
        "uo[2]": "PCM Out Mic 2",
        "uo[3]": "PCM Out Mic 3",
        "uo[4]": "PCM Out Mic 4",
        "uo[5]": "PCM Out Mic 5",
        "uo[6]": "PCM Out Mic 6",
        "uo[7]": "PCM Out Mic 7",
        "uio[0]": "Delay Select 0",
        "uio[1]": "Delay Select 1",
        "uio[2]": "Delay Select 2",
        "uio[3]": "Delay Select 3",
        "uio[4]": "Delay Select 4",
        "uio[5]": "Beamformed PCM Output",
        "uio[6]": "Mic Clock",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_dog_BILBO",
      "address": 594,
      "title": "8-bit CBILBO",
      "author": "Devesh Bhaskaran, Om Shivshankar Shigarkanti, Garima Bajpayi",
      "description": "Concurrent Built--In Logic BlockIn Logic Block Observer for Memory Test",
      "clock_hz": 40000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/garima19bajpayi/tt09-.gxrii-BILBO",
      "commit": "b7aa3e08f5f9f6ff578e7cf63677c8b7f661e7b0",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio[0]",
        "uio[1]": "uio[1]",
        "uio[2]": "uio[2]",
        "uio[3]": "uio[3]",
        "uio[4]": "uio[4]",
        "uio[5]": "uio[5]",
        "uio[6]": "uio[6]",
        "uio[7]": "uio[7]"
      }
    },
    {
      "macro": "tt_um_dpmu",
      "address": 194,
      "title": "DPMU",
      "author": "Sanjay Kumar M, Shylashree N, Ravish Aradhya H V, RV College Of Engineering, Neha R V, PES Unoversity",
      "description": "Design and Implementation of Dynamic Power management unit",
      "clock_hz": 100,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE/TT8_DPMU",
      "commit": "d9926024aba9d13d125d2bd36b6745fbcb3bfc0c",
      "pinout": {
        "ui[0]": "ui_in[[0]",
        "ui[1]": "ui_in[[1]",
        "ui[2]": "ui_in[[2]",
        "ui[3]": "ui_in[[3]",
        "ui[4]": "ui_in[[4]",
        "ui[5]": "ui_in[[5]",
        "ui[6]": "ui_in[[6]",
        "ui[7]": "ui_in[[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_out[0]",
        "uio[1]": "uio_out[1]",
        "uio[2]": "uio_out[2]",
        "uio[3]": "uio_out[3]",
        "uio[4]": "uio_out[4]",
        "uio[5]": "uio_out[5]",
        "uio[6]": "uio_out[6]",
        "uio[7]": "uio_out[7]"
      }
    },
    {
      "macro": "tt_um_dpmunit",
      "address": 289,
      "title": "DPM_Unit",
      "author": "Sanjay Kumar M, Shylashree N, Ravish Aradhya H V, RV College Of Engineering, Neha R V, PES University",
      "description": "Design and Implementation of Dynamic Power management unit",
      "clock_hz": 100,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE-Shylashree/TT8-DPMU",
      "commit": "ee9c8ae44e1cba03c5315015d6c293d8f2386969",
      "pinout": {
        "ui[0]": "ui_in[[0]",
        "ui[1]": "ui_in[[1]",
        "ui[2]": "ui_in[[2]",
        "ui[3]": "ui_in[[3]",
        "ui[4]": "ui_in[[4]",
        "ui[5]": "ui_in[[5]",
        "ui[6]": "ui_in[[6]",
        "ui[7]": "ui_in[[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_out[0]",
        "uio[1]": "uio_out[1]",
        "uio[2]": "uio_out[2]",
        "uio[3]": "uio_out[3]",
        "uio[4]": "uio_out[4]",
        "uio[5]": "uio_out[5]",
        "uio[6]": "uio_out[6]",
        "uio[7]": "uio_out[7]"
      }
    },
    {
      "macro": "tt_um_drum_goekce",
      "address": 38,
      "title": "DRUM",
      "author": "G\u00f6k\u00e7e Aydos",
      "description": "an approximate multiplier",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/goekce/tinytapeout10-design",
      "commit": "aa43207e57b86997c4daf6b55325059acc7bc021",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "",
        "ui[5]": "result write enable",
        "ui[6]": "tristate output enable",
        "ui[7]": "RAM write enable",
        "uo[0]": "ram_out(0)",
        "uo[1]": "ram_out(1)",
        "uo[2]": "ram_out(2)",
        "uo[3]": "ram_out(3)",
        "uo[4]": "ram_out(4)",
        "uo[5]": "ram_out(5)",
        "uo[6]": "ram_out(6)",
        "uo[7]": "ram_out(7)",
        "uio[0]": "ram_in(0) or result(0)",
        "uio[1]": "ram_in(1) or result(1)",
        "uio[2]": "ram_in(2) or result(2)",
        "uio[3]": "ram_in(3) or result(3)",
        "uio[4]": "ram_in(4) or result(4)",
        "uio[5]": "ram_in(5) or result(5)",
        "uio[6]": "ram_in(6) or result(6)",
        "uio[7]": "ram_in(7) or result(7)"
      }
    },
    {
      "macro": "tt_um_ece298a_8_bit_cpu_top",
      "address": 488,
      "title": "8-Bit CPU",
      "author": "University of Waterloo - Fall 2024 ECE 298A",
      "description": "A basic 8-bit CPU design building off the SAP-1",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/gjrchen/8-Bit-CPU-top",
      "commit": "730b2f8b61c1c0592e8e529c32150931fae74475",
      "pinout": {
        "ui[0]": "prog_in_0",
        "ui[1]": "prog_in_1",
        "ui[2]": "prog_in_2",
        "ui[3]": "prog_in_3",
        "ui[4]": "prog_in_4",
        "ui[5]": "prog_in_5",
        "ui[6]": "prog_in_6",
        "ui[7]": "prog_in_7",
        "uo[0]": "output_register_0",
        "uo[1]": "output_register_1",
        "uo[2]": "output_register_2",
        "uo[3]": "output_register_3",
        "uo[4]": "output_register_4",
        "uo[5]": "output_register_5",
        "uo[6]": "output_register_6",
        "uo[7]": "output_register_7",
        "uio[0]": "in_programming",
        "uio[1]": "out_ready_for_ui",
        "uio[2]": "out_done_load",
        "uio[3]": "out_CF",
        "uio[4]": "out_ZF",
        "uio[5]": "out_HF",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_edwintorok",
      "address": 233,
      "title": "Rounding error",
      "author": "Edwin T\u00f6r\u00f6k",
      "description": "Competition entry",
      "clock_hz": 25250000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/edwintorok/roundingerror",
      "commit": "8112ebf8e3af3ccb973fee884d74da65eeb4e6da",
      "pinout": {
        "ui[0]": "test mode (0=no, 1=yes)",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "r1",
        "uo[1]": "g1",
        "uo[2]": "b1",
        "uo[3]": "vsync",
        "uo[4]": "r0",
        "uo[5]": "g0",
        "uo[6]": "b0",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "PWM output"
      }
    },
    {
      "macro": "tt_um_emilian_muxpga",
      "address": 355,
      "title": "TinyFPGA resubmit for TT08",
      "author": "Emilian Miron",
      "description": "TinyFPGA",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/diferential/tt08-muxpga",
      "commit": "657f0cb0e7ab650246a923e8eb298a7425950be3",
      "pinout": {
        "ui[0]": "input0",
        "ui[1]": "input1",
        "ui[2]": "input2",
        "ui[3]": "input3",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "cmd0",
        "ui[7]": "cmd1",
        "uo[0]": "output0",
        "uo[1]": "output1",
        "uo[2]": "output2",
        "uo[3]": "output3",
        "uo[4]": "output4",
        "uo[5]": "output5",
        "uo[6]": "output6",
        "uo[7]": "output7",
        "uio[0]": "n/a",
        "uio[1]": "n/a",
        "uio[2]": "n/a",
        "uio[3]": "n/a",
        "uio[4]": "n/a",
        "uio[5]": "n/a",
        "uio[6]": "n/a",
        "uio[7]": "n/a"
      }
    },
    {
      "macro": "tt_um_emmyxu_obstacle_detection",
      "address": 206,
      "title": "Obstacle Detection",
      "author": "Emmy Xu",
      "description": "Does the logic of when to send certain signals when objects are close.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/emmyz00/Obstacle-Detector",
      "commit": "04e008c35a39bcf573038b9d03fb13908f7f1412",
      "pinout": {
        "ui[0]": "sensor_left",
        "ui[1]": "sensor_right",
        "ui[2]": "reset",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "left_buzz",
        "uo[1]": "right_buzz",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_enjens",
      "address": 399,
      "title": "Verilog based clock to 7-segment counter",
      "author": "EnJens",
      "description": "Verilog based clock to 7-segment counter",
      "clock_hz": 1,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/EnJens/tt10-workshop-verilog",
      "commit": "0de52d2378ac13825fd5e42c900714d041d4c274",
      "pinout": {
        "ui[0]": "IN0",
        "ui[1]": "IN1",
        "ui[2]": "IN2",
        "ui[3]": "IN3",
        "ui[4]": "IN4",
        "ui[5]": "IN4",
        "ui[6]": "IN5",
        "ui[7]": "IN6",
        "uo[0]": "OUT0",
        "uo[1]": "OUT1",
        "uo[2]": "OUT2",
        "uo[3]": "OUT3",
        "uo[4]": "OUT4",
        "uo[5]": "OUT5",
        "uo[6]": "OUT6",
        "uo[7]": "OUT7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ephrenm_tsal",
      "address": 142,
      "title": "TSAL_TT",
      "author": "Ephren Manning",
      "description": "FSAE EV Tractive System Active Light",
      "clock_hz": 8000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ephrenm/tt08-tsal",
      "commit": "62b99cb60c630ef7c77ac90e2f50a3cfd6d8a795",
      "pinout": {
        "ui[0]": "Comparison Value Bit 0",
        "ui[1]": "Comparison Value Bit 1",
        "ui[2]": "Comparison Value Bit 2",
        "ui[3]": "Comparison Value Bit 3",
        "ui[4]": "Comparison Value Bit 4",
        "ui[5]": "Comparison Value Bit 5",
        "ui[6]": "Comparison Value Bit 6",
        "ui[7]": "Comparison Value Bit 7",
        "uo[0]": "Green Led",
        "uo[1]": "Red Led",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "Chip Select",
        "uio[1]": "Serial Data",
        "uio[2]": "",
        "uio[3]": "Serial Clock",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ezchips_calc",
      "address": 851,
      "title": "8-Bit Calculator",
      "author": "Randy Zhu",
      "description": "ChipCraft Page 157 Lab ID: C-EQUALS",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ezchips/tt08-my-calc",
      "commit": "02fd6ad4d986964c07b40b556936cda2556afeec",
      "pinout": {
        "ui[0]": "Unused",
        "ui[1]": "Unused",
        "ui[2]": "Unused",
        "ui[3]": "Unused",
        "ui[4]": "Unused",
        "ui[5]": "Unused",
        "ui[6]": "Unused",
        "ui[7]": "Unused",
        "uo[0]": "Unused",
        "uo[1]": "Unused",
        "uo[2]": "Unused",
        "uo[3]": "Unused",
        "uo[4]": "Unused",
        "uo[5]": "Unused",
        "uo[6]": "Unused",
        "uo[7]": "Unused",
        "uio[0]": "Unused",
        "uio[1]": "Unused",
        "uio[2]": "Unused",
        "uio[3]": "Unused",
        "uio[4]": "Unused",
        "uio[5]": "Unused",
        "uio[6]": "Unused",
        "uio[7]": "Unused"
      }
    },
    {
      "macro": "tt_um_factory_test",
      "address": 1,
      "title": "Tiny Tapeout Factory Test",
      "author": "Tiny Tapeout",
      "description": "Factory test module",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt10-factory-test",
      "commit": "151278ab40e25ec91f2aa0cfa16368c83549d65f",
      "pinout": {
        "ui[0]": "sel / in_a[0]",
        "ui[1]": "in_a[1]",
        "ui[2]": "in_a[2]",
        "ui[3]": "in_a[3]",
        "ui[4]": "in_a[4]",
        "ui[5]": "in_a[5]",
        "ui[6]": "in_a[6]",
        "ui[7]": "in_a[7]",
        "uo[0]": "output[0] / counter[0]",
        "uo[1]": "output[1] / counter[1]",
        "uo[2]": "output[2] / counter[2]",
        "uo[3]": "output[3] / counter[3]",
        "uo[4]": "output[4] / counter[4]",
        "uo[5]": "output[5] / counter[5]",
        "uo[6]": "output[6] / counter[6]",
        "uo[7]": "output[7] / counter[7]",
        "uio[0]": "in_b[0] / counter[0]",
        "uio[1]": "in_b[1] / counter[1]",
        "uio[2]": "in_b[2] / counter[2]",
        "uio[3]": "in_b[3] / counter[3]",
        "uio[4]": "in_b[4] / counter[4]",
        "uio[5]": "in_b[5] / counter[5]",
        "uio[6]": "in_b[6] / counter[6]",
        "uio[7]": "in_b[7] / counter[7]"
      }
    },
    {
      "macro": "tt_um_faramire_rotary_ring_wrapper",
      "address": 138,
      "title": "Rotary Encoder WS2812B Control",
      "author": "Fabio Ramirez Stern",
      "description": "A rotary encoder controls 12 WS2812B LEDs on a ring PCB.",
      "clock_hz": 40000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/faramire/TT08-rotary-encoder-WS2812B",
      "commit": "2c862dda73a8edf372cdf47c51cf926e36af8848",
      "pinout": {
        "ui[0]": "rotary encoder: CLK",
        "ui[1]": "rotary encoder: DT",
        "ui[2]": "rotary encoder: SW",
        "ui[3]": "green",
        "ui[4]": "red",
        "ui[5]": "blue",
        "ui[6]": "intensity1",
        "ui[7]": "intensity2",
        "uo[0]": "DOUT",
        "uo[1]": "inverted",
        "uo[2]": "count0",
        "uo[3]": "count1",
        "uo[4]": "count2",
        "uo[5]": "count3",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_faramire_stopwatch",
      "address": 301,
      "title": "Simple Stopwatch",
      "author": "Fabio Ramirez Stern",
      "description": "A simple stopwatch counting in 100th seconds and outputing it via SPI to a MAX7219 chip controlling an 8 digit 7-segment display.",
      "clock_hz": 1000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/faramire/TT08-simple-stopwatch",
      "commit": "e59bca8b8ee0cdc9306480880c2eaa7d2565fb41",
      "pinout": {
        "ui[0]": "start/stop",
        "ui[1]": "lap time",
        "ui[2]": "reset (active high)",
        "ui[3]": "skip display setup (only output time, active high during reset)",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "SPI MOSI",
        "uo[1]": "SPI CS (active low)",
        "uo[2]": "SPI CLK",
        "uo[3]": "stopwatch enabled (counting up)",
        "uo[4]": "display enabled (goes low when showing lap time)",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_favoritohjs_scroller",
      "address": 771,
      "title": "VGA Scroller",
      "author": "FavoritoHJS",
      "description": "Scrolls across a very pixelated cityscape",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/FavoritoHJS/tt08-favoritohjs-scroller",
      "commit": "38c700b6e2a04212e34f9b74e5a21c62d5963aff",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Rh",
        "uo[1]": "Gh",
        "uo[2]": "Bh",
        "uo[3]": "vsync",
        "uo[4]": "Rl",
        "uo[5]": "Gl",
        "uo[6]": "Bl",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_find_the_damn_issue",
      "address": 259,
      "title": "Find The Damn Issue",
      "author": "Leonel Gouveia Ergin (Synogate), Michael Offel (Synogate)",
      "description": "USB to UART/SPI/I2C/JTAG/GPIO adapter",
      "clock_hz": 12000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/synogate/find-the-damn-issue",
      "commit": "bb975a7237d4172c944dcb732847af394732c89a",
      "pinout": {
        "ui[0]": "GPIOh0",
        "ui[1]": "GPIOh1",
        "ui[2]": "GPIOh2",
        "ui[3]": "GPIOh3",
        "ui[4]": "GPIOh4",
        "ui[5]": "GPIOh5",
        "ui[6]": "GPIOh6",
        "ui[7]": "GPIOh7",
        "uo[0]": "GPIOh0/DTR",
        "uo[1]": "GPIOh1/RTS",
        "uo[2]": "GPIOh2",
        "uo[3]": "GPIOh3",
        "uo[4]": "GPIOh4",
        "uo[5]": "GPIOh5",
        "uo[6]": "GPIOh6",
        "uo[7]": "GPIOh7",
        "uio[0]": "GPIOl0-CS",
        "uio[1]": "GPIOl1-MOSI/TX",
        "uio[2]": "GPIOl2-MISO/RX",
        "uio[3]": "GPIOl3-CLK",
        "uio[4]": "GPIOl4-TMS",
        "uio[5]": "GPIOl5-WAIT",
        "uio[6]": "USB_DP",
        "uio[7]": "USB_DN"
      }
    },
    {
      "macro": "tt_um_flummer_ltc",
      "address": 32,
      "title": "Linear Timecode (LTC) generator",
      "author": "Thomas Flummer",
      "description": "Timecode generator for audio video syncronization",
      "clock_hz": 12000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/flummer/tt-um-flummer-ltc",
      "commit": "25238c65454cd684a74a6fa3a228fcb6c28cedb6",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "FRAMERATE_0",
        "ui[3]": "FRAMERATE_1",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "LTC_OUT"
      }
    },
    {
      "macro": "tt_um_flyingfish800",
      "address": 586,
      "title": "Verilog test project",
      "author": "Alexander Symons",
      "description": "It adds the input and the IO pins",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/FlyingFish800/tt09",
      "commit": "7f6072dbd0ea61c90333cde39998e6460642f859",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_out[0]",
        "uio[1]": "uio_out[1]",
        "uio[2]": "uio_out[2]",
        "uio[3]": "uio_out[3]",
        "uio[4]": "uio_out[4]",
        "uio[5]": "uio_out[5]",
        "uio[6]": "uio_out[6]",
        "uio[7]": "uio_out[7]"
      }
    },
    {
      "macro": "tt_um_fountaincoder_top_ad",
      "address": 128,
      "title": "pulse_add",
      "author": "Jonny Edwards",
      "description": "a temporal add in digital",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Fountaincoder/trueadd",
      "commit": "4cccbb089a163f1dc47d2474de174cdf7266720b",
      "pinout": {
        "ui[0]": "in[0]",
        "ui[1]": "in[1]",
        "ui[2]": "in[2]",
        "ui[3]": "in[3]",
        "ui[4]": "in[4]",
        "ui[5]": "in[5]",
        "ui[6]": "in[6]",
        "ui[7]": "in[7]",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_frequency_counter",
      "address": 739,
      "title": "Frequency Counter SSD1306 OLED",
      "author": "Pawel Sitarz (embelon)",
      "description": "Simple Frequency Counter displaying result on SSD1306 SPI OLED",
      "clock_hz": 1000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/embelon/tt08-frequency-counter-oled",
      "commit": "4122e13947cf3161533a1ccb3cae941caae7f99b",
      "pinout": {
        "ui[0]": "clk_x - measured frequency input",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "OLED nRST",
        "uo[1]": "OLED nVBAT",
        "uo[2]": "OLED nVDC",
        "uo[3]": "OLED nCS",
        "uo[4]": "OLED Data/Command",
        "uo[5]": "OLED CLK",
        "uo[6]": "OLED Data Out",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_gamepad_pmod_demo",
      "address": 417,
      "title": "Gamepad Pmod Demo",
      "author": "Uri Shaked",
      "description": "Gamepad Pmod + Tiny VGA demo from VGA Playground",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt10-gamepad-pmod-demo",
      "commit": "15b70647923f2be684fb6a36c06a2e0f41ce3e2b",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "gamepad_latch",
        "ui[5]": "gamepad_clk",
        "ui[6]": "gamepad_data",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_gcd_stephan",
      "address": 459,
      "title": "15bit GCD",
      "author": "stephan",
      "description": "Greatest common denominator",
      "clock_hz": 100000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/StephanAAU/tt10-verilog",
      "commit": "2c8a57d6b1596fdae638303473b1007977499d1a",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_in[0]",
        "uio[1]": "uio_in[1]",
        "uio[2]": "uio_in[2]",
        "uio[3]": "uio_in[3]",
        "uio[4]": "uio_in[4]",
        "uio[5]": "uio_in[5]",
        "uio[6]": "uio_in[6]",
        "uio[7]": "uio_in[7]"
      }
    },
    {
      "macro": "tt_um_gfcwfzkm_scope_bfh_mht1_3",
      "address": 751,
      "title": "Basic Oszilloscope and Signal Generator",
      "author": "Pascal Gesell",
      "description": "Basic oscilloscope & signal generator on an ASIC",
      "clock_hz": 25000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/gfcwfzkm/tt09-scope-bfh-mht1_3",
      "commit": "eeb322efd75b49fc17c99fb9b9499c593f113008",
      "pinout": {
        "ui[0]": "FRAM MISO",
        "ui[1]": "Button 1",
        "ui[2]": "Button 3",
        "ui[3]": "Switch 1",
        "ui[4]": "ADC MISO",
        "ui[5]": "Button 2",
        "ui[6]": "Button 4",
        "ui[7]": "Switch 2",
        "uo[0]": "ADC CS",
        "uo[1]": "DAC MOSI",
        "uo[2]": "ADC SCLK",
        "uo[3]": "FRAM SCLK",
        "uo[4]": "DAC CS",
        "uo[5]": "DAC SCLK",
        "uo[6]": "FRAM CS",
        "uo[7]": "FRAM MOSI",
        "uio[0]": "HDMI Pmod Green",
        "uio[1]": "HDMI Pmod Clock",
        "uio[2]": "HDMI Pmod HSYNC",
        "uio[3]": "UART_TX Settings Info (9600bps, 8N1)",
        "uio[4]": "HDMI Pmod Red",
        "uio[5]": "HDMI Pmod Blue",
        "uio[6]": "HDMI Pmod DE",
        "uio[7]": "HDMI Pmod VSYNC"
      }
    },
    {
      "macro": "tt_um_gfg_development_tinymandelbrot",
      "address": 850,
      "title": "TinyMandelbrot",
      "author": "Gerrit Grutzeck",
      "description": "A mandelbrot generator",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/gfg-development/tt08-tiny-mandelbrot",
      "commit": "10eeed2afdf5cfaf34288f3fe2b833865a597fbc",
      "pinout": {
        "ui[0]": "serial enable",
        "ui[1]": "serial data",
        "ui[2]": "serial clock",
        "ui[3]": "output select",
        "ui[4]": "frame data[0]",
        "ui[5]": "frame data[1]",
        "ui[6]": "frame data[2]",
        "ui[7]": "frame data[3]",
        "uo[0]": "R[1] or ctr[0]",
        "uo[1]": "G[1] or ctr[0]",
        "uo[2]": "B[1] or ctr[0]",
        "uo[3]": "vsync or ctr[0]",
        "uo[4]": "R[0] or new counter",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "write data[0]",
        "uio[1]": "write data[1]",
        "uio[2]": "write data[2]",
        "uio[3]": "write data[3]",
        "uio[4]": "reset write pointer",
        "uio[5]": "write data",
        "uio[6]": "reset read pointer",
        "uio[7]": "read"
      }
    },
    {
      "macro": "tt_um_gmejiamtz",
      "address": 416,
      "title": "Configurable Logic Block",
      "author": "Gary Mejia",
      "description": "A small CLB with a LUT3",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/gmejiamtz/tt09-clb",
      "commit": "2321330d5e16d146402f571c071a7c326aa1dcdb",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_in[0]",
        "uio[1]": "uio_in[1]",
        "uio[2]": "uio_in[2]",
        "uio[3]": "uio_in[3]",
        "uio[4]": "uio_in[4]",
        "uio[5]": "uio_in[5]",
        "uio[6]": "uio_in[6]",
        "uio[7]": "uio_in[7]"
      }
    },
    {
      "macro": "tt_um_gregac_tiny_nn",
      "address": 678,
      "title": "Tiny Neural Network Accelerator",
      "author": "Greg Chadwick",
      "description": "A toy neural network accelerator targetting CNNs",
      "clock_hz": 50000000,
      "tiles": "4x2",
      "analog_pins": [],
      "repo": "https://github.com/GregAC/tt10-tiny-nn",
      "commit": "a36dcd90704efe9be273c33b527cd687fe910e18",
      "pinout": {
        "ui[0]": "ui[0]",
        "ui[1]": "ui[1]",
        "ui[2]": "ui[2]",
        "ui[3]": "ui[3]",
        "ui[4]": "ui[4]",
        "ui[5]": "ui[5]",
        "ui[6]": "ui[6]",
        "ui[7]": "ui[7]",
        "uo[0]": "uo[0]",
        "uo[1]": "uo[1]",
        "uo[2]": "uo[2]",
        "uo[3]": "uo[3]",
        "uo[4]": "uo[4]",
        "uo[5]": "uo[5]",
        "uo[6]": "uo[6]",
        "uo[7]": "uo[7]",
        "uio[0]": "uio[0]",
        "uio[1]": "uio[1]",
        "uio[2]": "uio[2]",
        "uio[3]": "uio[3]",
        "uio[4]": "uio[4]",
        "uio[5]": "uio[5]",
        "uio[6]": "uio[6]",
        "uio[7]": "uio[7]"
      }
    },
    {
      "macro": "tt_um_gus16",
      "address": 642,
      "title": "GUS16 CPU",
      "author": "J. Arias",
      "description": "16-bit CPU design",
      "clock_hz": 24000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/jesari-git/tt10-gus16-jarias",
      "commit": "5deae9aa7df55c193d848b6e6482fcf815e7479b",
      "pinout": {
        "ui[0]": "gpi[0]",
        "ui[1]": "gpi[1]",
        "ui[2]": "gpi[2]",
        "ui[3]": "rxd",
        "ui[4]": "gpi[3]",
        "ui[5]": "gpi[4]",
        "ui[6]": "gpi[5]",
        "ui[7]": "gpi[6]",
        "uo[0]": "xbh",
        "uo[1]": "xlal",
        "uo[2]": "xlal",
        "uo[3]": "pwmout",
        "uo[4]": "txd",
        "uo[5]": "gpo",
        "uo[6]": "xoeb",
        "uo[7]": "xweb",
        "uio[0]": "xd[0]",
        "uio[1]": "xd[1]",
        "uio[2]": "xd[2]",
        "uio[3]": "xd[3]",
        "uio[4]": "xd[4]",
        "uio[5]": "xd[5]",
        "uio[6]": "xd[6]",
        "uio[7]": "xd[7]"
      }
    },
    {
      "macro": "tt_um_gxrii_spi_sevenseg",
      "address": 427,
      "title": "SPI 7-segment display",
      "author": "Garima Bajpayi",
      "description": "A small SPI slave module driving the 7-segment display on the TT-Carrier board",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/garima19bajpayi/tt10-spi-7seg",
      "commit": "69e30e7d7583b207f092d5e1d4a561aa020aaa79",
      "pinout": {
        "ui[0]": "SS",
        "ui[1]": "MOSI",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "SCLK",
        "uo[0]": "Segment A",
        "uo[1]": "Segment B",
        "uo[2]": "Segment C",
        "uo[3]": "Segment D",
        "uo[4]": "Segment E",
        "uo[5]": "Segment F",
        "uo[6]": "Segment G",
        "uo[7]": "Segment DP",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_hack_cpu",
      "address": 146,
      "title": "HACK CPU",
      "author": "Dantong LUO, Nour MHANNA, Charbel SAAD",
      "description": "A 16-bit CPU based on the HACK architecture",
      "clock_hz": 12500000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/bugavix/hack_cpu",
      "commit": "ab9d0af20213258be0843b03a0176eb26136c619",
      "pinout": {
        "ui[0]": "external halt signal (to use when debugging)",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "GPIO21 - RAM CS",
        "uio[1]": "GPIO22 - RAM MOSI",
        "uio[2]": "GPIO23 - RAM MISO",
        "uio[3]": "GPIO24 - RAM SCK",
        "uio[4]": "DEBUG CS",
        "uio[5]": "DEBUG MOSI",
        "uio[6]": "DEBUG MISO",
        "uio[7]": "DEBUG SCK"
      }
    },
    {
      "macro": "tt_um_histogramming",
      "address": 484,
      "title": "Histogramming",
      "author": "isil isiksalan",
      "description": "histogramming unit",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/isiksalan/tt09-histogramming",
      "commit": "c8a064a40a06cdb016a127854bd3305c45e35fb7",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_hpdl1414_uart_atudoroi",
      "address": 389,
      "title": "TT10 HPDL 1414 Uart",
      "author": "Andrew Tudoroi",
      "description": "Uart interface for 4xHPDL 1414 PMOD Module",
      "clock_hz": 12000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ADDTDR/tt10-hpdl1414-uart",
      "commit": "af66e235ec5f0429ea00a281bdb5771fc22ebe33",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "HPDL_D0",
        "uo[1]": "HPDL_D1",
        "uo[2]": "HPDL_D2",
        "uo[3]": "HPDL_D3",
        "uo[4]": "HPDL_D4",
        "uo[5]": "HPDL_D5",
        "uo[6]": "HPDL_D6",
        "uo[7]": "",
        "uio[0]": "HPDL_A0",
        "uio[1]": "HPDL_A1",
        "uio[2]": "HPDL_WR1",
        "uio[3]": "HPDL_WR2",
        "uio[4]": "HPDL_WR3",
        "uio[5]": "HPDL_WR4",
        "uio[6]": "UART_TX",
        "uio[7]": "UART_RX"
      }
    },
    {
      "macro": "tt_um_htfab_bouncy_capsule",
      "address": 691,
      "title": "Bouncy Capsule",
      "author": "htfab",
      "description": "Demoscene project featuring... well, a bouncy capsule",
      "clock_hz": 25000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/htfab/bouncy-capsule",
      "commit": "b4cb6daddb48874cc2b4f38cdcb7ed20a5e40fde",
      "pinout": {
        "ui[0]": "Pause kinematics",
        "ui[1]": "Reset kinematics",
        "ui[2]": "Mute sound",
        "ui[3]": "Kill sound",
        "ui[4]": "Hide background",
        "ui[5]": "Hide text",
        "ui[6]": "Lock colors",
        "ui[7]": "No re-orientation",
        "uo[0]": "Tiny VGA R1",
        "uo[1]": "Tiny VGA G1",
        "uo[2]": "Tiny VGA B1",
        "uo[3]": "Tiny VGA VSync",
        "uo[4]": "Ting VGA R0",
        "uo[5]": "Tiny VGA G0",
        "uo[6]": "Tiny VGA B0",
        "uo[7]": "Tiny VGA HSync",
        "uio[0]": "PDM audio out",
        "uio[1]": "PDM audio out",
        "uio[2]": "PDM audio out",
        "uio[3]": "PDM audio out",
        "uio[4]": "PDM audio out",
        "uio[5]": "PDM audio out",
        "uio[6]": "PDM audio out",
        "uio[7]": "PDM audio out"
      }
    },
    {
      "macro": "tt_um_htfab_caterpillar",
      "address": 652,
      "title": "Simon's Caterpillar",
      "author": "htfab",
      "description": "Port of Caterpillar Logic to Simon Says PMOD",
      "clock_hz": 50000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/htfab/tt09-caterpillar",
      "commit": "2cf6f952e568418b99d47c789d4e4b2fd1779499",
      "pinout": {
        "ui[0]": "red button",
        "ui[1]": "green button",
        "ui[2]": "blue button",
        "ui[3]": "yellow button",
        "ui[4]": "display polarity",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "red led",
        "uo[1]": "green led",
        "uo[2]": "yellow led",
        "uo[3]": "blue led",
        "uo[4]": "speaker",
        "uo[5]": "digit 1",
        "uo[6]": "digit 2",
        "uo[7]": "",
        "uio[0]": "segment A",
        "uio[1]": "segment B",
        "uio[2]": "segment C",
        "uio[3]": "segment D",
        "uio[4]": "segment E",
        "uio[5]": "segment F",
        "uio[6]": "segment G",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_htfab_checkers",
      "address": 104,
      "title": "Overengineered Checkers",
      "author": "htfab",
      "description": "Recreation of the Checkers demo with each layer generated by a different Python-based HDL",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/htfab/tt10-py-checkers",
      "commit": "cd434374d733d0d7c07c5c88873f5f8085e079b2",
      "pinout": {
        "ui[0]": "main red",
        "ui[1]": "main green",
        "ui[2]": "main blue",
        "ui[3]": "sub red",
        "ui[4]": "sub green",
        "ui[5]": "sub blue",
        "ui[6]": "foreground",
        "ui[7]": "background",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_huffman_coder",
      "address": 485,
      "title": "Huffmann_Coder",
      "author": "Marvin Barth",
      "description": "compresses ASCII input into Huffman codes",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MarvinBrth/tt10-huffman-coder",
      "commit": "d4359d03e0fb421c9f28a77f9cedb04f6208b150",
      "pinout": {
        "ui[0]": "ASCII_in[0]",
        "ui[1]": "ASCII_in[1]",
        "ui[2]": "ASCII_in[2]",
        "ui[3]": "ASCII_in[3]",
        "ui[4]": "ASCII_in[4]",
        "ui[5]": "ASCII_in[5]",
        "ui[6]": "ASCII_in[6]",
        "ui[7]": "Load",
        "uo[0]": "Huffman_out[0]",
        "uo[1]": "Huffman_out[1]",
        "uo[2]": "Huffman_out[2]",
        "uo[3]": "Huffman_out[3]",
        "uo[4]": "Huffman_out[4]",
        "uo[5]": "Huffman_out[5]",
        "uo[6]": "Huffman_out[6]",
        "uo[7]": "Huffman_out[7]",
        "uio[0]": "Huffman_out[8]",
        "uio[1]": "Huffman_out[9]",
        "uio[2]": "Valid_out",
        "uio[3]": "Bit_length[0]",
        "uio[4]": "Bit_length[1]",
        "uio[5]": "Bit_length[2]",
        "uio[6]": "Bit_length[3]",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_hybrid_adder",
      "address": 5,
      "title": "Hybrid_Adder_8bit",
      "author": "James Xie, Cameron Bedard",
      "description": "8-bit hybrid adder (using CLA and KSA)",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/cameronbed/tt09-hybrid-adder",
      "commit": "4d20167a25902aba012bb7d5065a5783a9bba1ac",
      "pinout": {
        "ui[0]": "a[0]",
        "ui[1]": "a[1]",
        "ui[2]": "a[2]",
        "ui[3]": "a[3]",
        "ui[4]": "a[4]",
        "ui[5]": "a[5]",
        "ui[6]": "a[6]",
        "ui[7]": "a[7]",
        "uo[0]": "sum[0]",
        "uo[1]": "sum[1]",
        "uo[2]": "sum[2]",
        "uo[3]": "sum[3]",
        "uo[4]": "sum[4]",
        "uo[5]": "sum[5]",
        "uo[6]": "sum[6]",
        "uo[7]": "sum[7]",
        "uio[0]": "b[0]",
        "uio[1]": "b[1]",
        "uio[2]": "b[2]",
        "uio[3]": "b[3]",
        "uio[4]": "b[4]",
        "uio[5]": "b[5]",
        "uio[6]": "b[6]",
        "uio[7]": "b[7]"
      }
    },
    {
      "macro": "tt_um_i2c_peripheral_stevej",
      "address": 136,
      "title": "i2c peripherals: leading zero count and fnv-1a hash",
      "author": "Steve Jenson <stevej@gmail.com>",
      "description": "An implementation of HyperLogLog in Verilog for sky130",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/stevej/tt08-stevej-i2c-peripheral",
      "commit": "c87b9867607931f9d5c8f860e5caa24b42ab2e1b",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "(INT)",
        "uio[1]": "(RESET)",
        "uio[2]": "SCL",
        "uio[3]": "SDA",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_i2c_regf",
      "address": 491,
      "title": "Asynchronous I2C Registerfile Interface",
      "author": "DTU",
      "description": "async. i2c if to regfile",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/SimoneGuglielmino/I2C_register",
      "commit": "060d2ad7bf25b576712a430e9c7f52935fbe32a5",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "SDA",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_i2s_to_pwm_arghunter",
      "address": 307,
      "title": "I2S to PWM ",
      "author": "Armaan Gomes",
      "description": "An 8-bit I2S to PWM convertor",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/arghunter/I2S-to-PWM-Verilog",
      "commit": "dd892af5838f7679a34c2ec496c6edf2015f8a4a",
      "pinout": {
        "ui[0]": "Bit Clock (3.072 Mhz)",
        "ui[1]": "LR Clock (48Khz)",
        "ui[2]": "PDM Input Mics 0,1",
        "ui[3]": "PDM Input Mics 2,3",
        "ui[4]": "PDM Input Mics 4,5",
        "ui[5]": "PDM Input Mics 6,7",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "PCM Out Mic 0",
        "uo[1]": "PCM Out Mic 1",
        "uo[2]": "PCM Out Mic 2",
        "uo[3]": "PCM Out Mic 3",
        "uo[4]": "PCM Out Mic 4",
        "uo[5]": "PCM Out Mic 5",
        "uo[6]": "PCM Out Mic 6",
        "uo[7]": "PCM Out Mic 7",
        "uio[0]": "Delay Select 0",
        "uio[1]": "Delay Select 1",
        "uio[2]": "Delay Select 2",
        "uio[3]": "Delay Select 3",
        "uio[4]": "Delay Select 4",
        "uio[5]": "Beamformed PCM Output",
        "uio[6]": "Mic Clock",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_idann",
      "address": 83,
      "title": "Forward Pass Network for Simple ANN",
      "author": "Arian Heidari",
      "description": "ANN that takes in a 4-bit value, and completes a forward pass.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/arheidar/tt09-chip-tapeout-110",
      "commit": "124977ae5fda013092afcb849c2eabcf17fbac0e",
      "pinout": {
        "ui[0]": "Input bit [0]",
        "ui[1]": "Input bit [1]",
        "ui[2]": "Input bit [2]",
        "ui[3]": "Input bit [3]",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Output Calculation [0]",
        "uo[1]": "Output Calculation [1]",
        "uo[2]": "Output Calculation [2]",
        "uo[3]": "Output Calculation [3]",
        "uo[4]": "Output Calculation [4]",
        "uo[5]": "Output Calculation [5]",
        "uo[6]": "Output Calculation [6]",
        "uo[7]": "Output Calculation [7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_iitbbs",
      "address": 171,
      "title": "CYCLIPSONIC",
      "author": "IITBBS_HEART",
      "description": "A dual-mode washing machine controller featuring a LiPSi microprocessor and a standalone controller, selectable via a pin configuration.",
      "clock_hz": 20000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/RohithManikanta7/iitbbsheart",
      "commit": "337c6c850bfef0d8b9fad6cf46408254d0d09f7b",
      "pinout": {
        "ui[0]": "ui[0]",
        "ui[1]": "ui[1]",
        "ui[2]": "ui[2]",
        "ui[3]": "ui[3]",
        "ui[4]": "ui[4]",
        "ui[5]": "ui[5]",
        "ui[6]": "ui[6]",
        "ui[7]": "ui[7]",
        "uo[0]": "uo[0]",
        "uo[1]": "uo[1]",
        "uo[2]": "uo[2]",
        "uo[3]": "uo[3]",
        "uo[4]": "uo[4]",
        "uo[5]": "uo[5]",
        "uo[6]": "uo[6]",
        "uo[7]": "uo[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_instrumented_ring_oscillator",
      "address": 19,
      "title": "instrumented_ring_oscillator",
      "author": "Jeremy Mickelsen",
      "description": "A ring oscillator with a selectable number of stages and initial state.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/AnotherPseudonym/intstrumented_ring_oscillator",
      "commit": "3649d25a8408f58ef592f9b6d2a53d14d6449342",
      "pinout": {
        "ui[0]": "enable",
        "ui[1]": "hold",
        "ui[2]": "bdat",
        "ui[3]": "bclk",
        "ui[4]": "n_stages[0]",
        "ui[5]": "n_stages[1]",
        "ui[6]": "n_stages[2]",
        "ui[7]": "n_stages[3]",
        "uo[0]": "phase[0]",
        "uo[1]": "phase[1]",
        "uo[2]": "phase[2]",
        "uo[3]": "phase[3]",
        "uo[4]": "phase[4]",
        "uo[5]": "phase[5]",
        "uo[6]": "phase[6]",
        "uo[7]": "phase[7]",
        "uio[0]": "phase[8]",
        "uio[1]": "phase[9]",
        "uio[2]": "phase[10]",
        "uio[3]": "phase[11]",
        "uio[4]": "phase[12]",
        "uio[5]": "phase[13]",
        "uio[6]": "phase[14]",
        "uio[7]": "phase[15]"
      }
    },
    {
      "macro": "tt_um_jamesrosssharp_1bitam",
      "address": 752,
      "title": "1bit_am_sdr",
      "author": "James Sharp",
      "description": "1bit AM software defined radio",
      "clock_hz": 50000000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/jamesrosssharp/tt09-am-sdr",
      "commit": "d874fc4a6fee59b6a94ad066af7c555eb5fb678a",
      "pinout": {
        "ui[0]": "COMP_IN",
        "ui[1]": "SPI_MOSI",
        "ui[2]": "SPI_SCK",
        "ui[3]": "SPI_CSb",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "COMP_OUT",
        "uo[1]": "PWM",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_jamesrosssharp_tiny1bitam",
      "address": 741,
      "title": "Tiny 1-bit AM Radio",
      "author": "James Ross Sharp",
      "description": "Syntehsizable 1-bit AM radio core",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/jamesrosssharp/tt09-smaller-am-sdr",
      "commit": "e2d975204fe41cb3593c174cf813f4e71cd76de6",
      "pinout": {
        "ui[0]": "COMP_IN",
        "ui[1]": "SPI_MOSI",
        "ui[2]": "SPI_SCK",
        "ui[3]": "SPI_CSb",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "COMP_OUT",
        "uo[1]": "PWM",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_jayjaywong12",
      "address": 270,
      "title": "mulmul",
      "author": "JJ Wong",
      "description": "Small 4-bit vector multiplication engine",
      "clock_hz": 0,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/jayjaywong12/tt08",
      "commit": "f659691d9b9bbba12d365b2e1f3c8f9170aa8da1",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "addr[4]",
        "ui[5]": "addr[5]",
        "ui[6]": "op[0]",
        "ui[7]": "op[1]",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "data[0]",
        "uio[1]": "data[1]",
        "uio[2]": "data[2]",
        "uio[3]": "data[3]",
        "uio[4]": "state[0]",
        "uio[5]": "state[1]",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_jmack2201",
      "address": 768,
      "title": "Sprite Bouncer with Looping Background Options",
      "author": "Jacob Mack",
      "description": "Sprite bouncer hardware that supports multiple background options and sprites.",
      "clock_hz": 25000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/jmack2201/tt08-jmack2201-demoscene",
      "commit": "29e212e8f2f88e7cfb0ae2cea542ae2c2ef10bcb",
      "pinout": {
        "ui[0]": "vga_control[0]",
        "ui[1]": "vga_control[1]",
        "ui[2]": "vga_control[2]",
        "ui[3]": "vga_control[3]",
        "ui[4]": "vga_control[4]",
        "ui[5]": "vga_control[5]",
        "ui[6]": "vga_control[6]",
        "ui[7]": "vga_control[7]",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSYNC",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSYNC",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_johshoff_metaballs",
      "address": 299,
      "title": "Metaballs",
      "author": "Johannes Hoff",
      "description": "You can't prove it's not metaballs",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/johshoff/tt08-metaballs",
      "commit": "ce37dd6b8c13ac1706fc06b203f6f3a7e497624f",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R[1]",
        "uo[1]": "G[1]",
        "uo[2]": "B[1]",
        "uo[3]": "vsync",
        "uo[4]": "R[0]",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_jp_cd101_saw",
      "address": 391,
      "title": "KCH CD101 Saw Synth",
      "author": "Johannes Pfau",
      "description": "Fork of the KCH CD101 Synth Generating Saw Waves",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jpf91/cd101-tt-saw",
      "commit": "e2e3556d054d87564bbfd80b7f4744526012b1e3",
      "pinout": {
        "ui[0]": "Trigger",
        "ui[1]": "SPI CLK",
        "ui[2]": "SPI MOSI",
        "ui[3]": "SPI nSS",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Audio Data",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_juarez_jimenez",
      "address": 871,
      "title": "an lfsr with synaptic neurons (excitatory or inhibitatory)",
      "author": "kai juarez-jimenez",
      "description": "each bit edge in the LFSR will mimic synaptic input that either excites / inhibits the next \u201cneuron\u201d , shwoing behaviors similar to how synapses manage signal in nns.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/kjuarezj/tt09-ece110-juarez-jimenez",
      "commit": "a78533955d26358a3136324aa155b07907903128",
      "pinout": {
        "ui[0]": "LFSR Seed Bit 0",
        "ui[1]": "LFSR Seed Bit 1",
        "ui[2]": "LFSR Seed Bit 2",
        "ui[3]": "LFSR Seed Bit 3",
        "ui[4]": "LFSR Seed Bit 4",
        "ui[5]": "LFSR Seed Bit 5",
        "ui[6]": "LFSR Seed Bit 6",
        "ui[7]": "LFSR Seed Bit 7",
        "uo[0]": "LFSR Output Bit 0",
        "uo[1]": "LFSR Output Bit 1",
        "uo[2]": "LFSR Output Bit 2",
        "uo[3]": "LFSR Output Bit 3",
        "uo[4]": "LFSR Output Bit 4",
        "uo[5]": "LFSR Output Bit 5",
        "uo[6]": "LFSR Output Bit 6",
        "uo[7]": "LFSR Output Bit 7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_jun1okamura_test0",
      "address": 387,
      "title": "7-segment with LFSR",
      "author": "Jun-ichi OKAMURA",
      "description": "TEST 7-segment/LFSR",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jun1okamura/tt10_um_jun1okamura",
      "commit": "d1acda6743f916cddbb2527401cb82aa6d0bf1a6",
      "pinout": {
        "ui[0]": "sel0",
        "ui[1]": "sel1",
        "ui[2]": "compare bit 13",
        "ui[3]": "compare bit 14",
        "ui[4]": "compare bit 15",
        "ui[5]": "compare bit 16",
        "ui[6]": "compare bit 17",
        "ui[7]": "compare bit 18",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "dot",
        "uio[0]": "counter bit 0",
        "uio[1]": "counter bit 1",
        "uio[2]": "counter bit 2",
        "uio[3]": "counter bit 3",
        "uio[4]": "counter bit 4",
        "uio[5]": "counter bit 5",
        "uio[6]": "counter bit 6",
        "uio[7]": "counter bit 7"
      }
    },
    {
      "macro": "tt_um_kailinsley",
      "address": 6,
      "title": "Dynamic Threshold Leaky Integrate-and-Fire",
      "author": "Kai Linsley",
      "description": "Leaky Integrate-and-Fire model simulating a spiking biological neuron",
      "clock_hz": 1000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/kalinsley/tt09-verilog",
      "commit": "eb66fb049d318d76450295e60daf90bf7d94f8d6",
      "pinout": {
        "ui[0]": "Input 1",
        "ui[1]": "Input 2",
        "ui[2]": "Input 3",
        "ui[3]": "Input 4",
        "ui[4]": "Input 5",
        "ui[5]": "Input 6",
        "ui[6]": "Input 7",
        "ui[7]": "Input 8",
        "uo[0]": "Output 1",
        "uo[1]": "Output 2",
        "uo[2]": "Output 3",
        "uo[3]": "Output 4",
        "uo[4]": "Output 5",
        "uo[5]": "Output 6",
        "uo[6]": "Output 7",
        "uo[7]": "Output 8",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_kapilan_alarm",
      "address": 140,
      "title": "Alarm Clock",
      "author": "Kapilan Karunakaran",
      "description": "A simple alarm clock",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/gmkapilan/tt08-alarmclock",
      "commit": "6749ac30d31db13cc560a61eb135c7a48b823f45",
      "pinout": {
        "ui[0]": "alarm_hours[0]",
        "ui[1]": "alarm_hours[1]",
        "ui[2]": "alarm_hours[2]",
        "ui[3]": "alarm_hours[3]",
        "ui[4]": "alarm_hours[4]",
        "ui[5]": "alarm_minutes[0]",
        "ui[6]": "alarm_minutes[1]",
        "ui[7]": "alarm_minutes[2]",
        "uo[0]": "hours[0]",
        "uo[1]": "hours[1]",
        "uo[2]": "hours[2]",
        "uo[3]": "hours[3]",
        "uo[4]": "hours[4]",
        "uo[5]": "minutes[0]",
        "uo[6]": "minutes[1]",
        "uo[7]": "minutes[2]",
        "uio[0]": "alarm_minutes[3]",
        "uio[1]": "alarm_minutes[4]",
        "uio[2]": "alarm_minutes[5]",
        "uio[3]": "",
        "uio[4]": "minutes[3]",
        "uio[5]": "minutes[4]",
        "uio[6]": "minutes[5]",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_kashmaster_carryskip",
      "address": 428,
      "title": "8-bit-CARRY_SKIP",
      "author": "Aaquil Kasham, Temiloluwa Omomuwasan",
      "description": "8 bit input adder",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/thekashmasher/CarSkipAdd",
      "commit": "321db4b65f74ed7017eec03c7ed950ad04ed9bfb",
      "pinout": {
        "ui[0]": "a[0]",
        "ui[1]": "a[1]",
        "ui[2]": "a[2]",
        "ui[3]": "a[3]",
        "ui[4]": "a[4]",
        "ui[5]": "a[5]",
        "ui[6]": "a[6]",
        "ui[7]": "a[7]",
        "uio[0]": "b[0]",
        "uio[1]": "b[1]",
        "uio[2]": "b[2]",
        "uio[3]": "b[3]",
        "uio[4]": "b[4]",
        "uio[5]": "b[5]",
        "uio[6]": "b[6]",
        "uio[7]": "b[7]",
        "uo[0]": "sum[0]",
        "uo[1]": "sum[1]",
        "uo[2]": "sum[2]",
        "uo[3]": "sum[3]",
        "uo[4]": "sum[4]",
        "uo[5]": "sum[5]",
        "uo[6]": "sum[6]",
        "uo[7]": "sum[7]"
      }
    },
    {
      "macro": "tt_um_kb2ghz_xalu",
      "address": 783,
      "title": "4-bit minicomputer ALU",
      "author": "Mike McCann",
      "description": "this design provides basic arithmetic and logic functions",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/kb2ghz/tt_um_kb2ghz_xalu",
      "commit": "6c15857217bd40ae0933da728c792ea150fa438f",
      "pinout": {
        "ui[0]": "da0",
        "ui[1]": "da1",
        "ui[2]": "da2",
        "ui[3]": "da3",
        "ui[4]": "db0",
        "ui[5]": "db1",
        "ui[6]": "db2",
        "ui[7]": "db3",
        "uo[0]": "d0",
        "uo[1]": "d1",
        "uo[2]": "d2",
        "uo[3]": "d3",
        "uo[4]": "co_left",
        "uo[5]": "co_right",
        "uo[6]": "EQU",
        "uo[7]": "ZERO",
        "uio[0]": "NEG_ZERO",
        "uio[1]": "ci_left",
        "uio[2]": "ci_right",
        "uio[3]": "COM",
        "uio[4]": "F0",
        "uio[5]": "F1",
        "uio[6]": "F2",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_kch_cd101",
      "address": 453,
      "title": "kch cd101",
      "author": "Johannes Pfau",
      "description": "KCH Things",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/kit-kch/cd101-tt",
      "commit": "9156e704ae664765c91c19ad30f6630b955647e9",
      "pinout": {
        "ui[0]": "Trigger",
        "ui[1]": "SPI CLK",
        "ui[2]": "SPI MOSI",
        "ui[3]": "SPI nSS",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Audio Data",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_kentrane_tinyspectrum",
      "address": 489,
      "title": "Tiny piano",
      "author": "Kenneth Petersen",
      "description": "A tiny musical note generator with 16 notes across 4 octaves and tremolo effect",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/kentrane/tt-tiny_spectrum",
      "commit": "7b35f27c1483a9c910dd5966c5f311f3b57fd118",
      "pinout": {
        "ui[0]": "Note select bit 0",
        "ui[1]": "Note select bit 1",
        "ui[2]": "Note select bit 2",
        "ui[3]": "Note select bit 3",
        "ui[4]": "Octave select bit 0",
        "ui[5]": "Octave select bit 1",
        "ui[6]": "Enable tone",
        "ui[7]": "Enable tremolo",
        "uo[0]": "Audio out",
        "uo[1]": "Note LED 1",
        "uo[2]": "Note LED 2",
        "uo[3]": "Note LED 3",
        "uo[4]": "Note LED 4",
        "uo[5]": "Note LED 5",
        "uo[6]": "Note LED 6",
        "uo[7]": "Note LED 7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_keszocze_ssmcl",
      "address": 403,
      "title": "SSMCl",
      "author": "Oliver Keszocze",
      "description": "Slow 3-bit unsigned multiplier",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/keszocze/tt10_SSMCl",
      "commit": "8b54f83bb10cbd5c9795a8176acbde5d6a29dcad",
      "pinout": {
        "ui[0]": "y[0]",
        "ui[1]": "y[1]",
        "ui[2]": "y[2]",
        "ui[3]": "x[0]",
        "ui[4]": "x[1]",
        "ui[5]": "x[2]",
        "ui[6]": "",
        "ui[7]": "start",
        "uo[0]": "product[0]",
        "uo[1]": "product[1]",
        "uo[2]": "product[2]",
        "uo[3]": "product[3]",
        "uo[4]": "product[4]",
        "uo[5]": "product[5]",
        "uo[6]": "",
        "uo[7]": "valid",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_kev_ma_matmult222",
      "address": 64,
      "title": "2-bit 2x2 Matrix Multiplier",
      "author": "Kevin Ma",
      "description": "multiples two 2-bit 2x2 matrices",
      "clock_hz": 1000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/KEV-MA/tt09",
      "commit": "53e5e700e67eaa9dda0ac06547dc74840393cae2",
      "pinout": {
        "ui[0]": "IN0",
        "ui[1]": "IN1",
        "ui[2]": "IN2",
        "ui[3]": "IN3",
        "ui[4]": "IN4",
        "ui[5]": "IN5",
        "ui[6]": "IN6",
        "ui[7]": "IN7",
        "uo[0]": "IO0",
        "uo[1]": "IO1",
        "uo[2]": "IO2",
        "uo[3]": "IO3",
        "uo[4]": "IO4",
        "uo[5]": "IO5",
        "uo[6]": "IO6",
        "uo[7]": "IO7",
        "uio[0]": "OUT8",
        "uio[1]": "OUT9",
        "uio[2]": "OUT10",
        "uio[3]": "OUT11",
        "uio[4]": "OUT12",
        "uio[5]": "OUT13",
        "uio[6]": "OUT14",
        "uio[7]": "OUT15"
      }
    },
    {
      "macro": "tt_um_koggestone_adder8",
      "address": 492,
      "title": "test_friday2",
      "author": "Niles Peter",
      "description": "class",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/nuv203/KoggeStoneAdder_TinyTapeout",
      "commit": "2af3f9e8e6ea413637c1ef34005808d9a0eef08b",
      "pinout": {
        "ui[0]": "a[0]",
        "ui[1]": "a[1]",
        "ui[2]": "a[2]",
        "ui[3]": "a[3]",
        "ui[4]": "a[4]",
        "ui[5]": "a[5]",
        "ui[6]": "a[6]",
        "ui[7]": "a[7]",
        "uo[0]": "sum[0]",
        "uo[1]": "sum[1]",
        "uo[2]": "sum[2]",
        "uo[3]": "sum[3]",
        "uo[4]": "sum[4]",
        "uo[5]": "sum[5]",
        "uo[6]": "sum[6]",
        "uo[7]": "sum[7]",
        "uio[0]": "b[0]",
        "uio[1]": "b[1]",
        "uio[2]": "b[2]",
        "uio[3]": "b[3]",
        "uio[4]": "b[4]",
        "uio[5]": "b[5]",
        "uio[6]": "b[6]",
        "uio[7]": "b[7]"
      }
    },
    {
      "macro": "tt_um_larva",
      "address": 836,
      "title": "LaRVa CPU",
      "author": "J. Arias",
      "description": "RISC-V CPU design",
      "clock_hz": 24000000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/jesari-git/tt10_larva-jarias",
      "commit": "11104117468e7e8d682175a46df602b9b742d44f",
      "pinout": {
        "ui[0]": "tck",
        "ui[1]": "tms",
        "ui[2]": "tdi",
        "ui[3]": "rxd",
        "ui[4]": "gpi[0]",
        "ui[5]": "gpi[1]",
        "ui[6]": "gpi[2]",
        "ui[7]": "gpi[3]",
        "uo[0]": "xbh",
        "uo[1]": "xlal",
        "uo[2]": "xlal",
        "uo[3]": "pwmout_tdo",
        "uo[4]": "txd",
        "uo[5]": "xhh",
        "uo[6]": "xoeb",
        "uo[7]": "xweb",
        "uio[0]": "xd[0]",
        "uio[1]": "xd[1]",
        "uio[2]": "xd[2]",
        "uio[3]": "xd[3]",
        "uio[4]": "xd[4]",
        "uio[5]": "xd[5]",
        "uio[6]": "xd[6]",
        "uio[7]": "xd[7]"
      }
    },
    {
      "macro": "tt_um_led_cipher",
      "address": 811,
      "title": "LED Bitserial Cipher",
      "author": "simon cipher",
      "description": "A bitserial implementation of the LED cipher",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Secure-Embedded-Systems/tt09-led-serial",
      "commit": "7f0038bc9a17a429dc585cfec4163ef0e82fa0f6",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_led_jellyant",
      "address": 467,
      "title": "ledtest",
      "author": "jellyant",
      "description": "Turns one output ON.",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jellyant/helloworld",
      "commit": "b9a4cf0dd4d0d8c14a0ad85903ad3bf792f488f9",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "A[0]",
        "uo[1]": "A[1]",
        "uo[2]": "A[2]",
        "uo[3]": "A[3]",
        "uo[4]": "A[4]",
        "uo[5]": "A[5]",
        "uo[6]": "A[6]",
        "uo[7]": "A[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_led_matrix_ayla_lin",
      "address": 361,
      "title": "32x8 LED Matrix Animation",
      "author": "Ayla Lin, Pavit Thakur, Lauren Low",
      "description": "An animation using a 32x8 matrix, switching between a beaver logo and the letters 'BWSI'",
      "clock_hz": 33000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ayla-lin/led-matrix",
      "commit": "e0c27bd05c048b394fa563ad8259de0976f230aa",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "spi_clk",
        "uo[1]": "spi_cs_n",
        "uo[2]": "spi_mosi",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_levenshtein",
      "address": 679,
      "title": "Fuzzy Search Engine",
      "author": "Peter N\u00f8rlund",
      "description": "A levenshtein based fuzzy search engine",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/peter-noerlund/tt09-levenshtein",
      "commit": "dff669e392420d7bc45f0c03fc0702d2f3946f2b",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "SPI SS#",
        "ui[5]": "SPI SCK",
        "ui[6]": "SPI MOSI",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "SPI MISO",
        "uio[0]": "SRAM QSPI CS",
        "uio[1]": "SRAM QSPI SIO0/MOSI",
        "uio[2]": "SRAM QSPI SIO1/MISO",
        "uio[3]": "SRAM QSPI SCK",
        "uio[4]": "SRAM QSPI SIO2",
        "uio[5]": "SRAM QSPI SIO3",
        "uio[6]": "SRAM QSPI CS2",
        "uio[7]": "SRAM QSPI CS3"
      }
    },
    {
      "macro": "tt_um_lfsr_stevej",
      "address": 883,
      "title": "Linear Feedback Shift Register",
      "author": "Steve Jenson <stevej@gmail.com>",
      "description": "An implementation of a Linear Feedback Shift Register for TT09",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/stevej/tt09-lfsr-stevej",
      "commit": "8cd502c8b73138fe0652e7cdf9cc4d417fe530de",
      "pinout": {
        "ui[0]": "Seed Bit 1",
        "ui[1]": "Seed Bit 2",
        "ui[2]": "Seed Bit 3",
        "ui[3]": "Seed Bit 4",
        "ui[4]": "Seed Bit 5",
        "ui[5]": "Seed Bit 6",
        "ui[6]": "Seed Bit 7",
        "ui[7]": "Seed Bit 8",
        "uo[0]": "LFSR Bit 1",
        "uo[1]": "LFSR Bit 2",
        "uo[2]": "LFSR Bit 3",
        "uo[3]": "LFSR Bit 4",
        "uo[4]": "LFSR Bit 5",
        "uo[5]": "LFSR Bit 6",
        "uo[6]": "LFSR Bit 7",
        "uo[7]": "LFSR Bit 8",
        "uio[0]": "Write Enable",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_liaf",
      "address": 68,
      "title": "A simple leaky integrate and fire neuron",
      "author": "Heather Knight",
      "description": "Simulation of lif neuron",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/hjade100/tt09-hjk",
      "commit": "300746d4fc2f01eab40abfd3bd6267f467939d14",
      "pinout": {
        "ui[0]": "Input current bit [0]",
        "ui[1]": "Input current bit [1]",
        "ui[2]": "Input current bit [2]",
        "ui[3]": "Input current bit [3]",
        "ui[4]": "Input current bit [4]",
        "ui[5]": "Input current bit [5]",
        "ui[6]": "Input current bit [6]",
        "ui[7]": "Input current bit [7]",
        "uo[0]": "State variable bit [0]",
        "uo[1]": "State variable bit [1]",
        "uo[2]": "State variable bit [2]",
        "uo[3]": "State variable bit [3]",
        "uo[4]": "State variable bit [4]",
        "uo[5]": "State variable bit [5]",
        "uo[6]": "State variable bit [6]",
        "uo[7]": "State variable bit [7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Spike bit"
      }
    },
    {
      "macro": "tt_um_lif1",
      "address": 17,
      "title": "STDP Circuit",
      "author": "Mariah Regalado",
      "description": "STDP Circuit using a trace to model exponential behavior",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mariahregalado1/tt09-regalado-ece110",
      "commit": "f3b1de81edb968df9dbba2adf97c11996c064600",
      "pinout": {
        "ui[0]": "Input Current Bit [0]",
        "ui[1]": "Input Current Bit [1]",
        "ui[2]": "Input Current Bit [2]",
        "ui[3]": "Input Current Bit [3]",
        "ui[4]": "Input Current Bit [4]",
        "ui[5]": "Input Current Bit [5]",
        "ui[6]": "Input Current Bit [6]",
        "ui[7]": "Input Current Bit [7]",
        "uo[0]": "State Variable bit[0]",
        "uo[1]": "State Variable bit[1]",
        "uo[2]": "State Variable bit[2]",
        "uo[3]": "State Variable bit[3]",
        "uo[4]": "State Variable bit[4]",
        "uo[5]": "State Variable bit[5]",
        "uo[6]": "State Variable bit[6]",
        "uo[7]": "State Variable bit[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Spike bit"
      }
    },
    {
      "macro": "tt_um_lif_ZB",
      "address": 80,
      "title": "Tutorial: Simple LIF Neuron",
      "author": "Zack Bethel",
      "description": "It simulates a LIF neuron",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/zack-bethel/tt09-verilog-zack-bethel",
      "commit": "fbe0f1ff20508c16bb40e49b2a50df229664b4e9",
      "pinout": {
        "ui[0]": "Input current bit[0]",
        "ui[1]": "Input current bit[1]",
        "ui[2]": "Input current bit[2]",
        "ui[3]": "Input current bit[3]",
        "ui[4]": "Input current bit[4]",
        "ui[5]": "Input current bit[5]",
        "ui[6]": "Input current bit[6]",
        "ui[7]": "Input current bit[7]",
        "uo[0]": "State variable bit[0]",
        "uo[1]": "State variable bit[1]",
        "uo[2]": "State variable bit[2]",
        "uo[3]": "State variable bit[3]",
        "uo[4]": "State variable bit[4]",
        "uo[5]": "State variable bit[5]",
        "uo[6]": "State variable bit[6]",
        "uo[7]": "State variable bit[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Spike Bit"
      }
    },
    {
      "macro": "tt_um_lif_clarencechan28",
      "address": 873,
      "title": "Perceptron",
      "author": "Clarence Chan",
      "description": "Hardware implementation of a single layer perceptron",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/clarencechan28/tt09-perceptron",
      "commit": "dee4a1bfd7335d370e50c31f7728b792ad3a1694",
      "pinout": {
        "ui[0]": "Input bit 1",
        "ui[1]": "Input bit 2",
        "ui[2]": "Input bit 3",
        "ui[3]": "Input bit 4",
        "ui[4]": "Input bit 5",
        "ui[5]": "Input bit 6",
        "ui[6]": "Input bit 7",
        "ui[7]": "Input bit 8",
        "uo[0]": "Perceptron class output",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "Weight bit 1",
        "uio[1]": "Weight bit 2",
        "uio[2]": "Weight bit 3",
        "uio[3]": "Weight bit 4",
        "uio[4]": "Weight bit 5",
        "uio[5]": "Weight bit 6",
        "uio[6]": "Weight bit 7",
        "uio[7]": "Weight bit 8"
      }
    },
    {
      "macro": "tt_um_lif_network_MR",
      "address": 70,
      "title": "Leaky Neuron Network",
      "author": "Matthew Randall",
      "description": "makes a leaky neuron network",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MatthewRandall10/tt09-MattRandall_ChipDesign",
      "commit": "dcb75181ceeff66e54d566f861f9e73fd49ceac5",
      "pinout": {
        "ui[0]": "input 1",
        "ui[1]": "input 2",
        "ui[2]": "input 3",
        "ui[3]": "input 4",
        "ui[4]": "input 5",
        "ui[5]": "input 6",
        "ui[6]": "input 7",
        "ui[7]": "input 8",
        "uo[0]": "output 1",
        "uo[1]": "output2",
        "uo[2]": "output3",
        "uo[3]": "output4",
        "uo[4]": "output5",
        "uo[5]": "output6",
        "uo[6]": "output7",
        "uo[7]": "output8",
        "uio[0]": "input/output 1",
        "uio[1]": "input/output 2",
        "uio[2]": "input/output 3",
        "uio[3]": "input/output 4",
        "uio[4]": "input/output 5",
        "uio[5]": "input/output 6",
        "uio[6]": "input/output 7",
        "uio[7]": "input/output 8"
      }
    },
    {
      "macro": "tt_um_lif_tk",
      "address": 867,
      "title": "LIF on a Ring Topology",
      "author": "Taylor Kergan",
      "description": "LIF neurons connected in a ring that displays different firing patterns.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/kergsy/tt09-ece-210-tk",
      "commit": "58bab1ae57b242b5579596cee01ed5357ee3915b",
      "pinout": {
        "ui[0]": "Pattern select bit 0 (LSB)",
        "ui[1]": "Pattern select bit 1",
        "ui[2]": "Pattern select bit 2 (MSB)",
        "ui[3]": "Base current scaling bit 0 (LSB)",
        "ui[4]": "Base current scaling bit 1",
        "ui[5]": "Base current scaling bit 2",
        "ui[6]": "Base current scaling bit 3",
        "ui[7]": "Base current scaling bit 4 (MSB)",
        "uo[0]": "Spike output from neuron 0",
        "uo[1]": "Spike output from neuron 1",
        "uo[2]": "Spike output from neuron 2",
        "uo[3]": "Spike output from neuron 3",
        "uo[4]": "Spike output from neuron 4",
        "uo[5]": "Spike output from neuron 5",
        "uo[6]": "Spike output from neuron 6",
        "uo[7]": "Spike output from neuron 7",
        "uio[0]": "Coupling strength bit 0 (LSB)",
        "uio[1]": "Coupling strength bit 1",
        "uio[2]": "Coupling strength bit 2",
        "uio[3]": "Coupling strength bit 3",
        "uio[4]": "Coupling strength bit 4",
        "uio[5]": "Coupling strength bit 5",
        "uio[6]": "Coupling strength bit 6",
        "uio[7]": "Coupling strength bit 7 (MSB)"
      }
    },
    {
      "macro": "tt_um_lifn",
      "address": 590,
      "title": "Integrate-and-Fire Neuron Circuit",
      "author": "FNU Ashwine",
      "description": "A simple integrate-and-fire neuron model implemented in Verilog.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Ashwine-git/tt09-verilog-template",
      "commit": "75f29b41e996e88dd936b4d1ce62617f6c94bebc",
      "pinout": {
        "ui[0]": "Input current bit [0]",
        "ui[1]": "Input current bit [1]",
        "ui[2]": "Input current bit [2]",
        "ui[3]": "Input current bit [3]",
        "ui[4]": "Input current bit [4]",
        "ui[5]": "Input current bit [5]",
        "ui[6]": "Input current bit [6]",
        "ui[7]": "Input current bit [7]",
        "uo[0]": "State variable bit [0]",
        "uo[1]": "State variable bit [1]",
        "uo[2]": "State variable bit [2]",
        "uo[3]": "State variable bit [3]",
        "uo[4]": "State variable bit [4]",
        "uo[5]": "State variable bit [5]",
        "uo[6]": "State variable bit [6]",
        "uo[7]": "State variable bit [7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Spike bit"
      }
    },
    {
      "macro": "tt_um_log_afpm",
      "address": 463,
      "title": "16-bit Logarithmic Approximate Floating Point Multiplier",
      "author": "Anwesh Rao, B S Gurucharan, Shreyas M Iliger, Tushar M, Shylashree N, RV College of Engineering",
      "description": "A 16-bit floating-point multiplier utilizing logarithmic approximation to achieve fast and power-efficient floating-point multiplication with reduced hardware.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE-Shylashree/TT10_LogAFPM-16",
      "commit": "77e613cf8b75eccd71cb9875876d41c77cfd6126",
      "pinout": {
        "ui[0]": "A[0]/A[8]",
        "ui[1]": "A[1]/A[9]",
        "ui[2]": "A[2]/A[10]",
        "ui[3]": "A[3]/A[11]",
        "ui[4]": "A[4]/A[12]",
        "ui[5]": "A[5]/A[13]",
        "ui[6]": "A[6]/A[14]",
        "ui[7]": "A[7]/A[15]",
        "uo[0]": "P[0]/P[8]",
        "uo[1]": "P[1]/P[9]",
        "uo[2]": "P[2]/P[10]",
        "uo[3]": "P[3]/P[11]",
        "uo[4]": "P[4]/P[12]",
        "uo[5]": "P[5]/P[13]",
        "uo[6]": "P[6]/P[14]",
        "uo[7]": "P[7]/P[15]",
        "uio[0]": "B[0]/B[8]",
        "uio[1]": "B[1]/B[9]",
        "uio[2]": "B[2]/B[10]",
        "uio[3]": "B[3]/B[11]",
        "uio[4]": "B[4]/B[12]",
        "uio[5]": "B[5]/B[13]",
        "uio[6]": "B[6]/B[14]",
        "uio[7]": "B[7]/B[15]"
      }
    },
    {
      "macro": "tt_um_lrc_stevej",
      "address": 526,
      "title": "LRC - Longitudinal Redundancy Check generator",
      "author": "Steve Jenson <stevej@gmail.com>",
      "description": "LRC implementation for Tiny Tapeout 09",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/stevej/tt09-lrc-stevej",
      "commit": "ba3832d1f5a73825f1099dbf5da0c422d126bbad",
      "pinout": {
        "ui[0]": "Input Bit 0",
        "ui[1]": "Input Bit 1",
        "ui[2]": "Input Bit 2",
        "ui[3]": "Input Bit 3",
        "ui[4]": "Input Bit 4",
        "ui[5]": "Input Bit 5",
        "ui[6]": "Input Bit 6",
        "ui[7]": "Input Bit 7",
        "uo[0]": "Output Bit 0",
        "uo[1]": "Output Bit 1",
        "uo[2]": "Output Bit 2",
        "uo[3]": "Output Bit 3",
        "uo[4]": "Output Bit 4",
        "uo[5]": "Output Bit 5",
        "uo[6]": "Output Bit 6",
        "uo[7]": "Output Bit 7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_lsnn_hschweig",
      "address": 72,
      "title": "Neuromorphic Hardware for SNN LSTM",
      "author": "Hunter Schweiger",
      "description": "Efficient neuromorphic hardware implementation of a Leaky Spike Neural Network (LSNN) with adaptive threshold and refractory period",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/hschweiger15/tt09-ECE-210",
      "commit": "7c9642c36b04f0c3f99ca97dafdb6d6969633dd3",
      "pinout": {
        "ui[0]": "Input current bit [0]",
        "ui[1]": "Input current bit [1]",
        "ui[2]": "Input current bit [2]",
        "ui[3]": "Input current bit [3]",
        "ui[4]": "Input current bit [4]",
        "ui[5]": "Input current bit [5]",
        "ui[6]": "Input current bit [6]",
        "ui[7]": "Input current bit [7]",
        "uo[0]": "State variable bit [0]",
        "uo[1]": "State variable bit [1]",
        "uo[2]": "State variable bit [2]",
        "uo[3]": "State variable bit [3]",
        "uo[4]": "State variable bit [4]",
        "uo[5]": "State variable bit [5]",
        "uo[6]": "State variable bit [6]",
        "uo[7]": "State variable bit [7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Spike bit [7]"
      }
    },
    {
      "macro": "tt_um_luke_clock",
      "address": 401,
      "title": "TT10_Luke_Clock",
      "author": "Luca Pezzarossa",
      "description": "A VGA based binary clock",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/lucapezza/tt10_luke_clock",
      "commit": "65ce25086080c18286ab8e9ca047be25f8d88df2",
      "pinout": {
        "ui[0]": "select time clock source [bit 0] (switch)",
        "ui[1]": "select time clock source [bit 1] (switch)",
        "ui[2]": "time clock 1Hz",
        "ui[3]": "time clock 32768Hz",
        "ui[4]": "plus (button)",
        "ui[5]": "minus (button)",
        "ui[6]": "select mode [bit 0] (switch)",
        "ui[7]": "select mode [bit 1] (switch)",
        "uo[0]": "red [bit 1]",
        "uo[1]": "green [bit 1]",
        "uo[2]": "blue [bit 1]",
        "uo[3]": "vsync",
        "uo[4]": "red [bit 0]",
        "uo[5]": "green [bit 0]",
        "uo[6]": "blue [bit 0]",
        "uo[7]": "hsync",
        "uio[0]": "(debug output) tClk",
        "uio[1]": "(debug output) cntReg [bit 0]",
        "uio[2]": "(debug output) cntReg [bit 1]",
        "uio[3]": "(debug output) cntReg [bit 2]",
        "uio[4]": "(debug output) cntReg [bit 3]",
        "uio[5]": "(debug output) inDisplayArea",
        "uio[6]": "(debug output) modeReg [bit 0]",
        "uio[7]": "(debug output) modeReg [bit 1]"
      }
    },
    {
      "macro": "tt_um_mac",
      "address": 192,
      "title": "MAC",
      "author": "Mahaa Santeep G, Shylashree N, Ravish Aradhya H V, RV College Of Engineering, Sneha R V, PES University",
      "description": "Design and Implementation of MAC Unit Using Dadda Multiplier and Kogge-Stone Adder",
      "clock_hz": 100,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE/TT8-MAC",
      "commit": "f90a883b02084299de0579ecadd1ef1d24e1a9fb",
      "pinout": {
        "ui[0]": "ui_in[[0]",
        "ui[1]": "ui_in[[1]",
        "ui[2]": "ui_in[[2]",
        "ui[3]": "ui_in[[3]",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_in[0]",
        "uio[1]": "uio_in[1]",
        "uio[2]": "uio_in[2]",
        "uio[3]": "uio_in[3]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_matrix_mult",
      "address": 580,
      "title": "Basic Matrix-Vector Multiplication",
      "author": "Andy Ly",
      "description": "Basic matrix and vector multiplier that multiplies a 2x2 matrix with a 2x1 vector. Inputs are limited to 2 bit elements",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/andyly37/tt09-ECE-110",
      "commit": "3195590645a521b484b08d126533821148921365",
      "pinout": {
        "ui[0]": "Input bit [0] for matrix element 11",
        "ui[1]": "Input bit [1] for matrix element 11",
        "ui[2]": "Input bit [0] for matrix element 12",
        "ui[3]": "Input bit [1] for matrix element 12",
        "ui[4]": "Input bit [0] for matrix element 21",
        "ui[5]": "Input bit [1] for matrix element 21",
        "ui[6]": "Input bit [0] for matrix element 22",
        "ui[7]": "Input bit [1] for matrix element 22",
        "uo[0]": "Output bit [0] for output vector element 1",
        "uo[1]": "Output bit [1] for output vector element 1",
        "uo[2]": "Output bit [2] for output vector element 1",
        "uo[3]": "Output bit [3] for output vector element 1",
        "uo[4]": "Output bit [4] for output vector element 1",
        "uo[5]": "Output bit [0] for output vector element 2",
        "uo[6]": "Output bit [1] for output vector element 2",
        "uo[7]": "Output bit [2] for output vector element 2",
        "uio[0]": "Output bit [3] for output vector element 2",
        "uio[1]": "Output bit [4] for output vector element 2",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "Input bit [0] for input vector element 1",
        "uio[5]": "Input bit [1] for input vector element 1",
        "uio[6]": "Input bit [0] for input vector element 2",
        "uio[7]": "Input bit [1] for input vector element 2"
      }
    },
    {
      "macro": "tt_um_mattvenn_rgb_mixer",
      "address": 785,
      "title": "RGB Mixer demo5",
      "author": "Matt Venn",
      "description": "Zero to ASIC demo project",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/rubenet6/ruben",
      "commit": "3fc4308e1723e303ae8c98ca55e3b4f00ef63d1d",
      "pinout": {
        "ui[0]": "enc0 a",
        "ui[1]": "enc0 b",
        "ui[2]": "enc1 a",
        "ui[3]": "enc1 b",
        "ui[4]": "enc2 a",
        "ui[5]": "enc2 b",
        "ui[6]": "debug bit 0",
        "ui[7]": "debug bit 1",
        "uo[0]": "pwm0",
        "uo[1]": "pwm1",
        "uo[2]": "pwm2",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_mattvenn_spi_test",
      "address": 483,
      "title": "SPI test",
      "author": "Matt Venn",
      "description": "SPI test design",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/tt10-spi-test",
      "commit": "2402450bbf842f7e8b43500063469c455b00a776",
      "pinout": {
        "ui[0]": "cpol",
        "ui[1]": "cpha",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "spi_miso",
        "uio[4]": "spi_cs_n",
        "uio[5]": "spi_clk",
        "uio[6]": "spi_mosi",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_meriac_play_tune",
      "address": 200,
      "title": "Super Mario Tune on A Piezo Speaker",
      "author": "Milosch Meriac",
      "description": "Plays Super Mario Tune over a Piezo Speaker connected across uio_out[1:0]",
      "clock_hz": 100000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/meriac/tt08-play-tune",
      "commit": "e52439223ae5a0751ad0eabba0ff430d08c51e6c",
      "pinout": {
        "ui[0]": "input pin 0",
        "ui[1]": "input pin 1",
        "ui[2]": "input pin 2",
        "ui[3]": "input pin 3",
        "ui[4]": "input pin 4",
        "ui[5]": "input pin 5",
        "ui[6]": "input pin 6",
        "ui[7]": "input pin 7",
        "uo[0]": "ui[0]",
        "uo[1]": "ui[1]",
        "uo[2]": "ui[2]",
        "uo[3]": "ui[3]",
        "uo[4]": "ui[4]",
        "uo[5]": "ui[5]",
        "uo[6]": "ui[6]",
        "uo[7]": "ui[7]",
        "uio[0]": "piezo_speaker_p (uio_out[0])",
        "uio[1]": "piezo_speaker_n (uio_out[1])",
        "uio[2]": "GND",
        "uio[3]": "GND",
        "uio[4]": "GND",
        "uio[5]": "GND",
        "uio[6]": "GND",
        "uio[7]": "piezo_speaker_n (uio_out[7])"
      }
    },
    {
      "macro": "tt_um_michaelmcculloch_alu",
      "address": 592,
      "title": "Michaels Tiny Tapeout ALU",
      "author": "Michael McCulloch",
      "description": "Should work as a 2 6 bit input ALU, which then can choose from the RISCV ALU opcodes to select the operation which will be outputed in 8bit",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MichaelMcCulloch1/tt09-verilog-Michael-ALU",
      "commit": "0648e618dedc0d3d33b031926681e6615c1c4658",
      "pinout": {
        "ui[0]": "Bit 2 of ALU Input B",
        "ui[1]": "Bit 3 of ALU Input B",
        "ui[2]": "Bit 4 of ALU Input B",
        "ui[3]": "Bit 5 of ALU Input B",
        "ui[4]": "Bit 0 of ALU OpCode",
        "ui[5]": "Bit 1 of ALU Opcode",
        "ui[6]": "Bit 2 of ALU OpCode",
        "ui[7]": "Bit 3 of ALU OpCode",
        "uo[0]": "Bit 0 of ALU Output",
        "uo[1]": "Bit 1 of ALU Output",
        "uo[2]": "Bit 2 of ALU Output",
        "uo[3]": "Bit 3 of ALU Output",
        "uo[4]": "Bit 4 of ALU Output",
        "uo[5]": "Bit 5 of ALU Output",
        "uo[6]": "Bit 6 of ALU Output",
        "uo[7]": "Bit 7 of ALU Output",
        "uio[0]": "Bit 0 of ALU Input A",
        "uio[1]": "Bit 1 of ALU Input A",
        "uio[2]": "Bit 2 of ALU Input A",
        "uio[3]": "Bit 3 of ALU Input A",
        "uio[4]": "Bit 4 of ALU Input A",
        "uio[5]": "Bit 5 of ALU Input A",
        "uio[6]": "Bit 0 of ALU Input B",
        "uio[7]": "Bit 1 of ALU Input B"
      }
    },
    {
      "macro": "tt_um_mikegoelzer_7segmentbyte",
      "address": 81,
      "title": "7-Segment Byte Display",
      "author": "Mike Goelzer",
      "description": "Drives a single hex digit 7-segment display based on the value of a 1-byte input",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mikegoelzer/tinytapeoutverilog2024",
      "commit": "92e81c728fdb89318460290cb1e9db9d7fb59536",
      "pinout": {
        "ui[0]": "Byte to display on 7-segment display (rightmost / low order bit)",
        "ui[1]": "Byte to display on 7-segment display (next bit)",
        "ui[2]": "Byte to display on 7-segment display (next bit)",
        "ui[3]": "Byte to display on 7-segment display (next bit)",
        "ui[4]": "Byte to display on 7-segment display (next bit)",
        "ui[5]": "Byte to display on 7-segment display (next bit)",
        "ui[6]": "Byte to display on 7-segment display (next bit)",
        "ui[7]": "Byte to display on 7-segment display (leftmost / high order bit)",
        "uo[0]": "7-segment display (segment a)",
        "uo[1]": "7-segment display (segment b)",
        "uo[2]": "7-segment display (segment c)",
        "uo[3]": "7-segment display (segment d)",
        "uo[4]": "7-segment display (segment e)",
        "uo[5]": "7-segment display (segment f)",
        "uo[6]": "7-segment display (segment g)",
        "uo[7]": "",
        "uio[0]": "write enable (1=latch byte value on ui[7:0] and display it, 0=ignore ui[7:0] and keep displaying the current value)",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_monishvr_fifo",
      "address": 44,
      "title": "Synchronous FIFO",
      "author": "Monish V.R",
      "description": "It's a synchronous fifo which has 4 bit of width",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Monish-VR/CF-2024-TT10-02",
      "commit": "1d02860f92703158d46cd4b5ab68ed7495c17bb5",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "wr",
        "ui[3]": "rd",
        "ui[4]": "din[0]",
        "ui[5]": "din[1]",
        "ui[6]": "din[2]",
        "ui[7]": "din[3]",
        "uo[0]": "full",
        "uo[1]": "empty",
        "uo[2]": "dout[0]",
        "uo[3]": "dout[1]",
        "uo[4]": "dout[2]",
        "uo[5]": "dout[3]",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_moody_mimosa",
      "address": 706,
      "title": "Moody-mimosa",
      "author": "D. Levante-Schmidiger",
      "description": "Moody ASIC reacting to external stimuli",
      "clock_hz": 1000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/schda1/tt10-moody-mimosa",
      "commit": "0194a6dcba3b8caa68262346abd79c63ba66250e",
      "pinout": {
        "ui[0]": "TICKLE",
        "ui[1]": "PLAY_WITH",
        "ui[2]": "TALK_TO",
        "ui[3]": "CALM_DOWN",
        "ui[4]": "FEED",
        "ui[5]": "COOL",
        "ui[6]": "HOT",
        "ui[7]": "QUIET",
        "uo[0]": "SLEEPING",
        "uo[1]": "EATING",
        "uo[2]": "PLAYING",
        "uo[3]": "SMILING",
        "uo[4]": "BABBLING",
        "uo[5]": "KICKING_LEGS",
        "uo[6]": "DOING_NOTHING",
        "uo[7]": "CRYING",
        "uio[0]": "LOUD",
        "uio[1]": "BRIGHT",
        "uio[2]": "SPI_MISO",
        "uio[3]": "SPI_SCK",
        "uio[4]": "SPI_CS",
        "uio[5]": "SPI_MOSI",
        "uio[6]": "UART_TX",
        "uio[7]": "CLK_MODEL"
      }
    },
    {
      "macro": "tt_um_mp_lif_schor",
      "address": 495,
      "title": "mp_LIF_neuron",
      "author": "Andreas Schorer",
      "description": "Mixed precision Leaky integrate and fire (LIF) neuron",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/schorand/LIF_CORE",
      "commit": "a623337cdc65904e3a2dfa15165f0badbd2c4b0c",
      "pinout": {
        "ui[0]": "w0",
        "ui[1]": "w1",
        "ui[2]": "w2",
        "ui[3]": "w3",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "spk_upper",
        "uo[1]": "spk_lower",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "ready",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_mroblesh",
      "address": 432,
      "title": "Frequency Encoder and Decoder",
      "author": "Miguel Robles",
      "description": "Simple implementation of an 8-bit frequency encoder/decoder for a 1 bit frequency channel",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mroblesh1/tt09-ece-110",
      "commit": "38103c87ac3e918a13c8f2b22fa8ea9fad19a7c1",
      "pinout": {
        "ui[0]": "Input frequency channel for decoder OR input bit for encoder [0]",
        "ui[1]": "Input encoder bit [1]",
        "ui[2]": "Input encoder bit [2]",
        "ui[3]": "Input encoder bit [3]",
        "ui[4]": "Input encoder bit [4]",
        "ui[5]": "Input encoder bit [5]",
        "ui[6]": "Input encoder bit [6]",
        "ui[7]": "Input encoder bit [7]",
        "uo[0]": "LSB output of decoder [0] OR output frequency channel for encoder",
        "uo[1]": "Output encoder bit [1]",
        "uo[2]": "Output encoder bit [2]",
        "uo[3]": "Output encoder bit [3]",
        "uo[4]": "Output encoder bit [4]",
        "uo[5]": "Output encoder bit [5]",
        "uo[6]": "Output encoder bit [6]",
        "uo[7]": "Output encoder bit [7]",
        "uio[0]": "Input selector bit to choose between encoder or decoder",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "Input configuration bit for encoder sample rate [0]",
        "uio[7]": "Input configuration bit for encoder sample rate [1]"
      }
    },
    {
      "macro": "tt_um_multiplier_group_1",
      "address": 622,
      "title": "Multiplier Group #1",
      "author": "Tiny Tapeout",
      "description": "Combined project to save space for ttihp25a",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "8eebd311ffea4b7ff41f6a0012c5362022455dff",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "sel0",
        "uio[1]": "sel1",
        "uio[2]": "sel2",
        "uio[3]": "sel3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_multiplier_group_2",
      "address": 624,
      "title": "Multiplier Group #2",
      "author": "Tiny Tapeout",
      "description": "Combined project to save space for ttihp25a",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "8eebd311ffea4b7ff41f6a0012c5362022455dff",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "sel0",
        "uio[1]": "sel1",
        "uio[2]": "sel2",
        "uio[3]": "sel3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_multiplier_group_3",
      "address": 626,
      "title": "Multiplier Group #3",
      "author": "Tiny Tapeout",
      "description": "Combined project to save space for ttihp25a",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "9cacfd860ff7bab89ad475687b4a2fd8c15b17d6",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "sel0",
        "uio[1]": "sel1",
        "uio[2]": "sel2",
        "uio[3]": "sel3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_multiplier_tt10",
      "address": 487,
      "title": "Vedic multiplier",
      "author": "Vivek Chiranjit",
      "description": "8-bit binary unsigned multiplier",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ChiranjitPatel/tt10-multiplier_UART_SPI",
      "commit": "009af0c6355df2d290fabad0c8dd5eb1e583795f",
      "pinout": {
        "ui[0]": "uin",
        "ui[1]": "uin",
        "ui[2]": "uin",
        "ui[3]": "uin",
        "ui[4]": "uin",
        "ui[5]": "uin",
        "ui[6]": "uin",
        "ui[7]": "uin",
        "uo[0]": "uo",
        "uo[1]": "uo",
        "uo[2]": "uo",
        "uo[3]": "uo",
        "uo[4]": "uo",
        "uo[5]": "uo",
        "uo[6]": "uo",
        "uo[7]": "uo",
        "uio[0]": "uio",
        "uio[1]": "uio",
        "uio[2]": "uio",
        "uio[3]": "uio",
        "uio[4]": "uio",
        "uio[5]": "uio",
        "uio[6]": "uio",
        "uio[7]": "uio"
      }
    },
    {
      "macro": "tt_um_murmann_group",
      "address": 69,
      "title": "Decimation Filter for Incremental and Regular Delta-Sigma Modulators",
      "author": "Andrea Murillo Martinez & Jaeden Chang",
      "description": "Decimation filter that efficiently reduces oversampled data from incremental and regular delta-sigma modulators, while preserving signal accuaracy.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/bmurmann/tt09-decimation_filter",
      "commit": "70e734d162f0133c7204ff7ddcca2ef7760b7e6a",
      "pinout": {
        "ui[0]": "X",
        "ui[1]": "type_dec",
        "ui[2]": "global_reset",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "decimation_output[8]",
        "uo[1]": "decimation_output[9]",
        "uo[2]": "decimation_output[10]",
        "uo[3]": "decimation_output[11]",
        "uo[4]": "decimation_output[12]",
        "uo[5]": "decimation_output[13]",
        "uo[6]": "decimation_output[14]",
        "uo[7]": "decimation_output[15]",
        "uio[0]": "decimation_output[0]",
        "uio[1]": "decimation_output[1]",
        "uio[2]": "decimation_output[2]",
        "uio[3]": "decimation_output[3]",
        "uio[4]": "decimation_output[4]",
        "uio[5]": "decimation_output[5]",
        "uio[6]": "decimation_output[6]",
        "uio[7]": "decimation_output[7]"
      }
    },
    {
      "macro": "tt_um_my_elevator",
      "address": 809,
      "title": "Elevator Design",
      "author": "Jocelyn Zhu",
      "description": "Simulation of an elevator design on a digital clock display.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jxcelynzhu/Elevator_verilog",
      "commit": "5a25fc3e8bb861cf7e1a8126d26d7fe8d46ce864",
      "pinout": {
        "ui[0]": "Switch 0",
        "ui[1]": "Switch 1",
        "ui[2]": "Switch 2",
        "ui[3]": "Switch 3",
        "ui[4]": "Switch 4",
        "ui[5]": "Switch 5",
        "ui[6]": "Switch 6",
        "ui[7]": "Switch 7",
        "uo[0]": "Segment A",
        "uo[1]": "Segment B",
        "uo[2]": "Segment C",
        "uo[3]": "Segment D",
        "uo[4]": "Segment E",
        "uo[5]": "Segment F",
        "uo[6]": "Segment G",
        "uo[7]": "A dot that appears during the IDLE state",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_neural_navigators",
      "address": 166,
      "title": "Neural Net ASIC",
      "author": "Neural Navigators: Linyang Lee, Harsha Ganta, Stephanie Shen, William Li, Kiana Dai",
      "description": "MNIST Handwriting prediction on a neural network",
      "clock_hz": 10000000,
      "tiles": "4x2",
      "analog_pins": [],
      "repo": "https://github.com/piboi/tt08-nn",
      "commit": "64c3b3ba55093b06d14084689caf6334e73bceba",
      "pinout": {
        "ui[0]": "ui[0]",
        "ui[1]": "ui[1]",
        "ui[2]": "ui[2]",
        "ui[3]": "ui[3]",
        "ui[4]": "ui[4]",
        "ui[5]": "ui[5]",
        "ui[6]": "ui[6]",
        "ui[7]": "ui[7]",
        "uo[0]": "uo[0]",
        "uo[1]": "uo[1]",
        "uo[2]": "uo[2]",
        "uo[3]": "uo[3]",
        "uo[4]": "uo[4]",
        "uo[5]": "uo[5]",
        "uo[6]": "uo[6]",
        "uo[7]": "uo[7]",
        "uio[0]": "uio[0]",
        "uio[1]": "uio[1]",
        "uio[2]": "uio[2]",
        "uio[3]": "uio[3]",
        "uio[4]": "uio[4]",
        "uio[5]": "uio[5]",
        "uio[6]": "uio[6]",
        "uio[7]": "uio[7]"
      }
    },
    {
      "macro": "tt_um_nithishreddykvs",
      "address": 46,
      "title": "Pulse Width Modulation",
      "author": "Nithish Reddy KVS",
      "description": "This Verilog module generates a Pulse Width Modulation (PWM) signal with adjustable duty cycle. It utilizes a 50MHz clock input and debounced buttons to increase or decrease the duty cycle, producing a 5MHz PWM output for various applications like motor speed control or LED brightness adjustment.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/nithishreddykvs/CF-2024-TT10-05",
      "commit": "3e955160e184e36247d0f0d8270c668639c5bfa2",
      "pinout": {
        "ui[0]": "clk",
        "ui[1]": "ui_in[0]",
        "ui[2]": "ui_in[1]",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "PWM_OUT",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_nomuwill",
      "address": 512,
      "title": "16 Bit Izhikevich Neuron",
      "author": "Noah Williams",
      "description": "Izhikevich neuron model with 16 bit arithmetic.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/nomuwill/tt_um_nomuwill",
      "commit": "0dd7f880c31f9ecddc47d1d426ed57a4e004f18e",
      "pinout": {
        "ui[0]": "Input current bit [0]",
        "ui[1]": "Input current bit [1]",
        "ui[2]": "Input current bit [2]",
        "ui[3]": "Input current bit [3]",
        "ui[4]": "Input current bit [4]",
        "ui[5]": "Input current bit [5]",
        "ui[6]": "Input current bit [6]",
        "ui[7]": "Input current bit [7]",
        "uo[0]": "State variable bit [0]",
        "uo[1]": "State variable bit [1]",
        "uo[2]": "State variable bit [2]",
        "uo[3]": "State variable bit [3]",
        "uo[4]": "State variable bit [4]",
        "uo[5]": "State variable bit [5]",
        "uo[6]": "State variable bit [6]",
        "uo[7]": "State variable bit [7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Spike bit"
      }
    },
    {
      "macro": "tt_um_nvious_graphics",
      "address": 849,
      "title": "nVious Graphics",
      "author": "James Ross",
      "description": "Submission for VGA Demoscene",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jar/tt08_nvious_graphics",
      "commit": "c5dcc60dbb3f29fa8e7ee46fc099eb3bfcc370c5",
      "pinout": {
        "ui[0]": "Segment A",
        "ui[1]": "Segment B",
        "ui[2]": "Segment C",
        "ui[3]": "Segment D",
        "ui[4]": "Segment E",
        "ui[5]": "Segment F",
        "ui[6]": "Segment G",
        "ui[7]": "Segment H",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_nyan",
      "address": 130,
      "title": "nyan",
      "author": "Peter N\u00f8rlund",
      "description": "Nyan Cat",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/peter-noerlund/tt08-nyan",
      "commit": "17e4b17efffa07ba0b28ed237faf67cf5dd8567f",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSYNC",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSYNC",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "PWM output"
      }
    },
    {
      "macro": "tt_um_obriensp_jtag",
      "address": 385,
      "title": "JTAG TAP",
      "author": "Sean Patrick O'Brien",
      "description": "JTAG TAP with Boundary Scan",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/obriensp/tt10-spo-jtag",
      "commit": "f20dd0df92a531b8bd65b4569f76a26536db0cbe",
      "pinout": {
        "ui[0]": "output_mode",
        "ui[1]": "output_value[0]",
        "ui[2]": "output_value[1]",
        "ui[3]": "output_value[2]",
        "ui[4]": "output_value[3]",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "seven_segment",
        "uo[1]": "seven_segment",
        "uo[2]": "seven_segment",
        "uo[3]": "seven_segment",
        "uo[4]": "seven_segment",
        "uo[5]": "seven_segment",
        "uo[6]": "seven_segment",
        "uo[7]": "seven_segment",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "TCK",
        "uio[5]": "TMS",
        "uio[6]": "TDI",
        "uio[7]": "TDO"
      }
    },
    {
      "macro": "tt_um_ole_moller_priority_encoder_to_7_segment_decoder",
      "address": 96,
      "title": "Priority-encoder",
      "author": "Ole Henrik Moller",
      "description": "8-bit priority encoder to decimal 7-segment code",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ole-moller/Priority_encoder",
      "commit": "ec678a1caed6440f1b787021852a5e430215dbbb",
      "pinout": {
        "ui[0]": "data[0]",
        "ui[1]": "data[1]",
        "ui[2]": "data[2]",
        "ui[3]": "data[3]",
        "ui[4]": "data[4]",
        "ui[5]": "data[5]",
        "ui[6]": "data[6]",
        "ui[7]": "data[7]",
        "uo[0]": "segments[0]",
        "uo[1]": "segments[1]",
        "uo[2]": "segments[2]",
        "uo[3]": "segments[3]",
        "uo[4]": "segments[4]",
        "uo[5]": "segments[5]",
        "uo[6]": "segments[6]",
        "uo[7]": "no_data",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_patater_demokit",
      "address": 837,
      "title": "Patater Demo Kit Waggling Rainbow on a Chip",
      "author": "Jaeden Amero",
      "description": "A 6-bit Waggling Rainbow demo",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Patater/tt08-demokit",
      "commit": "26890e3157ffa460ef6ff13103085089c78c9643",
      "pinout": {
        "ui[0]": "DUAL_EN",
        "ui[1]": "HWAVE_EN",
        "ui[2]": "P0_OFF_0",
        "ui[3]": "P0_OFF_1",
        "ui[4]": "P0_OFF_2",
        "ui[5]": "P1_OFF_0",
        "ui[6]": "P1_OFF_1",
        "ui[7]": "P1_OFF_2",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_pdm_correlator_arghunter",
      "address": 243,
      "title": "PDM Correlator",
      "author": "Armaan Gomes",
      "description": "A chip that performs either cross or auto correlatiion on PDM microphone inputs",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/arghunter/Customizable-PDM-Cross-Correlator-ASIC",
      "commit": "afff7fd117bc7b414bece84b478138da168af41a",
      "pinout": {
        "ui[0]": "Bit Clock (3.072 Mhz)",
        "ui[1]": "LR Clock (48Khz)",
        "ui[2]": "PDM Input Mics 0,1",
        "ui[3]": "PDM Input Mics 2,3",
        "ui[4]": "PDM Input Mics 4,5",
        "ui[5]": "PDM Input Mics 6,7",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "PCM Out Mic 0",
        "uo[1]": "PCM Out Mic 1",
        "uo[2]": "PCM Out Mic 2",
        "uo[3]": "PCM Out Mic 3",
        "uo[4]": "PCM Out Mic 4",
        "uo[5]": "PCM Out Mic 5",
        "uo[6]": "PCM Out Mic 6",
        "uo[7]": "PCM Out Mic 7",
        "uio[0]": "Delay Select 0",
        "uio[1]": "Delay Select 1",
        "uio[2]": "Delay Select 2",
        "uio[3]": "Delay Select 3",
        "uio[4]": "Delay Select 4",
        "uio[5]": "Beamformed PCM Output",
        "uio[6]": "Mic Clock",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_pdm_pitch_filter_arghunter",
      "address": 241,
      "title": "PDM Pitch Filter",
      "author": "Armaan Gomes",
      "description": "It uses a moving average filter and decimator to filter out a specific frequency",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/arghunter/Customizable-PDM-Pitch-Filter-ASIC",
      "commit": "46eff68076441968f33cb253346c14714afb6984",
      "pinout": {
        "ui[0]": "Bit Clock (3.072 Mhz)",
        "ui[1]": "LR Clock (48Khz)",
        "ui[2]": "PDM Input Mics 0,1",
        "ui[3]": "PDM Input Mics 2,3",
        "ui[4]": "PDM Input Mics 4,5",
        "ui[5]": "PDM Input Mics 6,7",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "PCM Out Mic 0",
        "uo[1]": "PCM Out Mic 1",
        "uo[2]": "PCM Out Mic 2",
        "uo[3]": "PCM Out Mic 3",
        "uo[4]": "PCM Out Mic 4",
        "uo[5]": "PCM Out Mic 5",
        "uo[6]": "PCM Out Mic 6",
        "uo[7]": "PCM Out Mic 7",
        "uio[0]": "Delay Select 0",
        "uio[1]": "Delay Select 1",
        "uio[2]": "Delay Select 2",
        "uio[3]": "Delay Select 3",
        "uio[4]": "Delay Select 4",
        "uio[5]": "Beamformed PCM Output",
        "uio[6]": "Mic Clock",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_perceptron_mtchun",
      "address": 482,
      "title": "Perceptron Neuron",
      "author": "Michael Chun",
      "description": "Makes a NAND gate with a perceptron neuron",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mtchun1/tt09-ECE210_mtchun",
      "commit": "811479f9aecc32fca0079071351d9d7638acb546",
      "pinout": {
        "ui[0]": "Input current bit [0]",
        "ui[1]": "Input current bit [1]",
        "ui[2]": "Input current bit [2]",
        "ui[3]": "Input current bit [3]",
        "ui[4]": "Input current bit [4]",
        "ui[5]": "Input current bit [5]",
        "ui[6]": "Input current bit [6]",
        "ui[7]": "Input current bit [7]",
        "uo[0]": "State variable bit [0]",
        "uo[1]": "State variable bit [1]",
        "uo[2]": "State variable bit [2]",
        "uo[3]": "State variable bit [3]",
        "uo[4]": "State variable bit [4]",
        "uo[5]": "State variable bit [5]",
        "uo[6]": "State variable bit [6]",
        "uo[7]": "State variable bit [7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Output bit"
      }
    },
    {
      "macro": "tt_um_pid_controller",
      "address": 737,
      "title": "PID Controller",
      "author": "Kilian Bender",
      "description": "Hardware implementation of a naive PID Controller",
      "clock_hz": 1000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/Zufallsgenerat0r/PIDcontroller",
      "commit": "f30d9f497962e0f787ea66ca0745a7d04e5f53b5",
      "pinout": {
        "ui[0]": "setpoint 0",
        "ui[1]": "setpoint 1",
        "ui[2]": "setpoint 2",
        "ui[3]": "setpoint 3",
        "ui[4]": "setpoint 4",
        "ui[5]": "setpoint 5",
        "ui[6]": "setpoint 6",
        "ui[7]": "setpoint 7",
        "uo[0]": "control_signal 0\"",
        "uo[1]": "control_signal 1",
        "uo[2]": "control_signal 2",
        "uo[3]": "control_signal 3",
        "uo[4]": "control_signal 4",
        "uo[5]": "control_signal 5",
        "uo[6]": "control_signal 6",
        "uo[7]": "control_signal 7",
        "uio[0]": "feedback 0",
        "uio[1]": "feedback 1",
        "uio[2]": "feedback 2",
        "uio[3]": "feedback 3",
        "uio[4]": "feedback 4",
        "uio[5]": "feedback 5",
        "uio[6]": "feedback 6",
        "uio[7]": "feedback 7"
      }
    },
    {
      "macro": "tt_um_prefix8",
      "address": 865,
      "title": "tiny-tapeout-8bit-GPTPrefixCircuit",
      "author": "Weihua Xiao",
      "description": "In this project, we use large language model to automatically create a totally-new prefix network-based high speed adder, for getting a good trade-off between PPA (power performance and area).",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/FCHXWH823/tt09-GPTPrefixCircuit",
      "commit": "061925b92380fc599673ecead8aaec22bf558d28",
      "pinout": {
        "ui[0]": "a[0]",
        "ui[1]": "a[1]",
        "ui[2]": "a[2]",
        "ui[3]": "a[3]",
        "ui[4]": "a[4]",
        "ui[5]": "a[5]",
        "ui[6]": "a[6]",
        "ui[7]": "a[7]",
        "uo[0]": "sum[0]",
        "uo[1]": "sum[1]",
        "uo[2]": "sum[2]",
        "uo[3]": "sum[3]",
        "uo[4]": "sum[4]",
        "uo[5]": "sum[5]",
        "uo[6]": "sum[6]",
        "uo[7]": "sum[7]",
        "uio[0]": "b[0]",
        "uio[1]": "b[1]",
        "uio[2]": "b[2]",
        "uio[3]": "b[3]",
        "uio[4]": "b[4]",
        "uio[5]": "b[5]",
        "uio[6]": "b[6]",
        "uio[7]": "b[7]"
      }
    },
    {
      "macro": "tt_um_program_counter_top_level",
      "address": 67,
      "title": "Test Design 1",
      "author": "Evan Armoogan",
      "description": "Test design, not sure what it does yet",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Evan-Armoogan/8BitCpuPC",
      "commit": "9f5bec3ffd028c36469f9db187899a9d6ba06053",
      "pinout": {
        "ui[0]": "in_0",
        "ui[1]": "in_1",
        "ui[2]": "in_2",
        "ui[3]": "in_3",
        "ui[4]": "in_4",
        "ui[5]": "in_5",
        "ui[6]": "in_6",
        "ui[7]": "in_7",
        "uo[0]": "out_0",
        "uo[1]": "out_1",
        "uo[2]": "out_2",
        "uo[3]": "out_3",
        "uo[4]": "out_4",
        "uo[5]": "out_5",
        "uo[6]": "out_6",
        "uo[7]": "out_7",
        "uio[0]": "bidir_0",
        "uio[1]": "bidir_1",
        "uio[2]": "bidir_2",
        "uio[3]": "bidir_3",
        "uio[4]": "bidir_4",
        "uio[5]": "bidir_5",
        "uio[6]": "bidir_6",
        "uio[7]": "bidir_7"
      }
    },
    {
      "macro": "tt_um_project_tt09",
      "address": 588,
      "title": "Basic LIF Neuron",
      "author": "stewedbeef",
      "description": "This is a basic LIF neuron",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/stewedbeef/tt09-verilog-template",
      "commit": "b4ed758ea5c4646e4233ae2eedde885b13ac5b99",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_project_tt10",
      "address": 50,
      "title": "Simple shift Reg",
      "author": "test",
      "description": "Simple shift Reg",
      "clock_hz": 1,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/fromafl/TT10_Verilog",
      "commit": "51c8eef60a2a4a9a94c5cd6e33fc7ef0ba08a4d9",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_in[0]",
        "uio[1]": "uio_in[1]",
        "uio[2]": "uio_in[2]",
        "uio[3]": "uio_in[3]",
        "uio[4]": "uio_in[4]",
        "uio[5]": "uio_in[5]",
        "uio[6]": "uio_in[6]",
        "uio[7]": "uio_in[7]"
      }
    },
    {
      "macro": "tt_um_purdue_socet_uart",
      "address": 650,
      "title": "SoCET UART with FIFO buffers",
      "author": "Miguel Isrrael Teran, Yashashwini Singh, Michael Li, Rafael Monteiro Martins Pinheiro, Vito Gamberini",
      "description": "General-purpose UART with hardware control flow and FIFO buffer capacity developed by Purdue's SoCET team",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/Purdue-SoCET/tt09-purdue-socet",
      "commit": "4bf02099598a4a54fb2e60d8afad1a03caeba237",
      "pinout": {
        "ui[0]": "rx",
        "ui[1]": "cts",
        "ui[2]": "Control[0]",
        "ui[3]": "Control[1]",
        "ui[4]": "Control[2]",
        "ui[5]": "Control[3]",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "tx",
        "uo[1]": "rts",
        "uo[2]": "err",
        "uo[3]": "tx_buffer_full",
        "uo[4]": "rx_buffer_empty",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "data[0]",
        "uio[1]": "data[1]",
        "uio[2]": "data[2]",
        "uio[3]": "data[3]",
        "uio[4]": "data[4]",
        "uio[5]": "data[5]",
        "uio[6]": "data[6]",
        "uio[7]": "data[7]"
      }
    },
    {
      "macro": "tt_um_pwm_top",
      "address": 881,
      "title": "Generador PWM multiproposito con frecuencia y ciclo de trabajo modulable",
      "author": "Marco V\u00e1zquez, Pa\u00fal Gonz\u00e1lez, Abimael Jimenez, UACJ",
      "description": "A PWM generator with a 6-bit input that allows the user to enter a denominator that divides the frequency. Using a pair of control inputs, we can increase or decrease the duty cycle of the modulated output by 10%.",
      "clock_hz": 5000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MarcoV09/ModularPWM_UACJ",
      "commit": "57adfea3938c8da19ecdb54873ab729d943c68e0",
      "pinout": {
        "ui[0]": "increase_duty",
        "ui[1]": "decrease_duty",
        "ui[2]": "divisor[0]",
        "ui[3]": "divisor[1]",
        "ui[4]": "divisor[2]",
        "ui[5]": "divisor[3]",
        "ui[6]": "divisor[4]",
        "ui[7]": "divisor[5]",
        "uo[0]": "pwm_out0",
        "uo[1]": "pwm_out1",
        "uo[2]": "pwm_out2",
        "uo[3]": "pwm_out3",
        "uo[4]": "pwm_out4",
        "uo[5]": "pwm_out5",
        "uo[6]": "pwm_out6",
        "uo[7]": "pwm_out7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_pyamnihc_dummy_counter",
      "address": 357,
      "title": "Dummy Counter",
      "author": "Chinmay",
      "description": "A 16-bit counter",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/pyamnihc/tt08-dummy-counter",
      "commit": "2b4d2edd0d25ae503f951a4ab55a79b607599c65",
      "pinout": {
        "ui[0]": "count_en",
        "ui[1]": "mult_en",
        "ui[2]": "m_a0",
        "ui[3]": "m_a1",
        "ui[4]": "m_a2",
        "ui[5]": "m_b0",
        "ui[6]": "m_b1",
        "ui[7]": "m_b2",
        "uo[0]": "b0",
        "uo[1]": "b1",
        "uo[2]": "b2",
        "uo[3]": "b3",
        "uo[4]": "b4",
        "uo[5]": "b5",
        "uo[6]": "b6",
        "uo[7]": "b7",
        "uio[0]": "b8",
        "uio[1]": "b9",
        "uio[2]": "b10",
        "uio[3]": "b11",
        "uio[4]": "b12",
        "uio[5]": "b13",
        "uio[6]": "b14",
        "uio[7]": "b15"
      }
    },
    {
      "macro": "tt_um_quarren42_demoscene_top",
      "address": 779,
      "title": "asic design is my passion",
      "author": "Nicholas Junker",
      "description": "baby's first asic - cheeky little text meme",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Quarren42/tt08_Quarren42_demoscene",
      "commit": "9c22f1b8e28ea984c139c0b1b73615e6966ec7cc",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ran_DanielZhu",
      "address": 781,
      "title": "Dice",
      "author": "ZHU QUANHAO",
      "description": "after you press the button\uff0c the system will generate a random number from 0-F",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/DanielZhu123/tt08-verilog-Ztemplate",
      "commit": "e46bad36bab6c22c058a5ada9067e1302cd45687",
      "pinout": {
        "ui[0]": "1",
        "ui[1]": "1",
        "ui[2]": "1",
        "ui[3]": "1",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "1",
        "uo[1]": "1",
        "uo[2]": "1",
        "uo[3]": "1",
        "uo[4]": "1",
        "uo[5]": "1",
        "uo[6]": "1",
        "uo[7]": "1",
        "uio[0]": "1",
        "uio[1]": "1",
        "uio[2]": "1",
        "uio[3]": "1",
        "uio[4]": "1",
        "uio[5]": "1",
        "uio[6]": "1",
        "uio[7]": "1"
      }
    },
    {
      "macro": "tt_um_rebeccargb_colorbars",
      "address": 365,
      "title": "Color Bars",
      "author": "Rebecca G. Bettencourt",
      "description": "VGA demo resembling NTSC color bars",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/tt-colorbars",
      "commit": "87cceea95d809c363551a3aeb4085f4fecafb1a8",
      "pinout": {
        "ui[0]": "show_id",
        "ui[1]": "custom_id",
        "ui[2]": "scroll_id",
        "ui[3]": "scroll_bars",
        "ui[4]": "D3 (custom id)",
        "ui[5]": "D2 (custom id)",
        "ui[6]": "D1 (custom id)",
        "ui[7]": "D0 (custom id)",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "A0 (custom id)",
        "uio[1]": "A1 (custom id)",
        "uio[2]": "A2 (custom id)",
        "uio[3]": "A3 (custom id)",
        "uio[4]": "A4 (custom id)",
        "uio[5]": "A5 (custom id)",
        "uio[6]": "A6 (custom id)",
        "uio[7]": "A7 (custom id)"
      }
    },
    {
      "macro": "tt_um_rebeccargb_hardware_utf8",
      "address": 367,
      "title": "Hardware UTF Encoder/Decoder",
      "author": "Rebecca G. Bettencourt",
      "description": "Converts Unicode code points between UTF-8, UTF-16, and UTF-32.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/hardware-utf8",
      "commit": "ac16d629b4802e06ae126763e35f8067a39d32e9",
      "pinout": {
        "ui[0]": "/ROUT",
        "ui[1]": "ERRS, /PROPS",
        "ui[2]": "CHK",
        "ui[3]": "CBE, /CLE",
        "ui[4]": "READ, /WRITE",
        "ui[5]": "/CIO",
        "ui[6]": "/UIO",
        "ui[7]": "/BIO",
        "uo[0]": "READY; NORMAL",
        "uo[1]": "RETRY; CONTROL",
        "uo[2]": "INVALID; SURROGATE",
        "uo[3]": "OVERLONG; HIGHCHAR",
        "uo[4]": "NONUNI; PRIVATE",
        "uo[5]": "ERROR; NONCHAR",
        "uo[6]": "UEOF",
        "uo[7]": "BEOF",
        "uio[0]": "I/O LSB",
        "uio[1]": "I/O",
        "uio[2]": "I/O",
        "uio[3]": "I/O",
        "uio[4]": "I/O",
        "uio[5]": "I/O",
        "uio[6]": "I/O",
        "uio[7]": "I/O MSB"
      }
    },
    {
      "macro": "tt_um_rebeccargb_intercal_alu",
      "address": 817,
      "title": "INTERCAL ALU",
      "author": "Rebecca G. Bettencourt",
      "description": "An ALU for the five operators of the INTERCAL programming language.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/intercal-alu",
      "commit": "10f62d254ff49abc4dcdba236e8a1f71e5609848",
      "pinout": {
        "ui[0]": "A0 (address)",
        "ui[1]": "A1 (address)",
        "ui[2]": "S0 (selector)",
        "ui[3]": "S1 (selector)",
        "ui[4]": "S2 (selector)",
        "ui[5]": "S3 (selector)",
        "ui[6]": "/OE (output enable)",
        "ui[7]": "/WE (write enable)",
        "uo[0]": "D0",
        "uo[1]": "D1",
        "uo[2]": "D2",
        "uo[3]": "D3",
        "uo[4]": "D4",
        "uo[5]": "D5",
        "uo[6]": "D6",
        "uo[7]": "D7",
        "uio[0]": "D0",
        "uio[1]": "D1",
        "uio[2]": "D2",
        "uio[3]": "D3",
        "uio[4]": "D4",
        "uio[5]": "D5",
        "uio[6]": "D6",
        "uio[7]": "D7"
      }
    },
    {
      "macro": "tt_um_rebeccargb_styler",
      "address": 369,
      "title": "Styler",
      "author": "Rebecca G. Bettencourt",
      "description": "16x16 bitmap manipulation based on text mode attributes.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/styler",
      "commit": "a66cc58970af75df04266907b51fe2fbce995f15",
      "pinout": {
        "ui[0]": "A0 (address)",
        "ui[1]": "A1 (address)",
        "ui[2]": "A2 (address)",
        "ui[3]": "faint text polarity",
        "ui[4]": "blink phase",
        "ui[5]": "cursor enable",
        "ui[6]": "/OE (output enable)",
        "ui[7]": "/WE (write enable)",
        "uo[0]": "D0",
        "uo[1]": "D1",
        "uo[2]": "D2",
        "uo[3]": "D3",
        "uo[4]": "D4",
        "uo[5]": "D5",
        "uo[6]": "D6",
        "uo[7]": "D7",
        "uio[0]": "D0",
        "uio[1]": "D1",
        "uio[2]": "D2",
        "uio[3]": "D3",
        "uio[4]": "D4",
        "uio[5]": "D5",
        "uio[6]": "D6",
        "uio[7]": "D7"
      }
    },
    {
      "macro": "tt_um_rebeccargb_tt09ball_screensaver",
      "address": 363,
      "title": "TT09Ball VGA Screensaver",
      "author": "Rebecca G. Bettencourt; Uri Shaked",
      "description": "THE STRONGEST DVD style screen saver (640x480, TinyVGA Pmod)",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/tt09ball-screensaver",
      "commit": "a22937d5c62aecc39b8016234a584bf8c4d8b2e6",
      "pinout": {
        "ui[0]": "tile",
        "ui[1]": "solid_color",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_rebeccargb_universal_decoder",
      "address": 819,
      "title": "Universal Binary to Segment Decoder",
      "author": "Rebecca G. Bettencourt",
      "description": "Decodes various binary codes to various segmented displays.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/ubcd",
      "commit": "7bad7dc31494ec76d25e18ca9df7bba5f506cc73",
      "pinout": {
        "ui[0]": "A; D0; A1; A",
        "ui[1]": "B; D1; B1; B",
        "ui[2]": "C; D2; C1; C",
        "ui[3]": "D; D3; D1; D",
        "ui[4]": "V0; D4; A2; E",
        "ui[5]": "V1; D5; B2; -",
        "ui[6]": "V2; D6; C2; /VBI",
        "ui[7]": "/RBI; LC; D2; /RBI",
        "uo[0]": "Segment a; U1; a",
        "uo[1]": "Segment b; U2; b",
        "uo[2]": "Segment c; V1; c",
        "uo[3]": "Segment d; V2; d",
        "uo[4]": "Segment e; W1; e",
        "uo[5]": "Segment f; W2; f",
        "uo[6]": "Segment g; X1; g",
        "uo[7]": "/RBO; /LTR; X2; /RBO",
        "uio[0]": "X6; X6; Y1; h",
        "uio[1]": "X7; X7; Y2; V",
        "uio[2]": "X9; X9; /LT1; -",
        "uio[3]": "/LT; FS; /LT2; /LT",
        "uio[4]": "/BI (blanking input)",
        "uio[5]": "/AL (active low)",
        "uio[6]": "M0 (mode select)",
        "uio[7]": "M1 (mode select)"
      }
    },
    {
      "macro": "tt_um_rebeccargb_vga_pride",
      "address": 681,
      "title": "VGA Pride",
      "author": "Rebecca G. Bettencourt",
      "description": "A VGA demo for showing pride flags",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/tt-vga-pride",
      "commit": "b9dae12f79321c990884aac542c9197e5653cde8",
      "pinout": {
        "ui[0]": "address mode",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "set",
        "ui[5]": "prev",
        "ui[6]": "next",
        "ui[7]": "reset",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "A0",
        "uio[1]": "A1",
        "uio[2]": "A2",
        "uio[3]": "A3",
        "uio[4]": "A4",
        "uio[5]": "A5",
        "uio[6]": "A6",
        "uio[7]": "A7"
      }
    },
    {
      "macro": "tt_um_rebeccargb_vga_timing_experiments",
      "address": 371,
      "title": "VGA Timing Experiments",
      "author": "Rebecca G. Bettencourt",
      "description": "Configurable VGA signal generator for experimentation purposes.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/vga-timing-experiments",
      "commit": "817b852ad0c1431e7837be62efc7a9ec47e3084a",
      "pinout": {
        "ui[0]": "A0",
        "ui[1]": "A1",
        "ui[2]": "A2",
        "ui[3]": "A3",
        "ui[4]": "D8",
        "ui[5]": "D9",
        "ui[6]": "D10",
        "ui[7]": "WE",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "D0",
        "uio[1]": "D1",
        "uio[2]": "D2",
        "uio[3]": "D3",
        "uio[4]": "D4",
        "uio[5]": "D5",
        "uio[6]": "D6",
        "uio[7]": "D7"
      }
    },
    {
      "macro": "tt_um_reemashivva_fifo",
      "address": 42,
      "title": "Asynchronous FIFO",
      "author": "RMKGSN",
      "description": "An Asynchronous FIFO is a type of First-In-First-Out memory buffer that allows data transfer between two clock domains operating at differnt frequencies",
      "clock_hz": 60000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/reemashivva/CF-2024-TT10-06",
      "commit": "cbc817bf2f77dd224142198bfe2713ebfa07d958",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "wr_rq",
        "ui[3]": "rd_rq",
        "ui[4]": "wdata[0]",
        "ui[5]": "wdata[1]",
        "ui[6]": "wdata[2]",
        "ui[7]": "wdata[3]",
        "uo[0]": "full",
        "uo[1]": "empty",
        "uo[2]": "rdata[0]",
        "uo[3]": "rdata[1]",
        "uo[4]": "rdata[2]",
        "uo[5]": "rdata[3]",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_rejunity_atari2600",
      "address": 178,
      "title": "Atari 2600",
      "author": "Renaldas Zioma",
      "description": "Replica of Atari 2600",
      "clock_hz": 25175000,
      "tiles": "6x2",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tiny-atari-2600",
      "commit": "d269532d0ab7a4d737e8b5f1bc37dbc7f987f15e",
      "pinout": {
        "ui[0]": "UP       / Difficulty Switch P1",
        "ui[1]": "DOWN     / Difficulty Switch P2",
        "ui[2]": "LEFT     / Monochrome Switch",
        "ui[3]": "RIGHT",
        "ui[4]": "FIRE     / Gamepad LATCH",
        "ui[5]": "SELECT   / Gamepad CLK",
        "ui[6]": "Switches / Gamepad DATA",
        "ui[7]": "START",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "QSPI CS",
        "uio[1]": "QSPI SD0",
        "uio[2]": "QSPI SD1",
        "uio[3]": "QSPI SCK",
        "uio[4]": "QSPI SD2",
        "uio[5]": "QSPI SD3",
        "uio[6]": "",
        "uio[7]": "Audio (PWM)"
      }
    },
    {
      "macro": "tt_um_rejunity_ay8913",
      "address": 648,
      "title": "Classic 8-bit era Programmable Sound Generator AY-3-8913",
      "author": "ReJ aka Renaldas Zioma",
      "description": "The AY-3-8913 is a 3-voice programmable sound generator (PSG) chip from General Instruments. The AY-3-8913 is a smaller variant of AY-3-8910 or its analog YM2149.",
      "clock_hz": 2000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tt05-psg-ay8913",
      "commit": "7e30c9acfa72fbef004e481c14f832d4f95bf8ba",
      "pinout": {
        "ui[0]": "DA0 - multiplexed data/address bus LSB",
        "ui[1]": "DA1 - multiplexed data/address bus",
        "ui[2]": "DA2 - multiplexed data/address bus",
        "ui[3]": "DA3 - multiplexed data/address bus",
        "ui[4]": "DA4 - multiplexed data/address bus",
        "ui[5]": "DA5 - multiplexed data/address bus",
        "ui[6]": "DA6 - multiplexed data/address bus",
        "ui[7]": "DA7 - multiplexed data/address bus MSB",
        "uo[0]": "audio out (PWM)",
        "uo[1]": "digita audio LSB",
        "uo[2]": "digita audio ",
        "uo[3]": "digita audio ",
        "uo[4]": "digita audio ",
        "uo[5]": "digita audio ",
        "uo[6]": "digita audio ",
        "uo[7]": "digita audio MSB",
        "uio[0]": "(in) **BC1** bus control",
        "uio[1]": "(in) **BDIR** bus direction",
        "uio[2]": "(in) **SEL0** clock divider",
        "uio[3]": "(in) **SEL1** clock divider",
        "uio[4]": "(out) channel A (PWM)",
        "uio[5]": "(out) channel B (PWM)",
        "uio[6]": "(out) channel C (PWM)",
        "uio[7]": "(out) AUDIO OUT master (PWM)"
      }
    },
    {
      "macro": "tt_um_rejunity_decoder",
      "address": 8,
      "title": "ternary, E1M0, E2M0 decoders",
      "author": "ReJ aka Renaldas Zioma",
      "description": "Ternary, Quinary and Septenary 1.6 .. 2.6 bits/param packed weights",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tt09-ternary-septenary-decoders",
      "commit": "16f708da01248a5f1bffa11cd1e22741de76bc70",
      "pinout": {
        "ui[0]": "packed weights LSB",
        "ui[1]": "packed weights",
        "ui[2]": "packed weights",
        "ui[3]": "packed weights",
        "ui[4]": "packed weights",
        "ui[5]": "packed weights",
        "ui[6]": "packed weights",
        "ui[7]": "packed weights MSB",
        "uo[0]": "unpacked",
        "uo[1]": "unpacked",
        "uo[2]": "unpacked",
        "uo[3]": "unpacked",
        "uo[4]": "unpacked",
        "uo[5]": "unpacked",
        "uo[6]": "unpacked",
        "uo[7]": "unpacked",
        "uio[0]": "(out) unpacked",
        "uio[1]": "(out) unpacked",
        "uio[2]": "(out) unpacked",
        "uio[3]": "(out) unpacked",
        "uio[4]": "(out) unpacked",
        "uio[5]": "(out) unpacked",
        "uio[6]": "(out) dummy",
        "uio[7]": "(in) Ternary / Septenary"
      }
    },
    {
      "macro": "tt_um_rejunity_e2m0_x_i8_matmul",
      "address": 656,
      "title": "E2M0 x INT8 Systolic Array",
      "author": "ReJ aka Renaldas Zioma",
      "description": "Systolic array for testing (Septenary and Quinary) 2.6 bits/param packed weights",
      "clock_hz": 48000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tt09-septenary-matrix-mul",
      "commit": "b70c13e591348dff739e1cbc0aeefbe32f9b2be6",
      "pinout": {
        "ui[0]": "packed weights LSB",
        "ui[1]": "packed weights",
        "ui[2]": "packed weights",
        "ui[3]": "packed weights",
        "ui[4]": "packed weights",
        "ui[5]": "packed weights",
        "ui[6]": "packed weights",
        "ui[7]": "packed weights MSB",
        "uo[0]": "result LSB",
        "uo[1]": "result ",
        "uo[2]": "result ",
        "uo[3]": "result ",
        "uo[4]": "result ",
        "uo[5]": "result ",
        "uo[6]": "result ",
        "uo[7]": "result MSB",
        "uio[0]": "(in) activations LSB",
        "uio[1]": "(in) activations",
        "uio[2]": "(in) activations",
        "uio[3]": "(in) activations",
        "uio[4]": "(in) activations",
        "uio[5]": "(in) activations",
        "uio[6]": "(in) activations",
        "uio[7]": "(in) activations MSB"
      }
    },
    {
      "macro": "tt_um_rejunity_sn76489",
      "address": 14,
      "title": "Classic 8-bit era Programmable Sound Generator SN76489",
      "author": "ReJ aka Renaldas Zioma",
      "description": "The SN76489 Digital Complex Sound Generator (DCSG) is a programmable sound generator chip from Texas Instruments.",
      "clock_hz": 4000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tt05-psg-sn76489",
      "commit": "2fe68df12bd6692c738accb0b81e35b68fffb5a4",
      "pinout": {
        "ui[0]": "D0 data bus",
        "ui[1]": "D1 data bus",
        "ui[2]": "D2 data bus",
        "ui[3]": "D3 data bus",
        "ui[4]": "D4 data bus",
        "ui[5]": "D5 data bus",
        "ui[6]": "D6 data bus",
        "ui[7]": "D7 data bus",
        "uo[0]": "digital audio LSB",
        "uo[1]": "digital audio",
        "uo[2]": "digital audio",
        "uo[3]": "digital audio",
        "uo[4]": "digital audio",
        "uo[5]": "digital audio",
        "uo[6]": "digital audio",
        "uo[7]": "digital audio MSB",
        "uio[0]": "(in)  **/WE** write enable",
        "uio[1]": "(in)  **SEL0** clock divider",
        "uio[2]": "(in)  **SEL1** clock divider",
        "uio[3]": "(out) channel 0 (PWM)",
        "uio[4]": "(out) channel 1 (PWM)",
        "uio[5]": "(out) channel 2 (PWM)",
        "uio[6]": "(out) channel 3 (PWM)",
        "uio[7]": "(out) AUDIO OUT master (PWM)"
      }
    },
    {
      "macro": "tt_um_rejunity_ternary_dot",
      "address": 640,
      "title": "Ternary 128-element Dot Product",
      "author": "ReJ aka Renaldas Zioma",
      "description": "sum(A * B) where A is a binary vector, B is a ternary vector",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tt10-ternary-dot-product",
      "commit": "de8a79763d55b123bfd3d8a24ce90ae1ebe5bf14",
      "pinout": {
        "ui[0]": "binary vector A element 0",
        "ui[1]": "binary vector A element 1",
        "ui[2]": "binary vector A element 2",
        "ui[3]": "binary vector A element 3",
        "ui[4]": "binary vector A element 4",
        "ui[5]": "binary vector A element 5",
        "ui[6]": "binary vector A element 6",
        "ui[7]": "binary vector A element 7",
        "uo[0]": "out (LSB)",
        "uo[1]": "out",
        "uo[2]": "out",
        "uo[3]": "out",
        "uo[4]": "out",
        "uo[5]": "out",
        "uo[6]": "out",
        "uo[7]": "out",
        "uio[0]": "(in serial) ternary vector B element ZERO",
        "uio[1]": "(in serial) ternary vector B element SIGN",
        "uio[2]": "out",
        "uio[3]": "out",
        "uio[4]": "out",
        "uio[5]": "out",
        "uio[6]": "out",
        "uio[7]": "out (MSB)"
      }
    },
    {
      "macro": "tt_um_rejunity_vga_logo",
      "address": 66,
      "title": "VGA Tiny Logo (1 tile)",
      "author": "Renaldas Zioma",
      "description": "Large 480x480 pixels Tiny Tapeout logo with bling and dithered colors crammed into 1 tile!",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tt08-huge-480x480-tiny-tapeout-logo-in-1-tile",
      "commit": "d6589fc13cce7f5b66245c1b5e95e6729ad51216",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_rejunity_vga_test01",
      "address": 646,
      "title": "VGA Drop (audio/visual demo)",
      "author": "ReJ aka Renaldas Zioma, eriQue aka Erik Hemming, Matthias Kampa",
      "description": "Tiny 8 part Megademo! TBL^Nesnausk^SonikClique",
      "clock_hz": 25200000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tt08-vga-drop",
      "commit": "c5f81aeac16f6621bfbd7c60fc3c1949274fa763",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSYNC",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSYNC",
        "uio[0]": "Audio (PWM)",
        "uio[1]": "Audio (PWM)",
        "uio[2]": "Audio (PWM)",
        "uio[3]": "Audio (PWM)",
        "uio[4]": "Audio (PWM)",
        "uio[5]": "Audio (PWM)",
        "uio[6]": "Audio (PWM)",
        "uio[7]": "Audio (PWM)"
      }
    },
    {
      "macro": "tt_um_rejunity_z80",
      "address": 330,
      "title": "Zilog Z80",
      "author": "ReJ aka Renaldas Zioma",
      "description": "Z80 open-source silicon. Goal is to become a silicon proven, pin compatible, open-source replacement for classic Z80.",
      "clock_hz": 16000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/z80-open-silicon",
      "commit": "20368bb4ef3f68c695ba608854c9e61815e0709c",
      "pinout": {
        "ui[0]": "/WAIT",
        "ui[1]": "/INT",
        "ui[2]": "/NMI",
        "ui[3]": "/BUSRQ",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "MUX -- address lo/hi bits on the output pins",
        "ui[7]": "MUX -- control signals on the output pins",
        "uo[0]": "/M1, A0, A8",
        "uo[1]": "/MREQ, A1, A9",
        "uo[2]": "/IORQ, A2, A10",
        "uo[3]": "/RD, A3, A11",
        "uo[4]": "/WR, A4, A12",
        "uo[5]": "/RFSH, A5, A13",
        "uo[6]": "/HALT, A6, A14",
        "uo[7]": "/BUSAK, A7, A15",
        "uio[0]": "D0",
        "uio[1]": "D1",
        "uio[2]": "D2",
        "uio[3]": "D3",
        "uio[4]": "D4",
        "uio[5]": "D5",
        "uio[6]": "D6",
        "uio[7]": "D7"
      }
    },
    {
      "macro": "tt_um_resfuzzy",
      "address": 208,
      "title": "resfuzzy",
      "author": "roshan",
      "description": "calculation",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ROSHAN0120/tt08-verilog-resfuzzy",
      "commit": "8f09e58f65c021f73005e12280ab0e5460616953",
      "pinout": {
        "ui[0]": "Input data from the sensors",
        "ui[1]": "Input data from the sensors",
        "ui[2]": "Input data from the sensors",
        "ui[3]": "Input data from the sensors",
        "ui[4]": "Input data from the sensors",
        "ui[5]": "Input data from the sensors",
        "ui[6]": "Input data from the sensors",
        "ui[7]": "Input data from the sensors",
        "uo[0]": "risk value",
        "uo[1]": "risk value",
        "uo[2]": "risk value",
        "uo[3]": "risk value",
        "uo[4]": "risk value",
        "uo[5]": "risk value",
        "uo[6]": "risk value",
        "uo[7]": "risk value",
        "uio[0]": "sensor select",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ring_divider",
      "address": 144,
      "title": "Divided Ring Oscillator",
      "author": "Ignatius Bezzam, Dhandeep Challagundla, Jarnail Sanghera, Russell Kim",
      "description": "Ring Oscillator",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/SmellyJelly01/tt08-ring-divider",
      "commit": "ee5a018e00580b4a63ddd9e0a92815fe117ec0da",
      "pinout": {
        "ui[0]": "tst_clk",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "final_out",
        "uo[1]": "osc_out",
        "uo[2]": "ena",
        "uo[3]": "clk",
        "uo[4]": "rst_n",
        "uo[5]": "n2_buf",
        "uo[6]": "n4_buf",
        "uo[7]": "",
        "uio[0]": "n1",
        "uio[1]": "n3",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_riscv_mini",
      "address": 9,
      "title": "RISC-V Mini",
      "author": "RickGao",
      "description": "RISC-V Mini 8 Bit",
      "clock_hz": 100000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RickGao/RISC-V-Mini",
      "commit": "6468c5283cb07b54ed992d704a1eb31a0546d7be",
      "pinout": {
        "ui[0]": "instruction[0]",
        "ui[1]": "instruction[1]",
        "ui[2]": "instruction[2]",
        "ui[3]": "instruction[3]",
        "ui[4]": "instruction[4]",
        "ui[5]": "instruction[5]",
        "ui[6]": "instruction[6]",
        "ui[7]": "instruction[7]",
        "uo[0]": "result[0]",
        "uo[1]": "result[1]",
        "uo[2]": "result[2]",
        "uo[3]": "result[3]",
        "uo[4]": "result[4]",
        "uo[5]": "result[5]",
        "uo[6]": "result[6]",
        "uo[7]": "result[7]",
        "uio[0]": "instruction[8]",
        "uio[1]": "instruction[9]",
        "uio[2]": "instruction[10]",
        "uio[3]": "instruction[11]",
        "uio[4]": "instruction[12]",
        "uio[5]": "instruction[13]",
        "uio[6]": "instruction[14]",
        "uio[7]": "instruction[15]"
      }
    },
    {
      "macro": "tt_um_rkarl_Spiral",
      "address": 465,
      "title": "TT_spiralPattern",
      "author": "rkarl",
      "description": "Creates A Controllable Spiral Pattern",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/rkarl2/TT_spiral",
      "commit": "c2d0ffd193ad9f1f08463121e1e8fd7204646113",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ronikant_jeremykam_tinyregisters",
      "address": 422,
      "title": "Tiny Registers",
      "author": "Roni Kant, Jeremy Kam",
      "description": "Various Registers for 8-bit CPU",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Penguronik/TinyRegisters",
      "commit": "3e39ed09e51edd788d1a72330304912d1c24d880",
      "pinout": {
        "ui[0]": "in_0",
        "ui[1]": "in_1",
        "ui[2]": "in_2",
        "ui[3]": "in_3",
        "ui[4]": "in_4",
        "ui[5]": "in_5",
        "ui[6]": "in_6",
        "ui[7]": "in_7",
        "uo[0]": "out_0",
        "uo[1]": "out_1",
        "uo[2]": "out_2",
        "uo[3]": "out_3",
        "uo[4]": "out_4",
        "uo[5]": "out_5",
        "uo[6]": "out_6",
        "uo[7]": "out_7",
        "uio[0]": "extra_output_0",
        "uio[1]": "extra_output_1",
        "uio[2]": "extra_output_2",
        "uio[3]": "extra_output_3",
        "uio[4]": "extra_input_0",
        "uio[5]": "extra_input_1",
        "uio[6]": "register_select_0",
        "uio[7]": "register_select_1"
      }
    },
    {
      "macro": "tt_um_roy1707018",
      "address": 833,
      "title": "RO",
      "author": "Arna Roy",
      "description": "Implementation of simple RO",
      "clock_hz": 20000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Secure-Embedded-Systems/tt08-trng",
      "commit": "e51a231cd8bff95ce4d9bda1aa411a105c7f0403",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_rte_sine_synth",
      "address": 36,
      "title": "Sine Synth",
      "author": "R. Timothy Edwards",
      "description": "Keyboard synthesizer with one octave of notes and a sine wave generator",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RTimothyEdwards/tt10-sine-synth",
      "commit": "4ab0b78a800ac838b1b71c80505b7f154db5ddad",
      "pinout": {
        "ui[0]": "Key C",
        "ui[1]": "Key D",
        "ui[2]": "Key E",
        "ui[3]": "Key F",
        "ui[4]": "Key G",
        "ui[5]": "Key A",
        "ui[6]": "Key B",
        "ui[7]": "Key C",
        "uo[0]": "8-bit Output, bit 0",
        "uo[1]": "8-bit Output, bit 1",
        "uo[2]": "8-bit Output, bit 2",
        "uo[3]": "8-bit Output, bit 3",
        "uo[4]": "8-bit Output, bit 4",
        "uo[5]": "8-bit Output, bit 5",
        "uo[6]": "8-bit Output, bit 6",
        "uo[7]": "8-bit Output, bit 7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "PWM Output"
      }
    },
    {
      "macro": "tt_um_rtfb_collatz",
      "address": 673,
      "title": "Collatz conjecture brute-forcer",
      "author": "Vytautas \u0160altenis",
      "description": "Runs a Collatz sequence calculation for a given number",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/rtfb/tt09-collatz-rev1",
      "commit": "bb63fb8431974512fa9be009f7825a42cce5ed1b",
      "pinout": {
        "ui[0]": "input0",
        "ui[1]": "input1",
        "ui[2]": "input2",
        "ui[3]": "input3",
        "ui[4]": "input4",
        "ui[5]": "input5",
        "ui[6]": "input6",
        "ui[7]": "input7",
        "uo[0]": "output0",
        "uo[1]": "output1",
        "uo[2]": "output2",
        "uo[3]": "output3",
        "uo[4]": "output4",
        "uo[5]": "output5",
        "uo[6]": "output6",
        "uo[7]": "output7",
        "uio[0]": "address0",
        "uio[1]": "address1",
        "uio[2]": "address2",
        "uio[3]": "address3",
        "uio[4]": "address4",
        "uio[5]": "orbit/max select",
        "uio[6]": "start compute",
        "uio[7]": "write enable or compute busy indicator"
      }
    },
    {
      "macro": "tt_um_samkho_two_channel_square_wave_generator",
      "address": 18,
      "title": "TwoChannelSquareWaveGenerator",
      "author": "Sam Kho",
      "description": "Like having two apple2-style speakers",
      "clock_hz": 256000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/samkho/TwoChannelSquareWaveGenerator",
      "commit": "3d48ad9f5d83a8fc197bfee41603715d1d032825",
      "pinout": {
        "ui[0]": "TA0",
        "ui[1]": "TA1",
        "ui[2]": "TA2",
        "ui[3]": "TA3",
        "ui[4]": "TA4",
        "ui[5]": "TA5",
        "ui[6]": "TA6",
        "ui[7]": "TA7",
        "uo[0]": "OUTA",
        "uo[1]": "OUTB",
        "uo[2]": "SUM0",
        "uo[3]": "SUM1",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "TB0",
        "uio[1]": "TB1",
        "uio[2]": "TB2",
        "uio[3]": "TB3",
        "uio[4]": "TB4",
        "uio[5]": "TB5",
        "uio[6]": "TB6",
        "uio[7]": "TB7"
      }
    },
    {
      "macro": "tt_um_samuelm_pwm_generator",
      "address": 303,
      "title": "PWM generator",
      "author": "Matea Samuel",
      "description": "Generate pwm signal with configurable period - 12-bit - and duty cycle - 1%-99%.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MateaSamuel/tt08-pwm-generator",
      "commit": "731fb9162500ee5c35bdf9be478586b346df94ef",
      "pinout": {
        "ui[0]": "in[0]",
        "ui[1]": "in[1]",
        "ui[2]": "in[2]",
        "ui[3]": "in[3]",
        "ui[4]": "in[4]",
        "ui[5]": "in[5]",
        "ui[6]": "in[6]",
        "ui[7]": "in[7]",
        "uo[0]": "pwm_out",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "in[8]",
        "uio[1]": "in[9]",
        "uio[2]": "in[10]",
        "uio[3]": "in[11]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "sel",
        "uio[7]": "wr_en"
      }
    },
    {
      "macro": "tt_um_save_buffer_hash_table",
      "address": 40,
      "title": "Tiny Hash Table",
      "author": "Sasha Krassovsky",
      "description": "Hash table with 8 slots, 4-bit keys, 4-bit values",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/save-buffer/tt10-hash-table",
      "commit": "57780af6c8d3f66f57b8f5db88939f25c930caf8",
      "pinout": {
        "ui[0]": "VAL0",
        "ui[1]": "VAL1",
        "ui[2]": "VAL2",
        "ui[3]": "VAL3",
        "ui[4]": "KEY0",
        "ui[5]": "KEY1",
        "ui[6]": "KEY2",
        "ui[7]": "KEY3",
        "uo[0]": "OVAL0",
        "uo[1]": "OVAL1",
        "uo[2]": "OVAL2",
        "uo[3]": "OVAL3",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "CMD0",
        "uio[1]": "CMD1",
        "uio[2]": "GO",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "STATUS0",
        "uio[7]": "STATUS1"
      }
    },
    {
      "macro": "tt_um_schoeberl_test",
      "address": 522,
      "title": "tinydsp-lol",
      "author": "Tassilo Tanneberger",
      "description": "testing digital dsp",
      "clock_hz": 2000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tanneberger/tt09-dsp",
      "commit": "38a7ebd3308bc7ab3ba6cbab50d4aa4d7b27323f",
      "pinout": {
        "ui[0]": "a",
        "ui[1]": "b",
        "ui[2]": "c",
        "ui[3]": "d",
        "ui[4]": "e",
        "ui[5]": "f",
        "ui[6]": "g",
        "ui[7]": "h",
        "uo[0]": "x0",
        "uo[1]": "x1",
        "uo[2]": "x2",
        "uo[3]": "x3",
        "uo[4]": "x4",
        "uo[5]": "x5",
        "uo[6]": "x6",
        "uo[7]": "x7",
        "uio[0]": "b0",
        "uio[1]": "b1",
        "uio[2]": "b2",
        "uio[3]": "b3",
        "uio[4]": "b4",
        "uio[5]": "b5",
        "uio[6]": "b6",
        "uio[7]": "b7"
      }
    },
    {
      "macro": "tt_um_schoeberl_wildcat",
      "address": 774,
      "title": "Wildcat RISC-V",
      "author": "Martin Schoeberl",
      "description": "Wildcat: a 3-stage RISC-V implementation",
      "clock_hz": 50000000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/schoeberl/tt10-wildcat",
      "commit": "c5cb86899d2494c1bfb42fbc3420ff58c397f085",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "inout0",
        "uio[1]": "inout1",
        "uio[2]": "inout2",
        "uio[3]": "inout3",
        "uio[4]": "inout4",
        "uio[5]": "inout5",
        "uio[6]": "inout6",
        "uio[7]": "inout7"
      }
    },
    {
      "macro": "tt_um_sebastienparadis_hamming_top",
      "address": 801,
      "title": "Hamming Code (7,4)",
      "author": "Sebastien Paradis",
      "description": "(7,4) Hamming Encoder/Decoder",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/sebastienparadis/tt09-hamming-code-7-4",
      "commit": "8e5bf7f93db4b2f5e1fcbcbb2a1486fafc8a3762",
      "pinout": {
        "ui[0]": "LSB/Bit 0 for 4-bit Encoder Input OR LSB/Bit 0 for 7-bit Decoder Input",
        "ui[1]": "Bit 1 for 4-bit Encoder Input OR Bit 1 for 7-bit Decoder Input",
        "ui[2]": "Bit 2 for 4-bit Encoder Input OR Bit 2 for 7-bit Decoder Input",
        "ui[3]": "MSB/Bit 3 for 4-bit Encoder Input OR Bit 3 for 7-bit Decoder Input",
        "ui[4]": "Bit 4 for 7-bit Decoder Input",
        "ui[5]": "Bit 5 for 7-bit Decoder Input",
        "ui[6]": "MSB/Bit 6 for 7-bit Decoder Input",
        "ui[7]": "Mode Selector (0 => Encode, uses ui[3:0]; 1 => Decode, uses ui[6:0])",
        "uo[0]": "LSB/Bit 0 for 7-bit Encoder OR Decoder Output",
        "uo[1]": "Bit 1 for 7-bit Encoder OR Decoder Output",
        "uo[2]": "Bit 2 for 7-bit Encoder OR Decoder Output",
        "uo[3]": "Bit 3 for 7-bit Encoder OR Decoder Output",
        "uo[4]": "Bit 4 for 7-bit Encoder OR Decoder Output",
        "uo[5]": "Bit 5 for 7-bit Encoder OR Decoder Output",
        "uo[6]": "MSB/Bit 6 for 7-bit Encoder OR Decoder Output",
        "uo[7]": "Mode Selector (0 => Encode; 1 => Decode)",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_senolgulgonul",
      "address": 805,
      "title": "Senol Gulgonul tt09",
      "author": "Senol Gulgonul",
      "description": "Display the letters of SEnOLGULGONUL on 7-Seg using internal oscillator",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/senolgulgonul/tt09-senolgulgonul",
      "commit": "97d5521be753cc122907b4dbb2ff95348e88f60d",
      "pinout": {
        "ui[0]": "inv3_in",
        "ui[1]": "inv1_in",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "a",
        "uo[1]": "b",
        "uo[2]": "c",
        "uo[3]": "d",
        "uo[4]": "e",
        "uo[5]": "f",
        "uo[6]": "g",
        "uo[7]": "dp",
        "uio[0]": "inv3_out",
        "uio[1]": "inv2_out",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_shifter",
      "address": 524,
      "title": "Shifter",
      "author": "Ethan Sifferman",
      "description": "Input >> Inout",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/sifferman/tt09-subtractor",
      "commit": "eff82c84a29d608d232f264d04f3061a6b8e7c18",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_in[0]",
        "uio[1]": "uio_in[1]",
        "uio[2]": "uio_in[2]",
        "uio[3]": "uio_in[3]",
        "uio[4]": "uio_in[4]",
        "uio[5]": "uio_in[5]",
        "uio[6]": "uio_in[6]",
        "uio[7]": "uio_in[7]"
      }
    },
    {
      "macro": "tt_um_shuangyu_top",
      "address": 775,
      "title": "Calculator",
      "author": "JING Shuangyu",
      "description": "A calculator do basic calculation",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Cooooobra/tt08_calculator",
      "commit": "77e5f3dfcf5a672a106639376c775d1660b2e903",
      "pinout": {
        "ui[0]": "ROW_1",
        "ui[1]": "ROW_2",
        "ui[2]": "ROW_3",
        "ui[3]": "ROW_4",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "sseg_A",
        "uo[1]": "sseg_B",
        "uo[2]": "sseg_C",
        "uo[3]": "sseg_D",
        "uo[4]": "sseg_E",
        "uo[5]": "sseg_F",
        "uo[6]": "sseg_G",
        "uo[7]": "sseg_dp",
        "uio[0]": "0",
        "uio[1]": "E_1",
        "uio[2]": "E_2",
        "uio[3]": "E_3",
        "uio[4]": "COL_1",
        "uio[5]": "COL_2",
        "uio[6]": "COL_3",
        "uio[7]": "COL_4"
      }
    },
    {
      "macro": "tt_um_sign_addsub",
      "address": 835,
      "title": "CMOS design of 4-bit Signed Adder Subtractor",
      "author": "Vivek Chiranjit",
      "description": "The project is a signed binary 4-bit adder-subtractor module.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ChiranjitPatel/tt08_SignedAddSub_HDL",
      "commit": "f2174054d3ee7b97bb7075c8d1027794b842d70e",
      "pinout": {
        "ui[0]": "a0",
        "ui[1]": "a1",
        "ui[2]": "a2",
        "ui[3]": "a3",
        "ui[4]": "b0",
        "ui[5]": "b1",
        "ui[6]": "b2",
        "ui[7]": "b3",
        "uo[0]": "s0",
        "uo[1]": "s1",
        "uo[2]": "s2",
        "uo[3]": "s3",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "sign0",
        "uio[1]": "sign1",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_silice",
      "address": 274,
      "title": "Warp",
      "author": "sylefeb",
      "description": "Demo on TinyTapeout? Let's do something!",
      "clock_hz": 25000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/sylefeb/tt08-compo-entry",
      "commit": "c1187b0f7dc537ed51bdbb4230c7fa11bd08248d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VS",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HS",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Audio"
      }
    },
    {
      "macro": "tt_um_simon_cipher",
      "address": 161,
      "title": "simon_cipher",
      "author": "Simon Cipher",
      "description": "Bitserial implementation of Simon-128",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/Secure-Embedded-Systems/tt08-simon",
      "commit": "a664d54750680b69a53c0eea2a295cdffefa8985",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_snn_with_delays_paolaunisa",
      "address": 335,
      "title": "ChatGPT-generated Spiking Neural Network with Delays",
      "author": "Paola Vitolo",
      "description": "ChatGPT-generated Spiking Neural Network with Delays",
      "clock_hz": 50000000,
      "tiles": "8x2",
      "analog_pins": [],
      "repo": "https://github.com/PaolaUniSa/tt09_chatGPT_SNN_LD",
      "commit": "da31a93c483ec2a4e3d4100a2b7191a5074a3229",
      "pinout": {
        "ui[0]": "input_spike[0]",
        "ui[1]": "input_spike[1]",
        "ui[2]": "input_spike[2]",
        "ui[3]": "input_spike[3]",
        "ui[4]": "input_spike[4]",
        "ui[5]": "input_spike[5]",
        "ui[6]": "input_spike[6]",
        "ui[7]": "input_spike[7]",
        "uo[0]": "output[0]",
        "uo[1]": "output[1]",
        "uo[2]": "output[2]",
        "uo[3]": "output[3]",
        "uo[4]": "output[4]",
        "uo[5]": "output[5]",
        "uo[6]": "output[6]",
        "uo[7]": "output[7]",
        "uio[0]": "CS",
        "uio[1]": "MOSI",
        "uio[2]": "MISO",
        "uio[3]": "SCLK",
        "uio[4]": "input_ready",
        "uio[5]": "output_ready",
        "uio[6]": "SNN_en",
        "uio[7]": "spi_instruction_done"
      }
    },
    {
      "macro": "tt_um_space_invaders_game",
      "address": 338,
      "title": "Space Invaders ASIC",
      "author": "Lukas Krupp, Adam Gebregziabher",
      "description": "HDL implementation of the retro game Space Invaders",
      "clock_hz": 25000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/ppurkl/tt10-chip-invaders",
      "commit": "cb509f22bf4846681a0c83e9110a2e70f602d649",
      "pinout": {
        "ui[0]": "input1",
        "ui[1]": "input2",
        "ui[2]": "input3",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "out1",
        "uo[1]": "out2",
        "uo[2]": "out3",
        "uo[3]": "out4",
        "uo[4]": "out5",
        "uo[5]": "out6",
        "uo[6]": "out7",
        "uo[7]": "out8",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_spacewar",
      "address": 461,
      "title": "XY Spacewar",
      "author": "Nicklaus Thompson",
      "description": "A scaled-down Spacewar game with a VGA mode. Might be Asteroids instead.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/FangameEmpire/tt10_xy_spacewar",
      "commit": "e87fc978e8acbfb921ce14295e709a2332cb7a2d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "gamepad_latch",
        "ui[5]": "gamepad_clk",
        "ui[6]": "gamepad_data",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_spi_pwm_djuara",
      "address": 108,
      "title": "spi_pwm",
      "author": "djuara",
      "description": "This is a PWM generator and 8-bit width IO, spi controlled (2 different interfaces, just for testing).",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/djuara-rbz/tt_spi_pwm",
      "commit": "de2b681b98f3425b22c1ecb2e01d79962859ba7c",
      "pinout": {
        "ui[0]": "clk_sclk",
        "ui[1]": "clk_mosi",
        "ui[2]": "clk_cs",
        "ui[3]": "sampled_sclk",
        "ui[4]": "sampled_mosi",
        "ui[5]": "sampled_cs",
        "ui[6]": "start pwm ext",
        "ui[7]": "input and'ed with ena",
        "uo[0]": "clk_miso",
        "uo[1]": "sampled_miso",
        "uo[2]": "pwm",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "IO0",
        "uio[1]": "IO1",
        "uio[2]": "IO2",
        "uio[3]": "IO3",
        "uio[4]": "IO4",
        "uio[5]": "IO5",
        "uio[6]": "IO6",
        "uio[7]": "IO7"
      }
    },
    {
      "macro": "tt_um_stochastic_addmultiply_CL123abc",
      "address": 227,
      "title": "Stochastic Multiplier, Adder and Self-Multiplier",
      "author": "Ciecen Lestari, Chih-Kuan Ho, David Parent",
      "description": "Multiplier, Adder and Self-Multiplier using stochastic computing",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/CL-123-abc/tt_um_stochastic_addmultiply_CL123abc",
      "commit": "dfdcbcaa7487be93ac28cda393b6c3771dcd7e22",
      "pinout": {
        "ui[0]": "serial_input_1",
        "ui[1]": "serial_input_2",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "serial_output_mul",
        "uo[1]": "serial_output_add",
        "uo[2]": "serial_output_smul",
        "uo[3]": "clk_counter_reset",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_stochastic_integrator_tt9_CL123abc",
      "address": 654,
      "title": "Stochastic Integrator",
      "author": "Ciecen Lestari, Chih-Kuan Ho, David Parent",
      "description": "Use stochastic computing to implement integration",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/CL-123-abc/tt_um_stochastic_integrator_tt9_CL123abc",
      "commit": "893f41034f967acdf37dfb5f89afd7c09ef51164",
      "pinout": {
        "ui[0]": "serial_input_1",
        "ui[1]": "serial_input_2",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "serial_output_seq_integrator_a",
        "uo[1]": "serial_output_seq_integrator_b",
        "uo[2]": "serial_output_seq_integrator_c",
        "uo[3]": "serial_output_system_integrator_a",
        "uo[4]": "serial_output_system_integrator_b",
        "uo[5]": "serial_output_test_integrator_a",
        "uo[6]": "serial_output_test_integrator_b",
        "uo[7]": "output_sn_bit_seq_integrator_c",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_strau0106_simple_viii",
      "address": 714,
      "title": "simple-viii",
      "author": "strau",
      "description": "A simple 8-bit CPU Architecture",
      "clock_hz": 10000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/strau0106/tt-simple-viii",
      "commit": "e4fb917b99f3ad0c5d43748ebccca4507555d26e",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "cs flash",
        "uio[1]": "SD0",
        "uio[2]": "SD1",
        "uio[3]": "SCK",
        "uio[4]": "SD2",
        "uio[5]": "SD3",
        "uio[6]": "cs ram",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_supermic_arghunter",
      "address": 275,
      "title": "Supermic ",
      "author": "Armaan Gomes, Asmi Sawant, Ria Saheta, Vikhaash Kanagavel Chithra, Morgan Packard, Sanjay Ravishankar",
      "description": "A 8 channel customizable beamforming signal processor",
      "clock_hz": 0,
      "tiles": "8x2",
      "analog_pins": [],
      "repo": "https://github.com/arghunter/Supermic-tt08",
      "commit": "2382b04870a83d488a717366cebb333c5c96c206",
      "pinout": {
        "ui[0]": "Bit Clock (3.072 Mhz)",
        "ui[1]": "LR Clock (48Khz)",
        "ui[2]": "PDM Input Mics 0,1",
        "ui[3]": "PDM Input Mics 2,3",
        "ui[4]": "PDM Input Mics 4,5",
        "ui[5]": "PDM Input Mics 6,7",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "PCM Out Mic 0",
        "uo[1]": "PCM Out Mic 1",
        "uo[2]": "PCM Out Mic 2",
        "uo[3]": "PCM Out Mic 3",
        "uo[4]": "PCM Out Mic 4",
        "uo[5]": "PCM Out Mic 5",
        "uo[6]": "PCM Out Mic 6",
        "uo[7]": "PCM Out Mic 7",
        "uio[0]": "Delay Select 0",
        "uio[1]": "Delay Select 1",
        "uio[2]": "Delay Select 2",
        "uio[3]": "Delay Select 3",
        "uio[4]": "Delay Select 4",
        "uio[5]": "Beamformed PCM Output",
        "uio[6]": "Mic Clock",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_sushi_demo",
      "address": 451,
      "title": "zc-sushi-demo",
      "author": "Zachary Chen",
      "description": "sushi running",
      "clock_hz": 25200000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/zacharyzgc/zc-sushi-demo",
      "commit": "d2ab68559f2e88bc224c544dd1fe764883193f1f",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "vsync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_synth_simple_mm",
      "address": 433,
      "title": "synth_simple",
      "author": "MM",
      "description": "Simple monophonic synth with PWM output",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/maurizio-martina/synth_simple",
      "commit": "b0b605835fe7566ed41fc298584e0dd95b2327bc",
      "pinout": {
        "ui[0]": "note_enn_i[0]",
        "ui[1]": "note_enn_i[1]",
        "ui[2]": "note_enn_i[2]",
        "ui[3]": "note_enn_i[3]",
        "ui[4]": "note_enn_i[4]",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "pwm_left",
        "uo[1]": "pwm_right",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "sw_i[0]",
        "uio[1]": "sw_i[1]",
        "uio[2]": "sw_i[2]",
        "uio[3]": "sw_i[3]",
        "uio[4]": "sw_i[4]",
        "uio[5]": "sw_i[5]",
        "uio[6]": "sw_i[6]",
        "uio[7]": "sw_i[7]"
      }
    },
    {
      "macro": "tt_um_systolicLif",
      "address": 518,
      "title": "Basic model for Systollic array implementation of LIF",
      "author": "Sulaiman Islam",
      "description": "A model for systolic array implementation of LIF neurons. Hazard cases have been taken into account such as overstimulation of LIF nuerons with bypass cases.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/suaislam/tt09-ece110",
      "commit": "7e547ff10e48bf6a40a930ba6849d818651e631d",
      "pinout": {
        "ui[0]": "input current bit [0]",
        "ui[1]": "input current bit [1]",
        "ui[2]": "input current bit [2]",
        "ui[3]": "input current bit [3]",
        "ui[4]": "input current bit [4]",
        "ui[5]": "input current bit [5]",
        "ui[6]": "input current bit [6]",
        "ui[7]": "input current bit [7]",
        "uo[0]": "State variable bit [0]",
        "uo[1]": "State variable bit [1]",
        "uo[2]": "State variable bit [2]",
        "uo[3]": "State variable bit [3]",
        "uo[4]": "State variable bit [4]",
        "uo[5]": "State variable bit [5]",
        "uo[6]": "State variable bit [6]",
        "uo[7]": "State variable bit [7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "spike bit"
      }
    },
    {
      "macro": "tt_um_tappu_tobias1012",
      "address": 493,
      "title": "Tappu",
      "author": "Tobias Jensen",
      "description": "A simple 8 bit CPU inspired by the esoteric language BF",
      "clock_hz": 20,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tobias1012/tt10-tappu",
      "commit": "4343b9c0eae6d2a73fcdca4b700c982f078f7ad4",
      "pinout": {
        "ui[0]": "Input for Tappu",
        "ui[1]": "Input for Tappu",
        "ui[2]": "Input for Tappu",
        "ui[3]": "Input for Tappu",
        "ui[4]": "Input for Tappu",
        "ui[5]": "Input for Tappu",
        "ui[6]": "Input for Tappu",
        "ui[7]": "Input for Tappu",
        "uo[0]": "Output for Tappu",
        "uo[1]": "Output for Tappu",
        "uo[2]": "Output for Tappu",
        "uo[3]": "Output for Tappu",
        "uo[4]": "Output for Tappu",
        "uo[5]": "Output for Tappu",
        "uo[6]": "Output for Tappu",
        "uo[7]": "Output for Tappu",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tetrap_triggerer",
      "address": 618,
      "title": "triggerer",
      "author": "Krzysztof Skrzynecki",
      "description": "Module capturing timestamps of input signals (triggers) referenced to internal counter",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tetrap/tt10_triggerer",
      "commit": "a3895b97ee9d21c3eb81577099ab40761a6443a7",
      "pinout": {
        "ui[0]": "DAT_CLK",
        "ui[1]": "DAT_ENA",
        "ui[2]": "TRIGG_0",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "DAT_RDY",
        "uo[1]": "DAT_OUT",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_thexeno_rgbw_controller",
      "address": 225,
      "title": "RGBW Color Processor",
      "author": "Enrico Sanino",
      "description": "Color processor for RGBW LEDs, with generation of hue, tint and intensity based on a color index. Is also a direct SPI to 4 channels PWM converter.",
      "clock_hz": 66000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/thexeno/tt08-rgbw-controller",
      "commit": "88398e21373a5c0841b546c785e66b76fc3a3ade",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "test_pin",
        "ui[4]": "cs_n",
        "ui[5]": "sck",
        "ui[6]": "mosi",
        "ui[7]": "clk_div_en",
        "uo[0]": "red_pwm",
        "uo[1]": "green_pwm",
        "uo[2]": "blue_pwm",
        "uo[3]": "white_pwm",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "test_out_0",
        "uio[1]": "test_out_1",
        "uio[2]": "test_out_2",
        "uio[3]": "test_out_3",
        "uio[4]": "test_out_4",
        "uio[5]": "test_out_5",
        "uio[6]": "test_out_6",
        "uio[7]": "test_out_7"
      }
    },
    {
      "macro": "tt_um_tiny_shader_mole99",
      "address": 34,
      "title": "Tiny Shader",
      "author": "Leo Moser",
      "description": "With Tiny Shader you can write a small program to create different images and even animations.",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mole99/tt10-tiny-shader",
      "commit": "7dfbddd4d329ba55eeb4d666a2a4b2edcea1cc9c",
      "pinout": {
        "ui[0]": "mode",
        "ui[1]": "debug_i[0]",
        "ui[2]": "debug_i[1]",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R[1]",
        "uo[1]": "G[1]",
        "uo[2]": "B[1]",
        "uo[3]": "vsync",
        "uo[4]": "R[0]",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "CS",
        "uio[1]": "MOSI",
        "uio[2]": "MISO",
        "uio[3]": "SCK",
        "uio[4]": "next_vertical",
        "uio[5]": "next_frame",
        "uio[6]": "debug_o[0]",
        "uio[7]": "debug_o[1]"
      }
    },
    {
      "macro": "tt_um_tiny_ternary_tapeout",
      "address": 13,
      "title": "T3 (Tiny Ternary Tapeout)",
      "author": "Arnav Sacheti & Jack Adiletta",
      "description": "Ternary Matmul Processor",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/arnavsacheti/tt09-tiny-ternary-tapeout",
      "commit": "74d91a2eceb8aa3a2f540b2f128d2dd906f2d90c",
      "pinout": {
        "ui[0]": "A1",
        "ui[1]": "A2",
        "ui[2]": "A3",
        "ui[3]": "A4",
        "ui[4]": "A5",
        "ui[5]": "A6",
        "ui[6]": "A7",
        "ui[7]": "A8",
        "uo[0]": "Q1",
        "uo[1]": "Q2",
        "uo[2]": "Q3",
        "uo[3]": "Q4",
        "uo[4]": "Q5",
        "uo[5]": "Q6",
        "uo[6]": "Q7",
        "uo[7]": "Q8",
        "uio[0]": "B1",
        "uio[1]": "B2",
        "uio[2]": "B3",
        "uio[3]": "B4",
        "uio[4]": "B5",
        "uio[5]": "B6",
        "uio[6]": "B7",
        "uio[7]": "B8"
      }
    },
    {
      "macro": "tt_um_tiny_ternary_tapeout_csa",
      "address": 749,
      "title": "T3 (Tiny Ternary Tapeout) CSA ",
      "author": "Arnav Sacheti & Jack Adiletta",
      "description": "Ternary Matmul Processor using CSA",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/arnavsacheti/tt09-tiny-ternary-tapeout-csa",
      "commit": "cc45697da12008de8ca684bab1dac0936a0f64c2",
      "pinout": {
        "ui[0]": "A1",
        "ui[1]": "A2",
        "ui[2]": "A3",
        "ui[3]": "A4",
        "ui[4]": "A5",
        "ui[5]": "A6",
        "ui[6]": "A7",
        "ui[7]": "A8",
        "uo[0]": "Q1",
        "uo[1]": "Q2",
        "uo[2]": "Q3",
        "uo[3]": "Q4",
        "uo[4]": "Q5",
        "uo[5]": "Q6",
        "uo[6]": "Q7",
        "uo[7]": "Q8",
        "uio[0]": "B1",
        "uio[1]": "B2",
        "uio[2]": "B3",
        "uio[3]": "B4",
        "uio[4]": "B5",
        "uio[5]": "B6",
        "uio[6]": "B7",
        "uio[7]": "B8"
      }
    },
    {
      "macro": "tt_um_tinysynth",
      "address": 498,
      "title": "Tinysynth",
      "author": "Erling Rennemo Jellum",
      "description": "A tiny square wave oscillator accepting MIDI commands.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/erlingrj/tinysynth2",
      "commit": "6568355d9341b7af8f5490867d4fe721f9954a0b",
      "pinout": {
        "ui[0]": "a",
        "ui[1]": "b",
        "ui[2]": "c",
        "ui[3]": "d",
        "ui[4]": "e",
        "ui[5]": "f",
        "ui[6]": "g",
        "ui[7]": "h",
        "uo[0]": "x0",
        "uo[1]": "x1",
        "uo[2]": "x2",
        "uo[3]": "x3",
        "uo[4]": "x4",
        "uo[5]": "x5",
        "uo[6]": "x6",
        "uo[7]": "x7",
        "uio[0]": "b0",
        "uio[1]": "b1",
        "uio[2]": "b2",
        "uio[3]": "b3",
        "uio[4]": "b4",
        "uio[5]": "b5",
        "uio[6]": "b6",
        "uio[7]": "b7"
      }
    },
    {
      "macro": "tt_um_tinytapeout_logo_screensaver",
      "address": 481,
      "title": "VGA Screensaver with Tiny Tapeout Logo",
      "author": "Uri Shaked",
      "description": "Tiny Tapeout Logo bouncing around the screen (640x480, TinyVGA Pmod)",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt10-logo-screensaver",
      "commit": "970bb35f0b91c8ed0aaecd27e0810c1ac1f1b3b0",
      "pinout": {
        "ui[0]": "tile",
        "ui[1]": "solid_color",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "gamepad_latch",
        "ui[5]": "gamepad_clk",
        "ui[6]": "gamepad_data",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tmkong_rgb_mixer",
      "address": 359,
      "title": "RGB Mixer",
      "author": "Tianmin (Kevin) Kong",
      "description": "First ASIC Project!",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ktm0228/tt08-rgb-mixer",
      "commit": "236c6ff22b646225b3ad9cb77082642bcc4ee34f",
      "pinout": {
        "ui[0]": "enc0 a",
        "ui[1]": "enc0 b",
        "ui[2]": "enc1 a",
        "ui[3]": "enc1 b",
        "ui[4]": "enc2 a",
        "ui[5]": "enc2 b",
        "ui[6]": "debug bit 0",
        "ui[7]": "debug bit 1",
        "uo[0]": "pwm0",
        "uo[1]": "pwm1",
        "uo[2]": "pwm2",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "encoder bit 0",
        "uio[1]": "encoder bit 1",
        "uio[2]": "encoder bit 2",
        "uio[3]": "encoder bit 3",
        "uio[4]": "encoder bit 4",
        "uio[5]": "encoder bit 5",
        "uio[6]": "encoder bit 6",
        "uio[7]": "encoder bit 7"
      }
    },
    {
      "macro": "tt_um_tobimckellar_top",
      "address": 815,
      "title": "Simple PWM Module",
      "author": "Tobi McKellar",
      "description": "PWM for LED control.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Tobi-McKellar/tt09-led-driver",
      "commit": "2a98e951a6608cb386563ced62256ffd17721819",
      "pinout": {
        "ui[0]": "Manual mode PWM reference control",
        "ui[1]": "Manual mode PWM reference control",
        "ui[2]": "Manual mode PWM reference control",
        "ui[3]": "Manual mode PWM reference control",
        "ui[4]": "Manual mode PWM reference control",
        "ui[5]": "Manual mode PWM reference control",
        "ui[6]": "Toggle PWM breathe or manual mode",
        "ui[7]": "Enable PWM output",
        "uo[0]": "PWM output",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_toivoh_demo_deluxe",
      "address": 262,
      "title": "Sequential Shadows Deluxe [TT08 demo competition]",
      "author": "Toivo Henningsson",
      "description": "My contribution to the TT08 demo competition, extended version",
      "clock_hz": 50400000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/toivoh/tt08-demo-deluxe",
      "commit": "256dd86d49e56902b1c672e7f793a2a739e69ff5",
      "pinout": {
        "ui[0]": "v_bass_off",
        "ui[1]": "v_drums_off",
        "ui[2]": "v_bass_low",
        "ui[3]": "pause",
        "ui[4]": "rgb444_mode",
        "ui[5]": "pmod_vga_pinout",
        "ui[6]": "logo_shadow_off",
        "ui[7]": "step_frame",
        "uo[0]": "t_R1 / p_R0",
        "uo[1]": "t_G1 / p_R1",
        "uo[2]": "t_B1 / p_R2",
        "uo[3]": "t_vsync / p_R3",
        "uo[4]": "t_R0 / p_B0",
        "uo[5]": "t_G0 / p_B1",
        "uo[6]": "t_B0 / p_B2",
        "uo[7]": "t_hsync / p_B3",
        "uio[0]": "p_G0",
        "uio[1]": "p_G1",
        "uio[2]": "p_G2",
        "uio[3]": "p_G3",
        "uio[4]": "p_hsync",
        "uio[5]": "p_vsync",
        "uio[6]": "audio_out_n",
        "uio[7]": "audio_out"
      }
    },
    {
      "macro": "tt_um_toivoh_demo_tt08",
      "address": 167,
      "title": "Sequential Shadows [TT08 demo competition]",
      "author": "Toivo Henningsson",
      "description": "My contribution to the TT08 demo competition",
      "clock_hz": 50400000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/toivoh/tt08-demo",
      "commit": "bb6f67edee4f88f8e32c353aa6c68f921b2e7f77",
      "pinout": {
        "ui[0]": "v_bass_off",
        "ui[1]": "v_drums_off",
        "ui[2]": "v_bass_low",
        "ui[3]": "pause",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "step_frame",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "vsync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "audio_out"
      }
    },
    {
      "macro": "tt_um_toivoh_demo_tt10",
      "address": 710,
      "title": "Orion Iron Ion [TT10 demo competition]",
      "author": "Toivo Henningsson",
      "description": "My contribution to the TT10 demo competition",
      "clock_hz": 50400000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/toivoh/tt10-demo",
      "commit": "e3ca871299384f00b54b50b472e76466cc2020fa",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "advance[0]",
        "ui[7]": "advance[1]",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "vsync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "audio_out"
      }
    },
    {
      "macro": "tt_um_toivoh_pio_ram_emu_example",
      "address": 677,
      "title": "pio-ram-emulator example: Julia fractal",
      "author": "Toivo Henningsson",
      "description": "Example of using pio-ram-emulator to draw a Julia fractal",
      "clock_hz": 50400000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/toivoh/tt09-pio-ram-emulator-example",
      "commit": "cdd5c5701ea4d1b79aa99adb19441e2c5acbc164",
      "pinout": {
        "ui[0]": "button_up",
        "ui[1]": "button_down",
        "ui[2]": "button_right",
        "ui[3]": "button_left",
        "ui[4]": "button_incstep",
        "ui[5]": "button_decstep",
        "ui[6]": "",
        "ui[7]": "use_both_button_dirs",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "vsync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "tx_out[0]",
        "uio[5]": "tx_out[1]",
        "uio[6]": "rx_in[0]",
        "uio[7]": "rx_in[1]"
      }
    },
    {
      "macro": "tt_um_tommythorn_cgates",
      "address": 12,
      "title": "Cgates",
      "author": "Tommy Thorn",
      "description": "Testing two different Cgate implementations and rings",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tommythorn/tt09-tommythorn-cgates",
      "commit": "110b100245e3de4e79b475b22670a77386a66c77",
      "pinout": {
        "ui[0]": "A",
        "ui[1]": "B",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Ql",
        "uo[1]": "Qc",
        "uo[2]": "R4l",
        "uo[3]": "R4c",
        "uo[4]": "R16l",
        "uo[5]": "R16c",
        "uo[6]": "RTBDl",
        "uo[7]": "RTBDc",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tommythorn_maxbw",
      "address": 787,
      "title": "Asynchronous Multiplier",
      "author": "Tommy Thorn",
      "description": "An asynchronous multiplier",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tommythorn/tt08-maxbw",
      "commit": "1b9c1cd1bf449c20ed3a14937e97e5a5fcb23990",
      "pinout": {
        "ui[0]": "ack",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "req",
        "uo[1]": "result_0",
        "uo[2]": "result_1",
        "uo[3]": "result_2",
        "uo[4]": "result_3",
        "uo[5]": "result_4",
        "uo[6]": "result_5",
        "uo[7]": "result_6",
        "uio[0]": "result_7",
        "uio[1]": "result_8",
        "uio[2]": "result_9",
        "uio[3]": "result_10",
        "uio[4]": "result_11",
        "uio[5]": "result_12",
        "uio[6]": "result_13",
        "uio[7]": "result_14"
      }
    },
    {
      "macro": "tt_um_tommythorn_workshop",
      "address": 528,
      "title": "Workshop demo",
      "author": "Tommy Thorn",
      "description": "Just a demo",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tommythorn/tt09-tommythorn-workshop",
      "commit": "05b96d7d9ae22f15032276e6f59c802035280144",
      "pinout": {
        "ui[0]": "rx",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "tx",
        "uo[1]": "pdm_out",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_toniklippeo",
      "address": 106,
      "title": "toni_clk_gen",
      "author": "Antoni Ruiz",
      "description": "Multiple clock generation",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/toniklippeo/toni_clk_gen",
      "commit": "be2ec079d4ea3bb7b3b34c00bdd33787f6972596",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "clk_div1",
        "uo[1]": "clk_div2",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_top",
      "address": 297,
      "title": "Flame demo",
      "author": "Konrad Beckmann & Linus M\u00e5rtensson",
      "description": "Flame demo",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/kbeckmann/tt08-flame",
      "commit": "aad26d0e271c3a95495de35f3ea3c436debabba1",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "ui_out[0]",
        "uo[1]": "ui_out[1]",
        "uo[2]": "ui_out[2]",
        "uo[3]": "ui_out[3]",
        "uo[4]": "ui_out[4]",
        "uo[5]": "ui_out[5]",
        "uo[6]": "ui_out[6]",
        "uo[7]": "ui_out[7]",
        "uio[0]": "uio_out[0]",
        "uio[1]": "uio_out[1]",
        "uio[2]": "uio_out[2]",
        "uio[3]": "uio_out[3]",
        "uio[4]": "uio_out[4]",
        "uio[5]": "uio_out[5]",
        "uio[6]": "uio_out[6]",
        "uio[7]": "uio_out[7]"
      }
    },
    {
      "macro": "tt_um_torurstrom_async_lock",
      "address": 395,
      "title": "Asynchronous Locking Unit",
      "author": "T\u00f3rur Biskopst\u00f8 Str\u00f8m",
      "description": "An asynchronous lock with 8 request signals and 8 grant signals",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/torurstrom/tt10-async-lock",
      "commit": "bae25a90d7f67b5f318ade9a466e372a84b4db69",
      "pinout": {
        "ui[0]": "req0",
        "ui[1]": "req1",
        "ui[2]": "req2",
        "ui[3]": "req3",
        "ui[4]": "req4",
        "ui[5]": "req5",
        "ui[6]": "req6",
        "ui[7]": "req7",
        "uo[0]": "ack0",
        "uo[1]": "ack1",
        "uo[2]": "ack2",
        "uo[3]": "ack3",
        "uo[4]": "ack4",
        "uo[5]": "ack5",
        "uo[6]": "ack6",
        "uo[7]": "ack7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tt08_wirecube",
      "address": 163,
      "title": "Wirecube",
      "author": "Leo Moser",
      "description": "A demo for the Tiny Tapeout demoscene competition - see for yourself!",
      "clock_hz": 50350000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/mole99/tt08-wirecube",
      "commit": "857547a5af159221cbcc65d4112059c2d1a9b37e",
      "pinout": {
        "ui[0]": "toggle background bit 0",
        "ui[1]": "toggle background bit 1",
        "ui[2]": "toggle background bit 2",
        "ui[3]": "toggle cube bit 0",
        "ui[4]": "toggle cube bit 1",
        "ui[5]": "toggle cube bit 2",
        "ui[6]": "toggle speed bit 0",
        "ui[7]": "toggle speed bit 1",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VS",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HS",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_two_lif_stdp",
      "address": 79,
      "title": "Two LIF Neurons with STDP Learning",
      "author": "Sebastian Hernandez",
      "description": "A compact spiking neural network implementation featuring: - Two Leaky Integrate-and-Fire (LIF) neurons connected via plastic synapse - Spike-timing-dependent plasticity (STDP) for dynamic weight adjustment - 8-bit fixed-point arithmetic for state and weight representation - Real-time monitoring of spikes and synaptic weight",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jhern424/tt09-sebastianhernandez",
      "commit": "86ff219c6600023b84562c7b57a9f0ab12f3475f",
      "pinout": {
        "ui[0]": "Input current bit 0 (LSB)",
        "ui[1]": "Input current bit 1",
        "ui[2]": "Input current bit 2",
        "ui[3]": "Input current bit 3",
        "ui[4]": "Input current bit 4",
        "ui[5]": "Input current bit 5",
        "ui[6]": "Input current bit 6",
        "ui[7]": "Input current bit 7 (MSB)",
        "uo[0]": "Neuron 2 state bit 0 (LSB)",
        "uo[1]": "Neuron 2 state bit 1",
        "uo[2]": "Neuron 2 state bit 2",
        "uo[3]": "Neuron 2 state bit 3",
        "uo[4]": "Neuron 2 state bit 4",
        "uo[5]": "Neuron 2 state bit 5",
        "uo[6]": "Neuron 2 state bit 6",
        "uo[7]": "Neuron 2 state bit 7 (MSB)",
        "uio[0]": "Synapse weight bit 0 (LSB)",
        "uio[1]": "Synapse weight bit 1",
        "uio[2]": "Synapse weight bit 2",
        "uio[3]": "Synapse weight bit 3",
        "uio[4]": "Synapse weight bit 4",
        "uio[5]": "Synapse weight bit 5",
        "uio[6]": "Neuron 2 spike output",
        "uio[7]": "Neuron 1 spike output"
      }
    },
    {
      "macro": "tt_um_uart_bgdtanasa",
      "address": 716,
      "title": "ttUART",
      "author": "Bogdan Tanasa",
      "description": "UART",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/bgdtanasa/ttUART",
      "commit": "3bc23ee952809aff4a7660e8ec4b3cf676e9c4e0",
      "pinout": {
        "ui[0]": "rx_data_in",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "rx_data_ready",
        "uo[1]": "rx_sample_clk",
        "uo[2]": "tx_data_out",
        "uo[3]": "tx_data_done",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_uart_mvm",
      "address": 875,
      "title": "Matmul System",
      "author": "Abarajithan",
      "description": "Matmul System",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/SkillSurf/tinytapout-matmul-system",
      "commit": "110d85b1ef8e32502df4b59bea5b22a691c33c7f",
      "pinout": {
        "ui[0]": "RX",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "TX",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_uart_mvm_sys",
      "address": 3,
      "title": "Matmul System",
      "author": "Abarajithan",
      "description": "Matmul System",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/SkillSurf/tt09-matmul-system",
      "commit": "ef343f9bc9b9c0b5c5ecc533cf8ba585055d3039",
      "pinout": {
        "ui[0]": "RX",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "TX",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_udxs",
      "address": 578,
      "title": "Basic Perceptron + ReLU",
      "author": "UDXS",
      "description": "Basic Perceptron + ReLU Layer",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/UDXS/tt09-mlp",
      "commit": "79ec01b508ae52dbde35427e163c81373983a547",
      "pinout": {
        "ui[0]": "Weight[0]",
        "ui[1]": "Weight[1]",
        "ui[2]": "Weight[2]",
        "ui[3]": "Weight[3]",
        "ui[4]": "Input[0]",
        "ui[5]": "Input[1]",
        "ui[6]": "Input[2]",
        "ui[7]": "Input[3]",
        "uo[0]": "ReLU[0]",
        "uo[1]": "ReLU[1]",
        "uo[2]": "ReLU[2]",
        "uo[3]": "ReLU[3]",
        "uo[4]": "ReLU[4]",
        "uo[5]": "ReLU[5]",
        "uo[6]": "ReLU[6]",
        "uo[7]": "ReLU[7]",
        "uio[0]": "ReLU[8]",
        "uio[1]": "ReLU[9]",
        "uio[2]": "ReLU[10]",
        "uio[3]": "ReLU[11]",
        "uio[4]": "ReLU[12]",
        "uio[5]": "ReLU[13]",
        "uio[6]": "ReLU[14]",
        "uio[7]": "ReLU[15]"
      }
    },
    {
      "macro": "tt_um_ultra_tiny_cpu",
      "address": 98,
      "title": "UltraTiny-CPU",
      "author": "Rom\u00e9o Estezet",
      "description": "Simple 8-Bit CPU",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Romultra/UltraTiny-CPU",
      "commit": "536507df63dd3b4fa8c589e0d873bda5675826c3",
      "pinout": {
        "ui[0]": "Memory load address bit 0 (when ui[7]=1)",
        "ui[1]": "Memory load address bit 1 (when ui[7]=1)",
        "ui[2]": "Memory load address bit 2 (when ui[7]=1)",
        "ui[3]": "Memory load address bit 3 (when ui[7]=1)",
        "ui[4]": "Unused (available for other custom inputs)",
        "ui[5]": "Unused (available for other custom inputs)",
        "ui[6]": "Unused (available for other custom inputs)",
        "ui[7]": "Load mode enable (1=program load, 0=run)",
        "uo[0]": "Accumulator output bit 0",
        "uo[1]": "Accumulator output bit 1",
        "uo[2]": "Accumulator output bit 2",
        "uo[3]": "Accumulator output bit 3",
        "uo[4]": "Accumulator output bit 4",
        "uo[5]": "Accumulator output bit 5",
        "uo[6]": "Accumulator output bit 6",
        "uo[7]": "Accumulator output bit 7",
        "uio[0]": "Data bus bit 0 for load mode (input), otherwise tri-stated",
        "uio[1]": "Data bus bit 1 for load mode (input), otherwise tri-stated",
        "uio[2]": "Data bus bit 2 for load mode (input), otherwise tri-stated",
        "uio[3]": "Data bus bit 3 for load mode (input), otherwise tri-stated",
        "uio[4]": "Data bus bit 4 for load mode (input), otherwise tri-stated",
        "uio[5]": "Data bus bit 5 for load mode (input), otherwise tri-stated",
        "uio[6]": "Data bus bit 6 for load mode (input), otherwise tri-stated",
        "uio[7]": "Data bus bit 7 for load mode (input), otherwise tri-stated"
      }
    },
    {
      "macro": "tt_um_underserved",
      "address": 326,
      "title": "ITS-RISCV",
      "author": "Bambang T. Wibowo, Chazim Fikri A., Hernanda A. P., M. Hafidzh, Figo A. M., and Faiz S. K.",
      "description": "ITS RISC V based on the underserved TinyTapeout 07.",
      "clock_hz": 20000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/BambangTW/tt09-ITS-RISCV",
      "commit": "d4b51ef270cc89bc850e0242bf7f3947e36df050",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "gpio0",
        "uo[1]": "gpio1",
        "uo[2]": "gpio2",
        "uo[3]": "gpio3",
        "uo[4]": "gpio4",
        "uo[5]": "sclk",
        "uo[6]": "cs_n",
        "uo[7]": "mosi",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "miso"
      }
    },
    {
      "macro": "tt_um_urish_giant_ringosc",
      "address": 16,
      "title": "Giant Ring Oscillator (3853 inverters)",
      "author": "Uri Shaked",
      "description": "Configurable ring oscillator with up to 3853 inverters",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt09-giant-ring-oscillator",
      "commit": "795542b21e69c8b2479923dda0255edc4ad700d6",
      "pinout": {
        "ui[0]": "ring_in",
        "ui[1]": "internal_loopback",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "len1",
        "uo[1]": "len3",
        "uo[2]": "len5",
        "uo[3]": "len7",
        "uo[4]": "len11",
        "uo[5]": "len21",
        "uo[6]": "len51",
        "uo[7]": "len101",
        "uio[0]": "len201",
        "uio[1]": "len501",
        "uio[2]": "len1001",
        "uio[3]": "len2001",
        "uio[4]": "len3001",
        "uio[5]": "len3853",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_urish_sic1",
      "address": 234,
      "title": "SIC-1 8-bit SUBLEQ Single Instruction Computer",
      "author": "Uri Shaked",
      "description": "Hardware implementation of the 8-bit Single Instruction Computer",
      "clock_hz": 0,
      "tiles": "6x2",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt09-sic1",
      "commit": "9f8cb77c9747f58f884ffce7adcc596b1a5da6c4",
      "pinout": {
        "ui[0]": "in[0]",
        "ui[1]": "in[1]",
        "ui[2]": "in[2]",
        "ui[3]": "in[3]",
        "ui[4]": "in[4]",
        "ui[5]": "in[5]",
        "ui[6]": "in[6]",
        "ui[7]": "in[7]",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "run",
        "uio[1]": "halted",
        "uio[2]": "set_pc",
        "uio[3]": "load_data",
        "uio[4]": "out_strobe",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_urish_simon",
      "address": 425,
      "title": "Simon Says memory game",
      "author": "Uri Shaked",
      "description": "Repeat the sequence of colors and sounds to win the game",
      "clock_hz": 50000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt10-simon-game",
      "commit": "abcf605dc7b38c69764d32ab47bd92f6fa085b71",
      "pinout": {
        "ui[0]": "btn1",
        "ui[1]": "btn2",
        "ui[2]": "btn3",
        "ui[3]": "btn4",
        "ui[4]": "seginv",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "clk_sel",
        "uo[0]": "led1",
        "uo[1]": "led2",
        "uo[2]": "led3",
        "uo[3]": "led4",
        "uo[4]": "speaker",
        "uo[5]": "dig1",
        "uo[6]": "dig2",
        "uo[7]": "clk_internal",
        "uio[0]": "seg_a",
        "uio[1]": "seg_b",
        "uio[2]": "seg_c",
        "uio[3]": "seg_d",
        "uio[4]": "seg_e",
        "uio[5]": "seg_f",
        "uio[6]": "seg_g",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_uwasic_dinogame",
      "address": 722,
      "title": "UW ASIC - Optimized Dino",
      "author": "University of Waterloo ASIC Design Team",
      "description": "Dino game, but only 2 tiles!",
      "clock_hz": 25175000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/UW-ASIC/Dino",
      "commit": "5dd4233c7f66dda5a460c9b535351f3ac6103591",
      "pinout": {
        "ui[0]": "ui0",
        "ui[1]": "ui1",
        "ui[2]": "ui2",
        "ui[3]": "ui3",
        "ui[4]": "ui4",
        "ui[5]": "ui5",
        "ui[6]": "ui6",
        "ui[7]": "ui7",
        "uo[0]": "uo0",
        "uo[1]": "uo1",
        "uo[2]": "uo2",
        "uo[3]": "uo3",
        "uo[4]": "uo4",
        "uo[5]": "uo5",
        "uo[6]": "uo6",
        "uo[7]": "uo7",
        "uio[0]": "uio0",
        "uio[1]": "uio1",
        "uio[2]": "uio2",
        "uio[3]": "uio3",
        "uio[4]": "uio4",
        "uio[5]": "uio5",
        "uio[6]": "uio6",
        "uio[7]": "uio7"
      }
    },
    {
      "macro": "tt_um_vga_cbtest",
      "address": 291,
      "title": "Generate VGA output for Color Blindness Test",
      "author": "[Krushnasis Pradhan](https://www.linkedin.com/in/krushnasis-pradhan-35881518b/), [Aniruddha Ranade](https://www.linkedin.com/in/aniruddha-ranade/)",
      "description": "Generate VGA output which shall display the pattern similar to Ishihara Plates",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/AniruddhaRanade/TT08_VGA_CBTest",
      "commit": "7e9549940b329fa9876a7e44343c0ca4a804f869",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_vga_clock",
      "address": 435,
      "title": "VGA clock",
      "author": "Matt Venn",
      "description": "Shows the time on a VGA screen",
      "clock_hz": 31500000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/tt08-vga-clock",
      "commit": "3dbf4c08dbfe21d39603d2121dc41bd2c8650a0f",
      "pinout": {
        "ui[0]": "adjust hours",
        "ui[1]": "adjust minutes",
        "ui[2]": "adjust seconds",
        "ui[3]": "PMOD type select",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "hsync / R1",
        "uo[1]": "vsync / G1",
        "uo[2]": "B0 / B1",
        "uo[3]": "B1 / VS",
        "uo[4]": "G0 / R0",
        "uo[5]": "G1 / G0",
        "uo[6]": "R0 / B0",
        "uo[7]": "R1 / HS",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_vga_glyph_mode",
      "address": 769,
      "title": "Glyph Mode",
      "author": "James Ross",
      "description": "Submission for VGA Demoscene",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jar/tt08_vga_glyph_mode",
      "commit": "a0aac243a05f7eaea7c9b833bb8f79a568b8875f",
      "pinout": {
        "ui[0]": "Palette 0",
        "ui[1]": "Palette 1",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_virantha_enigma",
      "address": 431,
      "title": "Enigma - 52-bit Key Length",
      "author": "Virantha Ekanayake",
      "description": "Silicon implementation of an Enigma I machine with a limited plugboard supporting 3 wires",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/virantha/tt10-enigma",
      "commit": "2a74ccc42f262067ffa0f27a8383acf33a0162f6",
      "pinout": {
        "ui[0]": "din[0]",
        "ui[1]": "din[1]",
        "ui[2]": "din[2]",
        "ui[3]": "din[3]",
        "ui[4]": "din[4]",
        "ui[5]": "cmd[0]",
        "ui[6]": "cmd[1]",
        "ui[7]": "cmd[2]",
        "uo[0]": "seg[0]",
        "uo[1]": "seg[1]",
        "uo[2]": "seg[2]",
        "uo[3]": "seg[3]",
        "uo[4]": "seg[4]",
        "uo[5]": "seg[5]",
        "uo[6]": "seg[6]",
        "uo[7]": "GND",
        "uio[0]": "dout[0]",
        "uio[1]": "dout[1]",
        "uio[2]": "dout[3]",
        "uio[3]": "dout[4]",
        "uio[4]": "dout[5]",
        "uio[5]": "ready",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wallento_4bit_toycpu",
      "address": 4,
      "title": "4-Bit Toy CPU",
      "author": "Stefan Wallentowitz",
      "description": "This is a simple 4-bit CPU from a popular German textbook",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/wallento/tt09-4bit-toycpu",
      "commit": "f37ad0c05874a34a75e4d62b83dc33b9fd3b1583",
      "pinout": {
        "ui[0]": "usr_clk",
        "ui[1]": "usr_rst",
        "ui[2]": "scan_clk",
        "ui[3]": "scan_en",
        "ui[4]": "mem_grant",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "addr[0]",
        "uo[1]": "addr[1]",
        "uo[2]": "addr[2]",
        "uo[3]": "addr[3]",
        "uo[4]": "we",
        "uo[5]": "scan_out",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "data[0]",
        "uio[1]": "data[1]",
        "uio[2]": "data[2]",
        "uio[3]": "data[3]",
        "uio[4]": "data[4]",
        "uio[5]": "data[5]",
        "uio[6]": "data[6]",
        "uio[7]": "data[7]"
      }
    },
    {
      "macro": "tt_um_warp",
      "address": 644,
      "title": "Warp",
      "author": "sylefeb",
      "description": "Demo on TinyTapeout? Let's do something!",
      "clock_hz": 25000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/sylefeb/tt08-compo-entry",
      "commit": "7266e2b30d1f2941e256517aafdf2087d2b2cba3",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VS",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HS",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Audio"
      }
    },
    {
      "macro": "tt_um_whynot",
      "address": 687,
      "title": "Why not?",
      "author": "sylefeb",
      "description": "One tile something",
      "clock_hz": 25000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/sylefeb/tt08-fun",
      "commit": "1fa1d5e1052f74c6e4a81b58ed9260529608e1fa",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VS",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HS",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Audio (output)"
      }
    },
    {
      "macro": "tt_um_wokwi_407306064811090945",
      "address": 773,
      "title": "DDR throughput and flop aperature test",
      "author": "Eric Smith",
      "description": "Grab data on every edge of clock with varying pos pulse width",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ericsmi/tt08-ddr-throughput-test",
      "commit": "11ff0f101c878350a1e48ff97d9597847228abe2",
      "pinout": {
        "ui[0]": "pulse = 1 inv",
        "ui[1]": "pulse = 3 inv",
        "ui[2]": "pulse = 5 inv",
        "ui[3]": "pulse = 7 inv",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "q for pulse = 1 inv",
        "uo[1]": "q for pulse = 3 inv ",
        "uo[2]": "q for pulse = 5 inv",
        "uo[3]": "q for pulse = 7 inv",
        "uo[4]": "q for normal flop",
        "uo[5]": "1",
        "uo[6]": "1",
        "uo[7]": "clk",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_411379488132926465",
      "address": 430,
      "title": "Semana UCU Verilog",
      "author": "Universidad Cat\u00f3lica del Uruguay",
      "description": "Union of proyects done in class",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Franco-Barto/Semana_UCU_verilog",
      "commit": "fa41d2c56a9a5ff5c3d8bd7276cc50e3ccce0cc2",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "mux_in[0]",
        "ui[5]": "mux_in[1]",
        "ui[6]": "mux_in[2]",
        "ui[7]": "mux_in[3]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_411783629732984833",
      "address": 110,
      "title": "BINCounterAndGates",
      "author": "conrad franke",
      "description": "Binary counter with io gates",
      "clock_hz": 1,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "6c76de4f7c01c127a7b9dd1ae0ecc60daeb43d07",
      "pinout": {
        "ui[0]": "IN0",
        "ui[1]": "IN1",
        "ui[2]": "IN2",
        "ui[3]": "IN3",
        "ui[4]": "IN4",
        "ui[5]": "IN5",
        "ui[6]": "IN6",
        "ui[7]": "IN7",
        "uo[0]": "OUT0",
        "uo[1]": "OUT1",
        "uo[2]": "OUT2",
        "uo[3]": "OUT3",
        "uo[4]": "OUT4",
        "uo[5]": "OUT5",
        "uo[6]": "OUT6",
        "uo[7]": "OUT7",
        "uio[0]": "D0",
        "uio[1]": "D1",
        "uio[2]": "D2",
        "uio[3]": "D3",
        "uio[4]": "D4",
        "uio[5]": "D5",
        "uio[6]": "D6",
        "uio[7]": "D7"
      }
    },
    {
      "macro": "tt_um_wokwi_412635532198550529",
      "address": 112,
      "title": "tt09-pettit-wokproc-trainer",
      "author": "Ken Pettit",
      "description": "An 8-bit CPU trainer",
      "clock_hz": 10000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "a6d81f2783dbd323841968a2108a51f2c44246b5",
      "pinout": {
        "ui[0]": "op/imm[0]",
        "ui[1]": "op/imm[1]",
        "ui[2]": "op/imm[2]",
        "ui[3]": "op/imm[3]",
        "ui[4]": "op/imm[4]",
        "ui[5]": "op/imm[5]",
        "ui[6]": "op/imm[6]",
        "ui[7]": "op/imm[7]",
        "uo[0]": "seg_a",
        "uo[1]": "seg_b",
        "uo[2]": "seg_c",
        "uo[3]": "seg_d",
        "uo[4]": "seg_e",
        "uo[5]": "seg_f",
        "uo[6]": "seg_g",
        "uo[7]": "seg_dp",
        "uio[0]": "load_opcode",
        "uio[1]": "execute_opcode",
        "uio[2]": "sevenSeg_binary",
        "uio[3]": "digit_select",
        "uio[4]": "manual_digit",
        "uio[5]": "digit_a_reg",
        "uio[6]": "carry_out",
        "uio[7]": "zero_out"
      }
    },
    {
      "macro": "tt_um_wokwi_413385294512575489",
      "address": 114,
      "title": "Duffy",
      "author": "Jonathan Duffy",
      "description": "trying out an oscillator or delay line",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "715f10e456fe8ae30b0e4e1392ee99e192708f1a",
      "pinout": {
        "ui[0]": "IN0",
        "ui[1]": "IN1",
        "ui[2]": "IN2",
        "ui[3]": "IN3",
        "ui[4]": "IN4",
        "ui[5]": "IN5",
        "ui[6]": "IN6",
        "ui[7]": "IN7",
        "uo[0]": "OUT0",
        "uo[1]": "OUT1",
        "uo[2]": "OUT2",
        "uo[3]": "OUT3",
        "uo[4]": "OUT4",
        "uo[5]": "OUT5",
        "uo[6]": "OUT6",
        "uo[7]": "OUT7",
        "uio[0]": "D0",
        "uio[1]": "D1",
        "uio[2]": "D2",
        "uio[3]": "D3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_413386991502909441",
      "address": 258,
      "title": "SPI Logic Analyzer with Charlieplexed Display",
      "author": "ParallelLogic-",
      "description": "Displays contents of register map on charlieplexed display.  Generates waveforms for PWM, UART, WS2812 in response to trigger.",
      "clock_hz": 10000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/parallellogic-/TinyTapeoutLogic2024A",
      "commit": "d6be687f74bebc59ffe3a60895f4014474a9cab5",
      "pinout": {
        "ui[0]": "CS",
        "ui[1]": "SCLK",
        "ui[2]": "MOSI",
        "ui[3]": "TRIGGER",
        "ui[4]": "ASIC_IN_0",
        "ui[5]": "ASIC_IN_1",
        "ui[6]": "ASIC_IN_2",
        "ui[7]": "ASIC_IN_3",
        "uo[0]": "ASIC_OUT_0",
        "uo[1]": "ASIC_OUT_1",
        "uo[2]": "ASIC_OUT_2",
        "uo[3]": "ASIC_OUT_3",
        "uo[4]": "ASIC_OUT_4",
        "uo[5]": "ASIC_OUT_5",
        "uo[6]": "ASIC_OUT_6",
        "uo[7]": "MISO",
        "uio[0]": "MAT0",
        "uio[1]": "MAT1",
        "uio[2]": "MAT2",
        "uio[3]": "MAT3",
        "uio[4]": "MAT4",
        "uio[5]": "MAT5",
        "uio[6]": "MAT6",
        "uio[7]": "MAT7"
      }
    },
    {
      "macro": "tt_um_wokwi_413387014781302785",
      "address": 562,
      "title": "L display",
      "author": "Matt Lamparter",
      "description": "Displays L character on a 7 seg display when 00101111 entered on the input (and pressing the Step button to enable display)",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "d4c9ffb2f4bbefc154c65097cd60b52e8539bc90",
      "pinout": {
        "ui[0]": "IN0",
        "ui[1]": "IN1",
        "ui[2]": "IN2",
        "ui[3]": "IN3",
        "ui[4]": "IN4",
        "ui[5]": "IN5",
        "ui[6]": "IN6",
        "ui[7]": "IN7",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "OUT3",
        "uo[4]": "OUT4",
        "uo[5]": "OUT5",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_413387065339458561",
      "address": 675,
      "title": "APA102 to WS2812 Translator",
      "author": "Squidgeefish",
      "description": "Convert a 7-LED APA102 stream to a WS2812-compatible one",
      "clock_hz": 25000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/squidgeefish/TT09",
      "commit": "5ede2c18b39face5fe607c45c25e8b98460c4e2c",
      "pinout": {
        "ui[0]": "APA102_CK",
        "ui[1]": "APA102_SD",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "WS2812_OUT",
        "uo[1]": "UART_OUT",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_413387093939376129",
      "address": 560,
      "title": "sphereinabox hello",
      "author": "Nick Winters",
      "description": "Hello World",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "19664912f22c7c2532a61ae2f3cdaa1c0cd76eec",
      "pinout": {
        "ui[0]": "IN0",
        "ui[1]": "IN1",
        "ui[2]": "IN2",
        "ui[3]": "IN3",
        "ui[4]": "IN4",
        "ui[5]": "IN5",
        "ui[6]": "IN6",
        "ui[7]": "IN7",
        "uo[0]": "OUT0",
        "uo[1]": "OUT1",
        "uo[2]": "OUT2",
        "uo[3]": "OUT3",
        "uo[4]": "OUT4",
        "uo[5]": "OUT5",
        "uo[6]": "OUT6",
        "uo[7]": "OUT7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_413387190167208961",
      "address": 558,
      "title": "Will It NAND?",
      "author": "Daniel Samarin",
      "description": "A bunch of nand gates to test the tool chain... for now.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "f8090e57c70745246252bd0b00d140724ccbbf8a",
      "pinout": {
        "ui[0]": "NAND1a",
        "ui[1]": "NAND1b",
        "ui[2]": "NAND2a",
        "ui[3]": "NAND2b",
        "ui[4]": "NAND3a",
        "ui[5]": "NAND3b",
        "ui[6]": "NAND4a",
        "ui[7]": "NAND4b",
        "uo[0]": "NAND1out",
        "uo[1]": "NAND2out",
        "uo[2]": "NAND3out",
        "uo[3]": "NAND4out",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_414120248222232577",
      "address": 530,
      "title": "A Tale of Two NCOs",
      "author": "Mike Ng",
      "description": "Two NCOs enter, one signal leaves",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mng2/tt09-wokwi",
      "commit": "43f4031280837dd3aaa56504b57ff42a7e3e6bad",
      "pinout": {
        "ui[0]": "phase_incr_A[0]",
        "ui[1]": "phase_incr_A[1]",
        "ui[2]": "phase_incr_A[2]",
        "ui[3]": "phase_incr_A[3]",
        "ui[4]": "phase_incr_A[4]",
        "ui[5]": "phase_incr_A[5]",
        "ui[6]": "phase_incr_A[6]",
        "ui[7]": "filter_on",
        "uo[0]": "OUT0",
        "uo[1]": "OUT1",
        "uo[2]": "OUT2",
        "uo[3]": "OUT3",
        "uo[4]": "OUT4",
        "uo[5]": "OUT5",
        "uo[6]": "OUT6",
        "uo[7]": "OUT7",
        "uio[0]": "phase_incr_B[0]",
        "uio[1]": "phase_incr_B[1]",
        "uio[2]": "phase_incr_B[2]",
        "uio[3]": "phase_incr_B[3]",
        "uio[4]": "phase_incr_B[4]",
        "uio[5]": "phase_incr_B[5]",
        "uio[6]": "low_amplitude_B",
        "uio[7]": "bypass_B"
      }
    },
    {
      "macro": "tt_um_wokwi_422960078645704705",
      "address": 499,
      "title": "Hero on Tape",
      "author": "Marcus Sand",
      "description": "Echoes out a predefined text onto a 16x2 character LCD.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/HeroGamers/Tiny-Tapeout-Hero",
      "commit": "f0f49a85dbe8654f42852e8f2d879250ada0dffd",
      "pinout": {
        "ui[0]": "CLK",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "RS",
        "uo[1]": "E",
        "uo[2]": "D4",
        "uo[3]": "D5",
        "uo[4]": "D6",
        "uo[5]": "D7",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_group_1",
      "address": 556,
      "title": "Wokwi Group #1",
      "author": "Tiny Tapeout",
      "description": "Combined project to save space for ttihp25a",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tinytapeout-ihp-25a-sources",
      "commit": "5b1976070a132a4131fff81d987df8b4013cd1bd",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "sel0",
        "uio[1]": "sel1",
        "uio[2]": "sel2",
        "uio[3]": "sel3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_group_10",
      "address": 612,
      "title": "Wokwi Group #10",
      "author": "Tiny Tapeout",
      "description": "Combined project to save space for ttihp25a",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "1ed7d60f41da1ae311d9388eb5301397b03b9282",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "sel0",
        "uio[1]": "sel1",
        "uio[2]": "sel2",
        "uio[3]": "sel3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_group_11",
      "address": 614,
      "title": "Wokwi Group #11",
      "author": "Tiny Tapeout",
      "description": "Combined project to save space for ttihp25a",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "92c37cb09aa9ba64200d6e399f61ade81f56a2c5",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "sel0",
        "uio[1]": "sel1",
        "uio[2]": "sel2",
        "uio[3]": "sel3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_group_12",
      "address": 616,
      "title": "Wokwi Group #12",
      "author": "Tiny Tapeout",
      "description": "Combined project to save space for ttihp25a",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "92f327d08f340c3a572bea5909ef4ba8c64536c1",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "sel0",
        "uio[1]": "sel1",
        "uio[2]": "sel2",
        "uio[3]": "sel3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_group_13",
      "address": 620,
      "title": "Wokwi Group #13",
      "author": "Tiny Tapeout",
      "description": "Combined project to save space for ttihp25a",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "1fda490fcc059faac3ce3ebb9e0f148aec98da3a",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "sel0",
        "uio[1]": "sel1",
        "uio[2]": "sel2",
        "uio[3]": "sel3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_group_2",
      "address": 554,
      "title": "Wokwi Group #2",
      "author": "Tiny Tapeout",
      "description": "Combined project to save space for ttihp25a",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "92c37cb09aa9ba64200d6e399f61ade81f56a2c5",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "sel0",
        "uio[1]": "sel1",
        "uio[2]": "sel2",
        "uio[3]": "sel3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_group_3",
      "address": 552,
      "title": "Wokwi Group #3",
      "author": "Tiny Tapeout",
      "description": "Combined project to save space for ttihp25a",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "1fda490fcc059faac3ce3ebb9e0f148aec98da3a",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "sel0",
        "uio[1]": "sel1",
        "uio[2]": "sel2",
        "uio[3]": "sel3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_group_4",
      "address": 550,
      "title": "Wokwi Group #4",
      "author": "Tiny Tapeout",
      "description": "Combined project to save space for ttihp25a",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "92c37cb09aa9ba64200d6e399f61ade81f56a2c5",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "sel0",
        "uio[1]": "sel1",
        "uio[2]": "sel2",
        "uio[3]": "sel3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_group_5",
      "address": 548,
      "title": "Wokwi Group #5",
      "author": "Tiny Tapeout",
      "description": "Combined project to save space for ttihp25a",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "1fda490fcc059faac3ce3ebb9e0f148aec98da3a",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "sel0",
        "uio[1]": "sel1",
        "uio[2]": "sel2",
        "uio[3]": "sel3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_group_6",
      "address": 546,
      "title": "Wokwi Group #6",
      "author": "Tiny Tapeout",
      "description": "Combined project to save space for ttihp25a",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "1fda490fcc059faac3ce3ebb9e0f148aec98da3a",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "sel0",
        "uio[1]": "sel1",
        "uio[2]": "sel2",
        "uio[3]": "sel3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_group_7",
      "address": 544,
      "title": "Wokwi Group #7",
      "author": "Tiny Tapeout",
      "description": "Combined project to save space for ttihp25a",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "1ed7d60f41da1ae311d9388eb5301397b03b9282",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "sel0",
        "uio[1]": "sel1",
        "uio[2]": "sel2",
        "uio[3]": "sel3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_group_8",
      "address": 608,
      "title": "Wokwi Group #8",
      "author": "Tiny Tapeout",
      "description": "Combined project to save space for ttihp25a",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "b9b72463c25787fdfbc10188c002e6b5af785321",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "sel0",
        "uio[1]": "sel1",
        "uio[2]": "sel2",
        "uio[3]": "sel3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_group_9",
      "address": 610,
      "title": "Wokwi Group #9",
      "author": "Tiny Tapeout",
      "description": "Combined project to save space for ttihp25a",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/dummy",
      "commit": "da4a0330fedd5c8789ec717d74f6770b9afa5b69",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "sel0",
        "uio[1]": "sel1",
        "uio[2]": "sel2",
        "uio[3]": "sel3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wrapper",
      "address": 419,
      "title": "6Digit7SegClock",
      "author": "Patrick Lampl",
      "description": "A digital clock multiplexed to a 6 digit 7 segment display",
      "clock_hz": 32768,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/meisterlampe99/tt10-6Digit7SegClock",
      "commit": "af834dfbdd83dea6eb7389580c9ce1dd6691c4d4",
      "pinout": {
        "ui[0]": "minute increment",
        "ui[1]": "hour increment",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "segment g",
        "uo[1]": "segment f",
        "uo[2]": "segment e",
        "uo[3]": "segment d",
        "uo[4]": "segment c",
        "uo[5]": "segment b",
        "uo[6]": "segment a",
        "uo[7]": "segment dot",
        "uio[0]": "digit ena second ones",
        "uio[1]": "digit ena second tens",
        "uio[2]": "digit ena minute ones",
        "uio[3]": "digit ena minute tens",
        "uio[4]": "digit ena hour ones",
        "uio[5]": "digit ena hour tens",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_xor_encryption",
      "address": 423,
      "title": "Xor-Logic",
      "author": "Haohua Li",
      "description": "A xor logic from input to output pins",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/eggfly/tt10-xor-logic",
      "commit": "47ca3715a6333cf243bf6839ffb6041b6cb4571d",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_in[0]",
        "uio[1]": "uio_in[1]",
        "uio[2]": "uio_in[2]",
        "uio[3]": "uio_in[3]",
        "uio[4]": "uio_in[4]",
        "uio[5]": "uio_in[5]",
        "uio[6]": "uio_in[6]",
        "uio[7]": "uio_in[7]"
      }
    },
    {
      "macro": "tt_um_yuri_panchul_adder_with_flow_control",
      "address": 134,
      "title": "Adder with Flow Control",
      "author": "Yuri Panchul",
      "description": "An adder with a separate flow control for each argument and the result",
      "clock_hz": 3,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/yuri-panchul/tt08-adder-with-flow-control",
      "commit": "896f7f9fc2ab6bfc240afed0df5426ed43638858",
      "pinout": {
        "ui[0]": "a_vld",
        "ui[1]": "b_vld",
        "ui[2]": "sum_rdy",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "a_rdy",
        "uo[1]": "b_rdy",
        "uo[2]": "sum_vld",
        "uo[3]": "sum_data[0]",
        "uo[4]": "sum_data[1]",
        "uo[5]": "sum_data[2]",
        "uo[6]": "sum_data[3]",
        "uo[7]": "sum_data[4]",
        "uio[0]": "a_data[0]",
        "uio[1]": "a_data[1]",
        "uio[2]": "a_data[2]",
        "uio[3]": "a_data[3]",
        "uio[4]": "b_data[0]",
        "uio[5]": "b_data[1]",
        "uio[6]": "b_data[2]",
        "uio[7]": "b_data[3]"
      }
    },
    {
      "macro": "tt_um_yuri_panchul_schoolriscv_cpu_with_fibonacci_program",
      "address": 231,
      "title": "schoolRISCV CPU with Fibonacci program",
      "author": "Stanislav Zhelnio, Alexander Romanov, Yuri Panchul and Mike Kuskov",
      "description": "A minimalistic SoC with a schoolRISCV educational CPU and a ROM memory with a program that computes the Fibonacci numbers.",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/ddvca/tt08-schoolriscv-cpu-with-fibonacci-program",
      "commit": "49db03c9ae7d1715a3798fcf6bdd3a83d7bf1eb6",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Test pass",
        "uo[1]": "Test fail",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "CPU reg a0[0]",
        "uio[1]": "a0[1]",
        "uio[2]": "a0[2]",
        "uio[3]": "a0[3]",
        "uio[4]": "Program Counter pc[0]",
        "uio[5]": "pc[1]",
        "uio[6]": "pc[2]",
        "uio[7]": "pc[3]"
      }
    },
    {
      "macro": "tt_um_yuri_panchul_sea_battle_vga_game",
      "address": 235,
      "title": "Sea Battle",
      "author": "Yuri Panchul",
      "description": "Sea Battle is a VGA game with sprites for the Tiny Tapeout Demoscene competition.",
      "clock_hz": 23000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/yuri-panchul/tt08-sea-battle-vga-game",
      "commit": "220bfeeb51e2972c40e2887761fe0ed321afcc40",
      "pinout": {
        "ui[0]": "Key right",
        "ui[1]": "Key left",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "VGA red [1]",
        "uo[1]": "VGA green [1]",
        "uo[2]": "VGA blue [1]",
        "uo[3]": "VGA vsync",
        "uo[4]": "VGA red [0]",
        "uo[5]": "VGA green [0]",
        "uo[6]": "VGA blue [0]",
        "uo[7]": "VGA hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_z2a_rgb_mixer",
      "address": 82,
      "title": "RGB Mixer demo",
      "author": "Matt Venn",
      "description": "Zero to ASIC demo project",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/tt08-rgb-mixer",
      "commit": "3ead7ef61ae8a22138e3b37f86e1ce758b6d2da0",
      "pinout": {
        "ui[0]": "enc0 a",
        "ui[1]": "enc0 b",
        "ui[2]": "enc1 a",
        "ui[3]": "enc1 b",
        "ui[4]": "enc2 a",
        "ui[5]": "enc2 b",
        "ui[6]": "debug bit 0",
        "ui[7]": "debug bit 1",
        "uo[0]": "pwm0",
        "uo[1]": "pwm1",
        "uo[2]": "pwm2",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "encoder bit 0",
        "uio[1]": "encoder bit 1",
        "uio[2]": "encoder bit 2",
        "uio[3]": "encoder bit 3",
        "uio[4]": "encoder bit 4",
        "uio[5]": "encoder bit 5",
        "uio[6]": "encoder bit 6",
        "uio[7]": "encoder bit 7"
      }
    },
    {
      "macro": "tt_um_zec_square1",
      "address": 840,
      "title": "\"SQUARE-1\": VGA/audio demo",
      "author": "Zachary Catlin",
      "description": "On video: munching squares. On audio: the logistic map.",
      "clock_hz": 25200000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/zec/tt08-square1",
      "commit": "3ffb0b92796285a12e370371a42e1e0024848e83",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSYNC",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSYNC",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "PWM audio out"
      }
    },
    {
      "macro": "tt_um_zedulo_spitest1",
      "address": 455,
      "title": "SimpleSPIdev",
      "author": "Zedulo",
      "description": "SPI device with GPIO/mem interface",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ZeduloAdmin/TT10_SPICtrl",
      "commit": "fa9b6e467b0b6de84c66ddf11628ba98dd2f15ec",
      "pinout": {
        "ui[0]": "SPI MOSI",
        "ui[1]": "SPI CLK",
        "ui[2]": "SPI CS",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "SPI MISO",
        "uo[1]": "debug",
        "uo[2]": "system clk mirror",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "status",
        "uo[7]": "spi reset status",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_zhouzhouthezhou_adder",
      "address": 393,
      "title": "tt10_zhouzhouthezhou_adder",
      "author": "Kyle Zhou",
      "description": "Adds 2 4bit numbers and displays the output on the 8 segment",
      "clock_hz": 16000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/zhouzhouthezhou/tt10-zhouzhouthezhou-adder",
      "commit": "155a28bc07369a0490b7a144fcc52e35d2357dc5",
      "pinout": {
        "ui[0]": "ui_0",
        "ui[1]": "ui_1",
        "ui[2]": "ui_2",
        "ui[3]": "ui_3",
        "ui[4]": "ui_4",
        "ui[5]": "ui_5",
        "ui[6]": "ui_6",
        "ui[7]": "ui_7",
        "uo[0]": "uo_1",
        "uo[1]": "uo_2",
        "uo[2]": "uo_3",
        "uo[3]": "uo_4",
        "uo[4]": "uo_5",
        "uo[5]": "uo_6",
        "uo[6]": "uo_7",
        "uo[7]": "uo_8",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_znah_vga_ca",
      "address": 745,
      "title": "znah_vga_ca",
      "author": "Alexander Mordvintsev",
      "description": "Simple VGA 1D cellular automata generator",
      "clock_hz": 25175000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/znah/tt09-vga-ca",
      "commit": "a77f183a849135d80e1e54ad2f83142638f39eb6",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_zoom_zoom",
      "address": 242,
      "title": "Zoom Zoom",
      "author": "Justin T, Andrew H, Simon Y, Kellen Y, Vallabh A, Nicole C",
      "description": "Custom Cpu with custome external memory bus and sha-3 and CORDIC accelerators",
      "clock_hz": 60000000,
      "tiles": "4x2",
      "analog_pins": [],
      "repo": "https://github.com/ringedSquid/BWSI-ASICS-24-Zoom-Zoom",
      "commit": "0e5654aa1e428432a9c5e632ddcdbe02aa33bd21",
      "pinout": {
        "ui[0]": "lower_byte_in",
        "ui[1]": "upper_byte_in",
        "ui[2]": "rx",
        "ui[3]": "IN3",
        "ui[4]": "IN4",
        "ui[5]": "IN5",
        "ui[6]": "IN6",
        "ui[7]": "IN7",
        "uo[0]": "write_enable",
        "uo[1]": "register_enable",
        "uo[2]": "read_enable",
        "uo[3]": "lower_bit",
        "uo[4]": "tx",
        "uo[5]": "upper_bit",
        "uo[6]": "OUT6",
        "uo[7]": "OUT7",
        "uio[0]": "DATA0",
        "uio[1]": "DATA1",
        "uio[2]": "DATA2",
        "uio[3]": "DATA3",
        "uio[4]": "DATA4",
        "uio[5]": "DATA5",
        "uio[6]": "DATA6",
        "uio[7]": "DATA7"
      }
    }
  ]
}