{
  "version": 3,
  "id": "tt07",
  "name": "Tiny Tapeout 7",
  "repo": "https://github.com/TinyTapeout/tinytapeout-07",
  "commit": "a656c24ab0f65f01939a00a6c971395a0d596bad",
  "updated": "2024-06-04T05:53:40Z",
  "projects": [
    {
      "macro": "tt_um_28add11_QOAdecode",
      "address": 326,
      "title": "QOA Decoder",
      "author": "Nicholas West",
      "description": "A decoder for the QOA audio format.",
      "clock_hz": 30303030,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/28add11/tt07_qoa_decode",
      "commit": "593ae752357e232fbc652ca066c163b3c4014d69",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "CS",
        "uio[1]": "MOSI",
        "uio[2]": "MISO",
        "uio[3]": "SCK",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_6bitaddr",
      "address": 2,
      "title": "6 bit addr",
      "author": "Nigel Coburn, Jason Murray",
      "description": "6 bit addr, with continuous assignment (no clock)",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/njcoburn/tt07-verilog-template",
      "commit": "4d331efc20d33be2a606883539cc3571cfa95ce5",
      "pinout": {
        "ui[0]": "0th bit for A input",
        "ui[1]": "1st bit for A input",
        "ui[2]": "2nd bit for A input",
        "ui[3]": "3rd bit for A input",
        "ui[4]": "4th bit for A input",
        "ui[5]": "5th bit for A input",
        "ui[6]": "Input Carry bit",
        "ui[7]": "",
        "uo[0]": "0th bit for A+B",
        "uo[1]": "1st bit for A+B",
        "uo[2]": "2nd bit for A+B",
        "uo[3]": "3rd bit for A+B",
        "uo[4]": "4th bit for A+B",
        "uo[5]": "5th bit for A+B",
        "uo[6]": "Output Carry bit",
        "uo[7]": "",
        "uio[0]": "0th bit for B input",
        "uio[1]": "1st bit for B input",
        "uio[2]": "2nd bit for B input",
        "uio[3]": "3rd bit for B input",
        "uio[4]": "4th bit for B input",
        "uio[5]": "5th bit for B input",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_8bit_vector_compute_in_SRAM",
      "address": 642,
      "title": "8-bit Vector Compute-in-SRAM",
      "author": "Ramyad Hadidi",
      "description": "8-bit Vectorized Compute-in-SRAM",
      "clock_hz": 0,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/ramyadhadidi/tt07-8bit-vector-compute-in-SRAM",
      "commit": "5f9c5f7b862115bc0431242f63e472443a60c9db",
      "pinout": {
        "ui[0]": "Address bit 0",
        "ui[1]": "Address bit 1",
        "ui[2]": "Address bit 2",
        "ui[3]": "Address bit 3",
        "ui[4]": "Address bit 4",
        "ui[5]": "Address bit 5",
        "ui[6]": "Op Code bit 0",
        "ui[7]": "Op Code bit 1",
        "uo[0]": "Data out bit 0",
        "uo[1]": "Data out bit 1",
        "uo[2]": "Data out bit 2",
        "uo[3]": "Data out bit 3",
        "uo[4]": "Data out bit 4",
        "uo[5]": "Data out bit 5",
        "uo[6]": "Data out bit 6",
        "uo[7]": "Data out bit 7",
        "uio[0]": "Data in bit 0",
        "uio[1]": "Data in bit 1",
        "uio[2]": "Data in bit 2",
        "uio[3]": "Data in bit 3",
        "uio[4]": "Data in bit 4",
        "uio[5]": "Data in bit 5",
        "uio[6]": "Data in bit 6",
        "uio[7]": "Data in bit 7"
      }
    },
    {
      "macro": "tt_um_8bitadder",
      "address": 132,
      "title": "Ripple Carry Adder 8 bit",
      "author": "Jason Kaufmann",
      "description": "Adds two 8 bit numbers together",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/jasonkaufmann/tt07-fulladder8bit",
      "commit": "2b41da0954d1ae978194d643b684a6e1dd676a10",
      "pinout": {
        "ui[0]": "A0",
        "ui[1]": "A1",
        "ui[2]": "A2",
        "ui[3]": "A3",
        "ui[4]": "A4",
        "ui[5]": "A5",
        "ui[6]": "A6",
        "ui[7]": "A7",
        "uo[0]": "OUT0",
        "uo[1]": "OUT1",
        "uo[2]": "OUT2",
        "uo[3]": "OUT3",
        "uo[4]": "OUT4",
        "uo[5]": "OUT5",
        "uo[6]": "OUT6",
        "uo[7]": "OUT7",
        "uio[0]": "B0",
        "uio[1]": "B1",
        "uio[2]": "B2",
        "uio[3]": "B3",
        "uio[4]": "B4",
        "uio[5]": "B5",
        "uio[6]": "B6",
        "uio[7]": "B7"
      }
    },
    {
      "macro": "tt_um_Burrows_Katie",
      "address": 526,
      "title": "QIF Neuron",
      "author": "Katie Burrows and David Parent",
      "description": "Models a QIF spiking neuron ",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        6,
        10,
        7,
        9,
        8
      ],
      "repo": "https://github.com/davidparent/tt_resistor_test",
      "commit": "01f0f525e8f165f4b26abdb1ebd48f28579b67a1",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "Vout",
        "ua[1]": "Vinp",
        "ua[2]": "Vinn",
        "ua[3]": "VoutM",
        "ua[4]": "VinM",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_CktA_InstAmp",
      "address": 239,
      "title": "Instrumentation Amplifier for Electrocardiogram Signal Adquisition",
      "author": "Rocha Judith Rocha-Torres",
      "description": "The amplifier gatters the electrical signal coming from the skin/muscles over the heart",
      "clock_hz": 0,
      "tiles": "3x2",
      "analog_pins": [
        5,
        0,
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/PatriciaJRT/tt07-analog-template",
      "commit": "48b7adfe65d8edec46015d3d4ffb34b017519d94",
      "pinout": {
        "ui[0]": "Sel_42dB",
        "ui[1]": "Sel_26dB",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "vo",
        "ua[1]": "AGND",
        "ua[2]": "VirGND_FB",
        "ua[3]": "VirGND_Out",
        "ua[4]": "Vin",
        "ua[5]": "Vip"
      }
    },
    {
      "macro": "tt_um_DanielZhu123",
      "address": 963,
      "title": "calculator",
      "author": "ZHU QUANHAO",
      "description": "input two number and do all kinds of calculation base on it",
      "clock_hz": 100,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/DanielZhu123/tt07-verilog-Ztemplate",
      "commit": "3ddd76c9f6fc1224fd3e5f96326baca0d900b30e",
      "pinout": {
        "ui[0]": "bit1_XOR",
        "ui[1]": "bit2_OR",
        "ui[2]": "bit3_AND",
        "ui[3]": "bit4_ADD",
        "ui[4]": "numbersel_NOT",
        "ui[5]": "positionsel_dispB",
        "ui[6]": "signsel_dispA",
        "ui[7]": "modesel",
        "uo[0]": "display",
        "uo[1]": "display",
        "uo[2]": "display",
        "uo[3]": "display",
        "uo[4]": "display",
        "uo[5]": "display",
        "uo[6]": "display",
        "uo[7]": "display",
        "uio[0]": "display",
        "uio[1]": "display",
        "uio[2]": "display",
        "uio[3]": "display",
        "uio[4]": "display",
        "uio[5]": "display",
        "uio[6]": "power13",
        "uio[7]": "power24"
      }
    },
    {
      "macro": "tt_um_KolosKoblasz_mixer",
      "address": 233,
      "title": "Gilbert Mixer",
      "author": "Kolos Koblasz",
      "description": "Gilbert Cell mixer for up and down conversion",
      "clock_hz": 100000000,
      "tiles": "1x2",
      "analog_pins": [
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/KolosKoblasz/tt07-mixer",
      "commit": "79ce878d2f4c3760930e311514db15b78f7d6d6f",
      "pinout": {
        "ui[0]": "ext_lo_en",
        "ui[1]": "ext_lo_n",
        "ui[2]": "ext_lo_p",
        "ui[3]": "int_lo_settings[0]",
        "ui[4]": "int_lo_settings[1]",
        "ui[5]": "int_lo_settings[2]",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "in_n",
        "ua[1]": "in_p",
        "ua[2]": "out_p",
        "ua[3]": "out_n",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_MichaelBell_rle_vga",
      "address": 969,
      "title": "RLE Video Player",
      "author": "Mike Bell",
      "description": "Reads run length encoded data from QSPI flash, displays on VGA",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/tt07-rle-vga",
      "commit": "0bfa627d4491c6dadd1711ebced96b92c7f88681",
      "pinout": {
        "ui[0]": "SPI latency[0]",
        "ui[1]": "SPI latency[1]",
        "ui[2]": "SPI latency[2]",
        "ui[3]": "30Hz select",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R[1]",
        "uo[1]": "G[1]",
        "uo[2]": "B[1]",
        "uo[3]": "vsync",
        "uo[4]": "R[0]",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "CS",
        "uio[1]": "SD0",
        "uio[2]": "SD1",
        "uio[3]": "SCK",
        "uio[4]": "SD2",
        "uio[5]": "SD3",
        "uio[6]": "Unused CS",
        "uio[7]": "Unused CS"
      }
    },
    {
      "macro": "tt_um_PS_PWM",
      "address": 79,
      "title": "Phase Shifted PWM Modulator",
      "author": "Nelson Salvador & Francisca Donoso",
      "description": "Phase-Shifted Pulse Width Modulation (PS-PWM) that generates the switching signals for 2 PMOS and 2 NMOS from a duty cycle (d1 and d2)",
      "clock_hz": 1000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/NelsonSalvadorPinilla/tt07-PS_PWM_Modulator",
      "commit": "599326540ad879cc5947373811eaffa53b8867e2",
      "pinout": {
        "ui[0]": "d1[0]",
        "ui[1]": "d1[1]",
        "ui[2]": "d1[2]",
        "ui[3]": "d1[3]",
        "ui[4]": "d1[4]",
        "ui[5]": "d1[5]",
        "ui[6]": "d2[0]",
        "ui[7]": "d2[1]",
        "uo[0]": "PMOS1",
        "uo[1]": "NMOS2",
        "uo[2]": "PMOS2",
        "uo[3]": "NMOS1",
        "uo[4]": "clk_in",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "d2[2]",
        "uio[1]": "d2[3]",
        "uio[2]": "d2[4]",
        "uio[3]": "d2[5]",
        "uio[4]": "CLK_SR",
        "uio[5]": "Data_SR",
        "uio[6]": "CLK_EXT",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_PUF",
      "address": 899,
      "title": "Reversible logic based Ring-Oscillator Physically Unclonable Function (RO-PUF)",
      "author": "Syed Farah Naz, Shivam Bhardwaj, Ambika Prasad Shah",
      "description": "Reversible logic based Ring-Oscillator Physically Unclonable Function (RO-PUF)",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/shivam7086/tt07-verilog-RO_PUF",
      "commit": "49341c4770f169512c37b6a54f9bd77c67b71903",
      "pinout": {
        "ui[0]": "rst_n",
        "ui[1]": "ena",
        "ui[2]": "Challenge_1",
        "ui[3]": "Challenge_2",
        "ui[4]": "Challenge_3",
        "ui[5]": "Challenge_4",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Respose_1",
        "uo[1]": "Respose_2",
        "uo[2]": "Respose_3",
        "uo[3]": "Respose_4",
        "uo[4]": "Respose_5",
        "uo[5]": "Respose_6",
        "uo[6]": "Respose_7",
        "uo[7]": "Respose_8",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_Saitama225_comp",
      "address": 231,
      "title": "Analog comparator",
      "author": "Diego Carrera and Leonel Miranda",
      "description": "Analog comparator made by the MNEL team from USFQ.",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        1,
        3,
        2
      ],
      "repo": "https://github.com/EduHolg/EjemploAnalog2",
      "commit": "6636a71eec07a0c5b7c0ca8375e39352f87a27ae",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "analog input",
        "ua[1]": "analog reference",
        "ua[2]": "analog output",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_TD4_Assy_KosugiSubaru",
      "address": 128,
      "title": "4bit_CPU_td4",
      "author": "Ko Kosugi",
      "description": "4bit_CPU",
      "clock_hz": 10,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/KosugiSubaru/tt07-td4cpu",
      "commit": "4d581b540ee20f6e3d921c87ff38a6d02d43d4f5",
      "pinout": {
        "ui[0]": "data_0",
        "ui[1]": "data_1",
        "ui[2]": "data_2",
        "ui[3]": "data_3",
        "ui[4]": "data_4",
        "ui[5]": "data_5",
        "ui[6]": "data_6",
        "ui[7]": "data_7",
        "uo[0]": "addres_0",
        "uo[1]": "addres_1",
        "uo[2]": "addres_2",
        "uo[3]": "addres_3",
        "uo[4]": "cf",
        "uo[5]": "ALU_to_reg_0",
        "uo[6]": "ALU_to_reg_1",
        "uo[7]": "ALU_to_reg_2",
        "uio[0]": "IO_0",
        "uio[1]": "IO_1",
        "uio[2]": "IO_2",
        "uio[3]": "IO_3",
        "uio[4]": "0",
        "uio[5]": "ALU_to_reg_3",
        "uio[6]": "select_0",
        "uio[7]": "select_1"
      }
    },
    {
      "macro": "tt_um_The_Chairman_send_receive",
      "address": 973,
      "title": "Send Receive",
      "author": "Michael Ogata, Nelson Hastings, Samson Melamed",
      "description": "A dual use project where you can set a project to either a sender or receiver and send bits",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/The-Chairman/tt07-verilog-template",
      "commit": "7b4a2c96e89d08e0067d8a5671f1c50d78d45145",
      "pinout": {
        "ui[0]": "Input[0]/Message Ready",
        "ui[1]": "Input[1]/recv_bit[0]",
        "ui[2]": "Input[2]/recv_bit[1]",
        "ui[3]": "Input[3]/recv_bit[2]",
        "ui[4]": "unused/recv_bit[3]",
        "ui[5]": "unused",
        "ui[6]": "unused",
        "ui[7]": "Sender/Receiver Mode Select (0/1)",
        "uo[0]": "Transmit/LCD Display Value[0]",
        "uo[1]": "input[0]/LCD Display Value[1]",
        "uo[2]": "Input[1]/LCD Display Value[2]",
        "uo[3]": "Input[2]/LCD Display Value[3]",
        "uo[4]": "Input[3]/LCD Display Value[4]",
        "uo[5]": "unused/LCD Display Value[5]",
        "uo[6]": "unused/LCD Display Value[6]",
        "uo[7]": "Mode of connected chip//LCD Display Value[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_VishalBingi_r2r_4b",
      "address": 261,
      "title": "4-bit R2R DAC",
      "author": "Vishal Bingi",
      "description": "It is a 4-bit R2R DAC with a sawtooth waveform driver",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        7
      ],
      "repo": "https://github.com/Vishalbingi1999/tt07_r2r",
      "commit": "889df5fe9f290d7dc8efd7c8dbf12da722832b0f",
      "pinout": {
        "ui[0]": "bit 0",
        "ui[1]": "bit 1",
        "ui[2]": "bit 2",
        "ui[3]": "bit 3",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "external data",
        "uio[1]": "load divider",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "DAC output",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_adennen_inverter",
      "address": 265,
      "title": "Analog buffer test",
      "author": "Aron Dennen",
      "description": "Double inverter project from Matt's analog course",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        7,
        9
      ],
      "repo": "https://github.com/adennen/tt07-arond-analog",
      "commit": "cc5b3a62cf5b856d9982e65a26e0293af57ea34d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "analog output",
        "ua[1]": "analog input",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_adia_psu_seq_test",
      "address": 42,
      "title": "Adiabatic PSU sequencer test",
      "author": "Chris Pacejo",
      "description": "test of a power supply sequencer for adiabatic circuits",
      "clock_hz": 32000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/cpacejo/adia_psu_seq_test",
      "commit": "d81cf5b5eb6badef35777dafab87332be83bab1d",
      "pinout": {
        "ui[0]": "phase select (X)",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "selected phase (X)",
        "uo[1]": "phase X step 1",
        "uo[2]": "phase X step 2",
        "uo[3]": "phase X step 3",
        "uo[4]": "phase X step 4",
        "uo[5]": "phase X step 5",
        "uo[6]": "phase X step 6",
        "uo[7]": "phase X step 7",
        "uio[0]": "phase 0 step 0",
        "uio[1]": "phase 0 step 8",
        "uio[2]": "phase 1 step 0",
        "uio[3]": "phase 1 step 8",
        "uio[4]": "digital sync phase 0 read",
        "uio[5]": "digital sync phase 1 read",
        "uio[6]": "digital sync phase 0 write",
        "uio[7]": "digital sync phase 1 write"
      }
    },
    {
      "macro": "tt_um_adonairc_dda",
      "address": 270,
      "title": "DDA solver for van der Pol oscillator",
      "author": "Adonai Cruz",
      "description": "Digital differential analyzer (DDA) solver for the van der Pol oscillator using posit (16,1)",
      "clock_hz": 0,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/adonairc/tt07-dda-van-der-pol",
      "commit": "3432bfa2a219c475e3e8a918b96ca25cba5a656c",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "SPI CS",
        "uio[1]": "SPI MOSI",
        "uio[2]": "SPI MISO",
        "uio[3]": "SPI CLK",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_afasolino",
      "address": 204,
      "title": "integer to posit converter and adder ",
      "author": "A. Fasolino, G.D. Licciardo, A. Torino, F. Del Prete, C. Parrella",
      "description": "Our module executes a fixed to posit conversion and an addition",
      "clock_hz": 30000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/afasolino/tt06_posit",
      "commit": "7d8d4bdfd701fd1f2d709ccfa13ee79cec82a348",
      "pinout": {
        "ui[0]": "data input",
        "ui[1]": "data input",
        "ui[2]": "data input",
        "ui[3]": "data input",
        "ui[4]": "data input",
        "ui[5]": "data input",
        "ui[6]": "data input",
        "ui[7]": "data input",
        "uo[0]": "addition result",
        "uo[1]": "addition result",
        "uo[2]": "addition result",
        "uo[3]": "addition result",
        "uo[4]": "addition result",
        "uo[5]": "addition result",
        "uo[6]": "addition result",
        "uo[7]": "addition result",
        "uio[0]": "data valid",
        "uio[1]": "alu valid",
        "uio[2]": "read data valid",
        "uio[3]": "read data ready",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_agurrier_mastermind",
      "address": 458,
      "title": "Mastermind",
      "author": "Tom Gurrieri and Anthony Gurrieri",
      "description": "Play the game: Mastermind",
      "clock_hz": 20000000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/agurrier/tt07-makerchip-template",
      "commit": "591c0b59ece1fd958dd4210c6790343ee867eedc",
      "pinout": {
        "ui[0]": "Red",
        "ui[1]": "Yellow",
        "ui[2]": "Green",
        "ui[3]": "Blue",
        "ui[4]": "Orange",
        "ui[5]": "Black",
        "ui[6]": "White",
        "ui[7]": "Purple",
        "uo[0]": "Correct Position 1",
        "uo[1]": "Correct Position 2",
        "uo[2]": "Correct Position 3",
        "uo[3]": "Correct Position 4",
        "uo[4]": "Correct Color 1",
        "uo[5]": "Correct Color 2",
        "uo[6]": "Correct Color 3",
        "uo[7]": "Correct Color 4",
        "uio[0]": "unused",
        "uio[1]": "unused",
        "uio[2]": "unused",
        "uio[3]": "unused",
        "uio[4]": "unused",
        "uio[5]": "unused",
        "uio[6]": "unused",
        "uio[7]": "unused"
      }
    },
    {
      "macro": "tt_um_aidenfoxivey",
      "address": 901,
      "title": "CRC-8 CCITT",
      "author": "Aiden Fox Ivey",
      "description": "A simple parallel implementation of CRC-8 following CCITT specs. This implies 0x00 is the start value.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/aidenfoxivey/tt07-verilog-template",
      "commit": "ad99cd0eea15a6364ec62136f5d11c1434b5e5a8",
      "pinout": {
        "ui[0]": "CRC input pin 0.",
        "ui[1]": "CRC input pin 1.",
        "ui[2]": "CRC input pin 2.",
        "ui[3]": "CRC input pin 3.",
        "ui[4]": "CRC input pin 4.",
        "ui[5]": "CRC input pin 5.",
        "ui[6]": "CRC input pin 6.",
        "ui[7]": "CRC input pin 7.",
        "uo[0]": "CRC output pin 0.",
        "uo[1]": "CRC output pin 1.",
        "uo[2]": "CRC output pin 2.",
        "uo[3]": "CRC output pin 3.",
        "uo[4]": "CRC output pin 4.",
        "uo[5]": "CRC output pin 5.",
        "uo[6]": "CRC output pin 6.",
        "uo[7]": "CRC output pin 7.",
        "uio[0]": "Represents whether or not to ingest the values on ui to the CRC.",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ajstein_stopwatch",
      "address": 961,
      "title": "Stopwatch Project",
      "author": "A.J. Stein",
      "description": "A TinyTapeout project to display a stopwatch counter one digit at a time",
      "clock_hz": 20000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/aj-stein-nist/tt_stopwatch_project",
      "commit": "f65b4932e00ecbc9090ad2f631bb6f8d29d80ed1",
      "pinout": {
        "ui[0]": "N/A",
        "ui[1]": "N/A",
        "ui[2]": "N/A",
        "ui[3]": "N/A",
        "ui[4]": "N/A",
        "ui[5]": "N/A",
        "ui[6]": "N/A",
        "ui[7]": "N/A",
        "uo[0]": "N/A",
        "uo[1]": "N/A",
        "uo[2]": "N/A",
        "uo[3]": "N/A",
        "uo[4]": "N/A",
        "uo[5]": "N/A",
        "uo[6]": "N/A",
        "uo[7]": "N/A",
        "uio[0]": "N/A",
        "uio[1]": "N/A",
        "uio[2]": "N/A",
        "uio[3]": "N/A",
        "uio[4]": "N/A",
        "uio[5]": "N/A",
        "uio[6]": "N/A",
        "uio[7]": "N/A"
      }
    },
    {
      "macro": "tt_um_alfiero88_CurrentTrigger",
      "address": 267,
      "title": "Current Mode Trigger",
      "author": "Alfiero Leoni",
      "description": "Hysteresis Trigger working with input currents",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        6,
        7,
        9,
        8
      ],
      "repo": "https://github.com/alfiero88/tt07-current-mode-trigger",
      "commit": "5fb701988c41269a0a3a03beeb73d6e7eea7e79f",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "input",
        "ua[1]": "input",
        "ua[2]": "output",
        "ua[3]": "input",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_algofoogle_raybox_zero",
      "address": 714,
      "title": "raybox-zero TT07 edition",
      "author": "algofoogle (Anton Maurovic)",
      "description": "TT07 improved resub of 'simple VGA ray caster game demo' from TT04",
      "clock_hz": 25000000,
      "tiles": "6x2",
      "analog_pins": [],
      "repo": "https://github.com/algofoogle/tt07-raybox-zero",
      "commit": "52f0c950ce848645954d855fd43489ddb16e0dc4",
      "pinout": {
        "ui[0]": "SPI in: pov_sclk",
        "ui[1]": "SPI in: pov_mosi",
        "ui[2]": "SPI in: pov_ss_n",
        "ui[3]": "debug",
        "ui[4]": "inc_px",
        "ui[5]": "inc_py",
        "ui[6]": "reg",
        "ui[7]": "gen_tex",
        "uo[0]": "red[1]",
        "uo[1]": "green[1]",
        "uo[2]": "blue[1]",
        "uo[3]": "vsync_n",
        "uo[4]": "red[0]",
        "uo[5]": "green[0]",
        "uo[6]": "blue[0]",
        "uo[7]": "hsync_n",
        "uio[0]": "Out: tex_csb",
        "uio[1]": "Out: tex_sclk",
        "uio[2]": "In: \"SPI2\" reg_sclk",
        "uio[3]": "In: \"SPI2\" reg_mosi",
        "uio[4]": "In: \"SPI2\" reg_ss_n",
        "uio[5]": "I/O: tex_io0",
        "uio[6]": "In: tex_io1",
        "uio[7]": "In: tex_io2"
      }
    },
    {
      "macro": "tt_um_analog_factory_test",
      "address": 512,
      "title": "TT07 Analog Factory Test",
      "author": "Sylvain Munaut",
      "description": "Test structures for TT07 analog support",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11,
        6,
        10,
        7,
        9,
        8
      ],
      "repo": "https://github.com/smunaut/tt07-analog-factory-test",
      "commit": "3697e180f295dbd6b31fb4187a5ced9a1c4ef5d3",
      "pinout": {
        "ui[0]": "ena0_n",
        "ui[1]": "ena1",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "ibias",
        "ua[1]": "vgnd_sense",
        "ua[2]": "vpwr_sense",
        "ua[3]": "loopback[0]",
        "ua[4]": "loopback[1]",
        "ua[5]": "loopback[2]"
      }
    },
    {
      "macro": "tt_um_analog_rf_readout_circuit",
      "address": 492,
      "title": "RF_peripheral_circuits",
      "author": "Shilpa Pavithran, Vineeta V Nair, Sruthi P, Aravind S, Vyshnav P Dinesh, Aswani A R",
      "description": "Peripheral circuits for RF based transmission.",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        5,
        0,
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/ShilpaPavithranManju/AnalogRF_peripheral_circuit",
      "commit": "aa4607bc61bbc7c0052cd93f0c754775dbcbbdf5",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "vth/out",
        "ua[1]": "vin/vin[+]",
        "ua[2]": "vin[1]/vin[-]",
        "ua[3]": "s",
        "ua[4]": "ant",
        "ua[5]": "ind"
      }
    },
    {
      "macro": "tt_um_asinghani_tinywspr",
      "address": 462,
      "title": "TinyWSPR",
      "author": "asinghani",
      "description": "Tiny WSPR Beacon",
      "clock_hz": 0,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/asinghani/tinywspr-tt07",
      "commit": "60b3eda7c9494165b26b4427e0f3a19d2a2352e3",
      "pinout": {
        "ui[0]": "Config valid",
        "ui[1]": "Config start",
        "ui[2]": "RF start transmit",
        "ui[3]": "unused",
        "ui[4]": "unused",
        "ui[5]": "unused",
        "ui[6]": "unused",
        "ui[7]": "unused",
        "uo[0]": "RF out",
        "uo[1]": "RF out (mirror)",
        "uo[2]": "unused",
        "uo[3]": "unused",
        "uo[4]": "unused",
        "uo[5]": "unused",
        "uo[6]": "Debug out",
        "uo[7]": "Debug out",
        "uio[0]": "config[0]",
        "uio[1]": "config[1]",
        "uio[2]": "config[2]",
        "uio[3]": "config[3]",
        "uio[4]": "config[4]",
        "uio[5]": "config[5]",
        "uio[6]": "config[6]",
        "uio[7]": "config[7]"
      }
    },
    {
      "macro": "tt_um_brucemack_sb_mixer",
      "address": 522,
      "title": "Double Balanced Mixer and Quadrature Divider",
      "author": "Bruce MacKinnon",
      "description": "Takes an RF input (with DC bias) and a digital LO signal and mixes to provide a differential IF output.  Simulated at 7 MHz.",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11,
        6,
        10
      ],
      "repo": "https://github.com/brucemack/tt07-sb-mixer",
      "commit": "9a86d6f2efd314c16e20c43e5ecf438e16a87f57",
      "pinout": {
        "ui[0]": "Local Oscillator input for mixer",
        "ui[1]": "Clock input for quadrature divider",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "I phase output from quadrature divider",
        "uo[1]": "Q phase output from quadrature divider",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "RF input (with DC bias)",
        "ua[1]": "IF output (Positive phase)",
        "ua[2]": "IF output (Negative phase)",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_btflv_subleq",
      "address": 140,
      "title": "Subleq CPU with FRAM and UART",
      "author": "Philip Mohr",
      "description": "Stupid slow Subleq CPU using an external SPI FRAM",
      "clock_hz": 10000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/BTFLV/tt07-subleq-fram-cpu",
      "commit": "07bab2e36185c61102b0ebc22f546fc62394eb2c",
      "pinout": {
        "ui[0]": "in_miso",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "out_mosi",
        "uo[1]": "out_sck",
        "uo[2]": "out_cs",
        "uo[3]": "tx",
        "uo[4]": "tx_credits",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "data_0",
        "uio[1]": "data_1",
        "uio[2]": "data_2",
        "uio[3]": "data_3",
        "uio[4]": "data_4",
        "uio[5]": "data_5",
        "uio[6]": "data_6",
        "uio[7]": "data_7"
      }
    },
    {
      "macro": "tt_um_calonso88_74181",
      "address": 975,
      "title": "ALU 74181",
      "author": "Caio Alonso da Costa",
      "description": "SPI peripheral and an 8-bit ALU implemented with 2x 4-bit slice arithmetic logic unit 74181",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/calonso88/tt07_alu_74181",
      "commit": "59d3396f51e48622ddead116617eff98dfcd69d5",
      "pinout": {
        "ui[0]": "cpol",
        "ui[1]": "cpha",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "decod_reg[0]",
        "uo[1]": "decod_reg[1]",
        "uo[2]": "decod_reg[2]",
        "uo[3]": "decod_reg[3]",
        "uo[4]": "decod_reg[4]",
        "uo[5]": "decod_reg[5]",
        "uo[6]": "decod_reg[6]",
        "uo[7]": "decod_reg[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "spi_miso",
        "uio[4]": "spi_cs_n",
        "uio[5]": "spi_clk",
        "uio[6]": "spi_mosi",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ccattuto_charmatrix",
      "address": 225,
      "title": "Serial Character LED Matrix",
      "author": "Ciro Cattuto",
      "description": "LED matrix character display controlled via UART",
      "clock_hz": 20000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/ccattuto/tt07-serial-charmatrix",
      "commit": "8ccf2e61b3dfbccd8cb27c1660385edb57001b0a",
      "pinout": {
        "ui[0]": "num chars selector 0",
        "ui[1]": "num chars selector 1",
        "ui[2]": "UART loopback option",
        "ui[3]": "UART RX",
        "ui[4]": "dimmer selector 0",
        "ui[5]": "dimmer selector 1",
        "ui[6]": "internal/external refresh selector",
        "ui[7]": "random/fixed color selector",
        "uo[0]": "LED strip",
        "uo[1]": "LED strip latch",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "UART TX",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "UART RX valid",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ccattuto_conway",
      "address": 258,
      "title": "Conway's Terminal",
      "author": "Ciro Cattuto",
      "description": "A simulation of Conways' Game of Life visualized to an ANSI terminal over UART",
      "clock_hz": 24000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/ccattuto/tt07-conway-term",
      "commit": "e1502735e7f4103ec8cb23e00ab41ba226ce4544",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "UART RX",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "UART TX",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "hsync",
        "uio[1]": "B[0]",
        "uio[2]": "G[0]",
        "uio[3]": "R[0]",
        "uio[4]": "vsync",
        "uio[5]": "B[1]",
        "uio[6]": "G[1]",
        "uio[7]": "R[1]"
      }
    },
    {
      "macro": "tt_um_chess",
      "address": 452,
      "title": "Chess",
      "author": "Hannah Ravensloft",
      "description": "chess move generator",
      "clock_hz": 0,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/Ravenslofty/tt07-chess",
      "commit": "345eb53a8432fd1dd7c0ba993eaaf76f79908fe0",
      "pinout": {
        "ui[0]": "Address bit 0",
        "ui[1]": "Address bit 1",
        "ui[2]": "Address bit 2",
        "ui[3]": "Address bit 3",
        "ui[4]": "Address bit 4",
        "ui[5]": "Address bit 5",
        "ui[6]": "Address bit 6",
        "ui[7]": "Address bit 7 (valid)",
        "uo[0]": "Square out bit 0",
        "uo[1]": "Square out bit 1",
        "uo[2]": "Square out bit 2",
        "uo[3]": "Square out bit 3",
        "uo[4]": "Square out bit 4",
        "uo[5]": "Square out bit 5",
        "uo[6]": "End iteration bit",
        "uo[7]": "Illegal position bit",
        "uio[0]": "Data in bit 0",
        "uio[1]": "Data in bit 1",
        "uio[2]": "Data in bit 2",
        "uio[3]": "Data in bit 3",
        "uio[4]": "Data in bit 4",
        "uio[5]": "Data in bit 5",
        "uio[6]": "Data in bit 6",
        "uio[7]": "Data in bit 7"
      }
    },
    {
      "macro": "tt_um_chip_rom",
      "address": 0,
      "title": "Chip ROM",
      "author": "Uri Shaked",
      "description": "ROM with information about the chip",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt-chip-rom",
      "commit": "7b1d3638536711cabd8fd4d131e10a37cdd208df",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "addr[4]",
        "ui[5]": "addr[5]",
        "ui[6]": "addr[6]",
        "ui[7]": "addr[7]",
        "uo[0]": "data[0]",
        "uo[1]": "data[1]",
        "uo[2]": "data[2]",
        "uo[3]": "data[3]",
        "uo[4]": "data[4]",
        "uo[5]": "data[5]",
        "uo[6]": "data[6]",
        "uo[7]": "data[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_cm_1",
      "address": 76,
      "title": "GDS counter-measures experiment 1",
      "author": "Aur\u00e9lien Hernandez",
      "description": "Experiment with GDS-level open-source countermeasure implementation",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/N0vaPixel/tt07-cm-1",
      "commit": "20942b0527bb831dcb9f34fb70f1a7902988adb3",
      "pinout": {
        "ui[0]": "in_mat_0",
        "ui[1]": "in_mat_1",
        "ui[2]": "in_mat_2",
        "ui[3]": "in_mat_3",
        "ui[4]": "in_mat_4",
        "ui[5]": "in_mat_5",
        "ui[6]": "in_mat_6",
        "ui[7]": "in_mat_7",
        "uo[0]": "out_mat_0",
        "uo[1]": "out_mat_1",
        "uo[2]": "out_mat_2",
        "uo[3]": "out_mat_3",
        "uo[4]": "out_mat_4",
        "uo[5]": "out_mat_5",
        "uo[6]": "out_mat_6",
        "uo[7]": "out_mat_7",
        "uio[0]": "mat_sel",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_davidparent_hdl",
      "address": 44,
      "title": "PRBS Generator",
      "author": "David  Parent",
      "description": "Generates a PRBS signal",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/davidparent/tt_um_davidparent_hdl",
      "commit": "f929339876a82f6db0d1d81bbce323bc26d724f5",
      "pinout": {
        "ui[0]": "i1",
        "ui[1]": "i2",
        "ui[2]": "i3",
        "ui[3]": "i4",
        "ui[4]": "i5",
        "ui[5]": "i6",
        "ui[6]": "i7",
        "ui[7]": "i8",
        "uo[0]": "out1",
        "uo[1]": "out2",
        "uo[2]": "out3",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_delay_line_tmng",
      "address": 332,
      "title": "Delay Line Time Multiplexed NAND Gate",
      "author": "Frans Skarman (TheZoq2)",
      "description": "A time multiplexed nand gate powered by a giant shift reigster",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/TheZoq2/tt07_delay_line_tmng",
      "commit": "e6e74ac1af72774bf6ff615e307de2f361247130",
      "pinout": {
        "ui[0]": "TODO",
        "ui[1]": "TODO",
        "ui[2]": "TODO",
        "ui[3]": "TODO",
        "ui[4]": "TODO",
        "ui[5]": "TODO",
        "ui[6]": "TODO",
        "ui[7]": "TODO",
        "uo[0]": "TODO",
        "uo[1]": "TODO",
        "uo[2]": "TODO",
        "uo[3]": "TODO",
        "uo[4]": "TODO",
        "uo[5]": "TODO",
        "uo[6]": "TODO",
        "uo[7]": "TODO",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_devinatkin_dual_oscillator",
      "address": 486,
      "title": "dual oscillator",
      "author": "Devin Atkin",
      "description": "20 Mhz and 21Mhz Output Sine Waves",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        0,
        5
      ],
      "repo": "https://github.com/devinatkin/tt07-dual-oscillator",
      "commit": "35abb6b5af9393ab9527176da1945c9087cebb9d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "20Mhz Output",
        "ua[1]": "21Mhz Output",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_dpetrisko_ttdll",
      "address": 3,
      "title": "TTDLL",
      "author": "Dan Petrisko",
      "description": "An all-digital DLL",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dpetrisko/tt07-dll",
      "commit": "28cf9aeaa0ad132bfae5e6cdf17be13591af99f8",
      "pinout": {
        "ui[0]": "p_tag_clk_i",
        "ui[1]": "p_tag_en_i",
        "ui[2]": "p_tag_data_i",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "p_osc_clk_o",
        "uo[1]": "p_ds_clk_o",
        "uo[2]": "p_gen_clk_o",
        "uo[3]": "p_dly_clk_o",
        "uo[4]": "p_mon_clk_o",
        "uo[5]": "p_div_clk_o",
        "uo[6]": "p_ds_reset_o",
        "uo[7]": "p_mon_reset_o",
        "uio[0]": "p_div_count_0_o",
        "uio[1]": "p_div_count_1_o",
        "uio[2]": "p_div_count_2_o",
        "uio[3]": "p_div_count_3_o",
        "uio[4]": "p_div_count_4_o",
        "uio[5]": "p_div_count_5_o",
        "uio[6]": "p_div_count_6_o",
        "uio[7]": "p_div_count_7_o"
      }
    },
    {
      "macro": "tt_um_drburke3_top",
      "address": 192,
      "title": "FastMagnitudeComparator",
      "author": "Daniel Burke",
      "description": "Digital neuron threshold detector",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/drburke3/FastMagnitudeComparator",
      "commit": "8fad69df3eb39c8e9d57a1e1a3436012b2746697",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "ui_out[0]",
        "uo[1]": "ui_out[1]",
        "uo[2]": "ui_out[2]",
        "uo[3]": "ui_out[3]",
        "uo[4]": "ui_out[4]",
        "uo[5]": "ui_out[5]",
        "uo[6]": "ui_out[6]",
        "uo[7]": "ui_out[7]",
        "uio[0]": "uio[0]",
        "uio[1]": "uio[1]",
        "uio[2]": "uio[2]",
        "uio[3]": "uio[3]",
        "uio[4]": "uio[4]",
        "uio[5]": "uio[5]",
        "uio[6]": "uio[6]",
        "uio[7]": "uio[7]"
      }
    },
    {
      "macro": "tt_um_dusterthefirst_project",
      "address": 67,
      "title": "443MHz Manchester Decoding",
      "author": "Zachary Kohnen",
      "description": "A manchester decoder and parser for a 433 mhz transmission",
      "clock_hz": 20000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/DusterTheFirst/tt07-bep-decode",
      "commit": "ae403d4944ff634e624b8e098ec300b116aa458b",
      "pinout": {
        "ui[0]": "digital_in",
        "ui[1]": "",
        "ui[2]": "halt",
        "ui[3]": "",
        "ui[4]": "address[0]",
        "ui[5]": "address[1]",
        "ui[6]": "address[2]",
        "ui[7]": "address[3]",
        "uo[0]": "parallel_out[0]",
        "uo[1]": "parallel_out[1]",
        "uo[2]": "parallel_out[2]",
        "uo[3]": "parallel_out[3]",
        "uo[4]": "parallel_out[4]",
        "uo[5]": "parallel_out[5]",
        "uo[6]": "parallel_out[6]",
        "uo[7]": "parallel_out[7]",
        "uio[0]": "full",
        "uio[1]": "manchester_clock",
        "uio[2]": "manchester_data",
        "uio[3]": "transmission_begin",
        "uio[4]": "neg_edge",
        "uio[5]": "pos_edge",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_dvxf_dj8v_dac",
      "address": 516,
      "title": "DJ8 8-bit CPU w/ DAC",
      "author": "DaveX",
      "description": "DJ8 8-bit CPU with parallel Flash / RAM interface and 8-bit R-2R DAC",
      "clock_hz": 2000000,
      "tiles": "1x2",
      "analog_pins": [
        10
      ],
      "repo": "https://github.com/dvxf/tt07-dj8v-dac",
      "commit": "c4cb0088f260c7e37b9acd09638114dda2061675",
      "pinout": {
        "ui[0]": "data in 0",
        "ui[1]": "data in 1",
        "ui[2]": "data in 2",
        "ui[3]": "data in 3",
        "ui[4]": "data in 4",
        "ui[5]": "data in 5",
        "ui[6]": "data in 6",
        "ui[7]": "data in 7",
        "uo[0]": "address out 8",
        "uo[1]": "address out 9",
        "uo[2]": "address out 10",
        "uo[3]": "address out 11",
        "uo[4]": "address out 12",
        "uo[5]": "address out 13",
        "uo[6]": "address out 14",
        "uo[7]": "write enable",
        "uio[0]": "address out 0 / data out 0",
        "uio[1]": "address out 1 / data out 1",
        "uio[2]": "address out 2 / data out 2",
        "uio[3]": "address out 3 / data out 3",
        "uio[4]": "address out 4 / data out 4",
        "uio[5]": "address out 5 / data out 5",
        "uio[6]": "address out 6 / data out 6",
        "uio[7]": "address out 7 / data out 7",
        "ua[0]": "DAC output",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_eater_8bit",
      "address": 514,
      "title": "Tiny Eater 8 Bit",
      "author": "Jason Kaufmann",
      "description": "Recreation of Ben Eater's 8 bit breadboard computer",
      "clock_hz": 12000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/jasonkaufmann/tt07-beneater8bit",
      "commit": "2220e3ec09fef4cbbfbde8cc4b850d104e2dca27",
      "pinout": {
        "ui[0]": "prog_mode",
        "ui[1]": "addr0",
        "ui[2]": "addr1",
        "ui[3]": "addr2",
        "ui[4]": "addr3",
        "ui[5]": "clock_change_mode",
        "ui[6]": "clock_max_count",
        "ui[7]": "",
        "uo[0]": "output_enable",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "data0",
        "uio[1]": "data1",
        "uio[2]": "data2",
        "uio[3]": "data3",
        "uio[4]": "data4",
        "uio[5]": "data5",
        "uio[6]": "data6",
        "uio[7]": "data7"
      }
    },
    {
      "macro": "tt_um_ejfogleman_smsdac8",
      "address": 196,
      "title": "8-bit DEM R2R DAC",
      "author": "Eric Fogleman",
      "description": "8-bit segmented mismatch-shaping R2R DAC",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ejfogleman/tt07-ef-smsdac8",
      "commit": "e23e444963376e79c4f496b77f13daf53bc454ed",
      "pinout": {
        "ui[0]": "d_in[0]",
        "ui[1]": "d_in[1]",
        "ui[2]": "d_in[2]",
        "ui[3]": "d_in[3]",
        "ui[4]": "d_in[4]",
        "ui[5]": "d_in[5]",
        "ui[6]": "d_in[6]",
        "ui[7]": "d_in[7]",
        "uo[0]": "y8[0]",
        "uo[1]": "y8[1]",
        "uo[2]": "y16[0]",
        "uo[3]": "y16[1]",
        "uo[4]": "y32[0]",
        "uo[5]": "y32[1]",
        "uo[6]": "y64[0]",
        "uo[7]": "y64[1]",
        "uio[0]": "en_enc",
        "uio[1]": "en_dith",
        "uio[2]": "y1[0]",
        "uio[3]": "y1[1]",
        "uio[4]": "y2[0]",
        "uio[5]": "y2[1]",
        "uio[6]": "y4[0]",
        "uio[7]": "y4[1]"
      }
    },
    {
      "macro": "tt_um_emern_top",
      "address": 582,
      "title": "badGPU",
      "author": "Emery Nagy",
      "description": "Basic GPU for rasterizing polygons",
      "clock_hz": 25000000,
      "tiles": "4x2",
      "analog_pins": [],
      "repo": "https://github.com/emern/badGPU",
      "commit": "b2012462b44ebcb668dfb620fde3fa3ace15170b",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "vsync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "hsync",
        "uio[0]": "CS",
        "uio[1]": "MOSI",
        "uio[2]": "MISO",
        "uio[3]": "SCK",
        "uio[4]": "INT",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ender_clock",
      "address": 909,
      "title": "clock",
      "author": "ender",
      "description": "a clock usb digital tube",
      "clock_hz": 32768,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ender110/tt07-clock",
      "commit": "06e62234b91c5e0854619810968ef71996dbc96b",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "addr[4]",
        "ui[5]": "addr[5]",
        "ui[6]": "addr[6]",
        "ui[7]": "addr[7]",
        "uo[0]": "data[0]",
        "uo[1]": "data[1]",
        "uo[2]": "data[2]",
        "uo[3]": "data[3]",
        "uo[4]": "data[4]",
        "uo[5]": "data[5]",
        "uo[6]": "data[6]",
        "uo[7]": "data[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_explorer",
      "address": 322,
      "title": "Explorer",
      "author": "sylefeb",
      "description": "none",
      "clock_hz": 33000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/sylefeb/tt07-explorer",
      "commit": "634fc41f6033a1bcdc15fbcc3c5b52de2b331660",
      "pinout": {
        "ui[0]": "Button 0",
        "ui[1]": "Button 1",
        "ui[2]": "Button 2",
        "ui[3]": "Button 3",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "SPI screen, clock",
        "uo[2]": "SPI screen, csn",
        "uo[3]": "SPI screen, dc",
        "uo[4]": "SPI screen, mosi",
        "uo[5]": "SPI screen, resn",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "QSPI ram, csn (output)",
        "uio[1]": "QSPI ram, io0 (bidir)",
        "uio[2]": "QSPI ram, io1 (bidir)",
        "uio[3]": "QSPI ram, clock (output)",
        "uio[4]": "QSPI ram, io2 (bidir)",
        "uio[5]": "QSPI ram, io3 (bidir)",
        "uio[6]": "QSPI ram, bank select 0 (output)",
        "uio[7]": "QSPI ram, bank select 1 (output)"
      }
    },
    {
      "macro": "tt_um_factory_test",
      "address": 1,
      "title": "TinyTapeout 7 Factory Test",
      "author": "Tiny Tapeout",
      "description": "Factory test module",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt07-factory-test",
      "commit": "affdc8cd37ceed313439a08f3a83859c50203076",
      "pinout": {
        "ui[0]": "sel / in_a[0]",
        "ui[1]": "in_a[1]",
        "ui[2]": "in_a[2]",
        "ui[3]": "in_a[3]",
        "ui[4]": "in_a[4]",
        "ui[5]": "in_a[5]",
        "ui[6]": "in_a[6]",
        "ui[7]": "in_a[7]",
        "uo[0]": "output[0] / counter[0]",
        "uo[1]": "output[1] / counter[1]",
        "uo[2]": "output[2] / counter[2]",
        "uo[3]": "output[3] / counter[3]",
        "uo[4]": "output[4] / counter[4]",
        "uo[5]": "output[5] / counter[5]",
        "uo[6]": "output[6] / counter[6]",
        "uo[7]": "output[7] / counter[7]",
        "uio[0]": "in_b[0] / counter[0]",
        "uio[1]": "in_b[1] / counter[1]",
        "uio[2]": "in_b[2] / counter[2]",
        "uio[3]": "in_b[3] / counter[3]",
        "uio[4]": "in_b[4] / counter[4]",
        "uio[5]": "in_b[5] / counter[5]",
        "uio[6]": "in_b[6] / counter[6]",
        "uio[7]": "in_b[7] / counter[7]"
      }
    },
    {
      "macro": "tt_um_fp_mac",
      "address": 198,
      "title": "FP-8 MAC Module",
      "author": "Wilfred Kisku",
      "description": "A simple MAC implementation using Chisel for two FP8 numbers, incorporates both addition and multiplication for FP8 numbers. Partial register at 0x00 which is the start value. Result is valid after 3 clock cycles.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/wilfredkisku/tt07_wilfred_fp_mac",
      "commit": "8e5e57a8b22f458857412d33e08d36c6e5844ba8",
      "pinout": {
        "ui[0]": "FP8 input A pin 0.",
        "ui[1]": "FP8 input A pin 1.",
        "ui[2]": "FP8 input A pin 2.",
        "ui[3]": "FP8 input A pin 3.",
        "ui[4]": "FP8 input A pin 4.",
        "ui[5]": "FP8 input A pin 5.",
        "ui[6]": "FP8 input A pin 6.",
        "ui[7]": "FP8 input A pin 7.",
        "uo[0]": "FP8 output pin 0.",
        "uo[1]": "FP8 output pin 1.",
        "uo[2]": "FP8 output pin 2.",
        "uo[3]": "FP8 output pin 3.",
        "uo[4]": "FP8 output pin 4.",
        "uo[5]": "FP8 output pin 5.",
        "uo[6]": "FP8 output pin 6.",
        "uo[7]": "FP8 output pin 7.",
        "uio[0]": "FP8 input B pin 0.",
        "uio[1]": "FP8 input B pin 1.",
        "uio[2]": "FP8 input B pin 2.",
        "uio[3]": "FP8 input B pin 3.",
        "uio[4]": "FP8 input B pin 4.",
        "uio[5]": "FP8 input B pin 5.",
        "uio[6]": "FP8 input B pin 6.",
        "uio[7]": "FP8 input B pin 7."
      }
    },
    {
      "macro": "tt_um_htfab_fprn",
      "address": 482,
      "title": "Field Programmable Resistor Network",
      "author": "htfab",
      "description": "A few resistors and switches wired up in a matrix pattern.",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        0
      ],
      "repo": "https://github.com/htfab/tt07-fprn",
      "commit": "41f57eea35f1aec327bcd7132e3deac634b8f0e4",
      "pinout": {
        "ui[0]": "H_INPUT_0",
        "ui[1]": "H_GATE_2",
        "ui[2]": "HD_LINE",
        "ui[3]": "HD_SHORT",
        "ui[4]": "HD_RES",
        "ui[5]": "VD_LINE",
        "ui[6]": "VD_SHORT",
        "ui[7]": "VD_RES",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "V_GATE_2",
        "uio[1]": "V_INPUT_2",
        "uio[2]": "H_GATE_1",
        "uio[3]": "V_GATE_1",
        "uio[4]": "V_INPUT_1",
        "uio[5]": "H_GATE_0",
        "uio[6]": "V_GATE_0",
        "uio[7]": "V_INPUT_0",
        "ua[0]": "ANALOG_PIN",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_jleightcap",
      "address": 78,
      "title": "fractran-tt",
      "author": "Jack Leightcap",
      "description": "Hardware implementation of John Conway's estoeric turing-complete lanugage Fractran",
      "clock_hz": 1,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jleightcap/tt07",
      "commit": "8ed48304f74f94360a5ea46cd2ba23a3c9e08ae6",
      "pinout": {
        "ui[0]": "accumulator stream [0]",
        "ui[1]": "accumulator stream [1]",
        "ui[2]": "accumulator stream [2]",
        "ui[3]": "accumulator stream [3]",
        "ui[4]": "accumulator stream [4]",
        "ui[5]": "accumulator stream [5]",
        "ui[6]": "accumulator stream [6]",
        "ui[7]": "accumulator stream [7]",
        "uo[0]": "factorized stream [0]",
        "uo[1]": "factorized stream [1]",
        "uo[2]": "factorized stream [2]",
        "uo[3]": "factorized stream [3]",
        "uo[4]": "factorized stream [4]",
        "uo[5]": "factorized stream [5]",
        "uo[6]": "factorized stream [6]",
        "uo[7]": "factorized stream [7]",
        "uio[0]": "fraction stream [0]",
        "uio[1]": "fraction stream [1]",
        "uio[2]": "fraction stream [2]",
        "uio[3]": "fraction stream [3]",
        "uio[4]": "fraction stream [4]",
        "uio[5]": "fraction stream [5]",
        "uio[6]": "fraction stream [6]",
        "uio[7]": "fraction stream [7]"
      }
    },
    {
      "macro": "tt_um_jorga20j_prng",
      "address": 194,
      "title": "8 bit PRNG",
      "author": "Jorge Garcia Martinez",
      "description": "8 bit PRNG based on Xorshift",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jorga20j/8bit_PRNG",
      "commit": "ff230145093fbf3b18cbd81b27f574ced76244da",
      "pinout": {
        "ui[0]": "Seed bit 0",
        "ui[1]": "Seed bit 1",
        "ui[2]": "Seed bit 2",
        "ui[3]": "Seed bit 3",
        "ui[4]": "Seed bit 4",
        "ui[5]": "Seed bit 5",
        "ui[6]": "Seed bit 6",
        "ui[7]": "Seed bit 7",
        "uo[0]": "Pseudo-Random number bit 0",
        "uo[1]": "Pseudo-Random number bit 1",
        "uo[2]": "Pseudo-Random number bit 2",
        "uo[3]": "Pseudo-Random number bit 3",
        "uo[4]": "Pseudo-Random number bit 4",
        "uo[5]": "Pseudo-Random number bit 5",
        "uo[6]": "Pseudo-Random number bit 6",
        "uo[7]": "Pseudo-Random number bit 7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_kianv_bare_metal",
      "address": 588,
      "title": "KianV RISC-V RV32E Baremetal SoC",
      "author": "Dipl.-Ing. Hirosh Dabui",
      "description": "A baremetal RISC-V RV32E ASIC with audio, spi, uart",
      "clock_hz": 50000000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/splinedrive/RISCV-KianV-BareMetalStyle",
      "commit": "179f093bcbf60d6bf70cee620042dabff2b4baa4",
      "pinout": {
        "ui[0]": "uart_rx",
        "ui[1]": "spi_sio1_so_miso0",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "spi_cen0",
        "uo[1]": "spi_sclk0",
        "uo[2]": "spi_sio0_si_mosi0",
        "uo[3]": "pwm_o",
        "uo[4]": "uart_tx",
        "uo[5]": "led[0]",
        "uo[6]": "led[1]",
        "uo[7]": "led[2]",
        "uio[0]": "ce0 flash",
        "uio[1]": "sio0",
        "uio[2]": "sio1",
        "uio[3]": "sck",
        "uio[4]": "sd2",
        "uio[5]": "sd3",
        "uio[6]": "cs1 psram",
        "uio[7]": "always high"
      }
    },
    {
      "macro": "tt_um_lcasimon_tdc",
      "address": 488,
      "title": "Analog TDC",
      "author": "Luis Carlos Alvarez Simon",
      "description": "Analog part of a Time to Digital Convert",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/luis-asimon/tt07_AnalogTdc",
      "commit": "adaef01bec3ffdf4cc12a1a05adc1829443c23a0",
      "pinout": {
        "ui[0]": "ResetCH",
        "ui[1]": "Reset",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "CH",
        "uo[1]": "VoutN",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "Iin",
        "ua[1]": "Pulse",
        "ua[2]": "Vout",
        "ua[3]": "CL",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_lfsr",
      "address": 206,
      "title": "LFSR",
      "author": "James Meech and Werner Florian",
      "description": "Linear feedback shift register random number generator",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JamesTimothyMeech/TT07-LFSR",
      "commit": "bb74cc7defcbdaceb39222a537e7146d36a0b6bd",
      "pinout": {
        "ui[0]": "Wishbone data input bit 0",
        "ui[1]": "Wishbone data input bit 1",
        "ui[2]": "Wishbone data input bit 2",
        "ui[3]": "Wishbone data input bit 3",
        "ui[4]": "Wishbone data input bit 4",
        "ui[5]": "Wishbone data input bit 5",
        "ui[6]": "Wishbone data input bit 6",
        "ui[7]": "Wishbone data input bit 7",
        "uo[0]": "Output bit to indicate whether or not the wishbone has stalled (o_wb_stall)",
        "uo[1]": "LFSR output bit (o_wb_data)",
        "uo[2]": "Output bit for the wishbone to acknowledge the successful end of writing part of the LFSR seed (o_wb_ack)",
        "uo[3]": "Not used in this design",
        "uo[4]": "Not used in this design",
        "uo[5]": "Not used in this design",
        "uo[6]": "Not used in this design",
        "uo[7]": "Not used in this design",
        "uio[0]": "Wishbone input bit to indicate that a valid bus cycle is in progress (i_wb_cyc, hardcoded as an input)",
        "uio[1]": "Wishbone chipselect input bit to indicate a valid seed data transfer cycle (i_wb_stb, hardcoded as an input)",
        "uio[2]": "Wishbone input bit to indicate a read or a write cycle read = 0, write = 1 (i_wb_we, hardcoded as an input)",
        "uio[3]": "Wishbone input address bit zero to select which eight bit byte of the seed to write (i_wb_addr[0])",
        "uio[4]": "Wishbone input address bit one to select which eight bit byte of the seed to write (i_wb_addr[1])",
        "uio[5]": "Wishbone input address bit two to select which eight bit byte of the seed to write (i_wb_addr[2])",
        "uio[6]": "Not used in this design",
        "uio[7]": "Not used in this design"
      }
    },
    {
      "macro": "tt_um_lisa",
      "address": 846,
      "title": "LISA Microcontroller with TTLC",
      "author": "Ken Pettit",
      "description": "8-Bit Microcontroller SOC with Tiny Tapeout Logic Controller",
      "clock_hz": 50000000,
      "tiles": "8x2",
      "analog_pins": [],
      "repo": "https://github.com/kdp1965/tt07-um-lisa-ttlc",
      "commit": "c29f97c305a64d5b5d472fc577e3f693cc4ea89e",
      "pinout": {
        "ui[0]": "pa[0]/b_div[0]/rx2",
        "ui[1]": "pa[1]/b_div[1]/rx2",
        "ui[2]": "pa[2]/b_div[2]/rx2",
        "ui[3]": "pa[3]/b_div[3]/rx",
        "ui[4]": "pa[4]/b_div[4]",
        "ui[5]": "pa[5]/b_div[5]",
        "ui[6]": "pa[6]/b_div[6]",
        "ui[7]": "pa[7]/b_set(autobaud_disable)",
        "uo[0]": "pb[0]/tx2",
        "uo[1]": "pb[1]/tx2",
        "uo[2]": "pb[2]/tx2",
        "uo[3]": "pb[3]",
        "uo[4]": "pb[4]/tx",
        "uo[5]": "pb[5]",
        "uo[6]": "pb[6]",
        "uo[7]": "pb[7]/baud_clk",
        "uio[0]": "ce0/ce_latch",
        "uio[1]": "mosi/dq1/ce0_latch",
        "uio[2]": "miso/dq2/ce1_latch",
        "uio[3]": "sclk",
        "uio[4]": "rx  /pc_io[0]/scl/ce1",
        "uio[5]": "tx  /pc_io[1]/sda",
        "uio[6]": "scl /pc_io[2]/dq2/rx",
        "uio[7]": "sda/pc_io[3]/dq3"
      }
    },
    {
      "macro": "tt_um_litneet64_ro_puf",
      "address": 142,
      "title": "RO-based Physically Unclonable Function (PUF)",
      "author": "Pablo Aravena",
      "description": "Implementation of a Ring Oscillator-based Physically Unclonable Function (PUF) in Sky130, with 8 bits of Challenge-Response Pairs (CRP)",
      "clock_hz": 10000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/litneet64/tt07-RO-based-PUF",
      "commit": "4b29b12bf850ac229c7b1a681cafa59b181d0609",
      "pinout": {
        "ui[0]": "challenge bit 1",
        "ui[1]": "challenge bit 2",
        "ui[2]": "challenge bit 3",
        "ui[3]": "challenge bit 4",
        "ui[4]": "challenge bit 5",
        "ui[5]": "challenge bit 6",
        "ui[6]": "challenge bit 7",
        "ui[7]": "challenge bit 8",
        "uo[0]": "response bit 1",
        "uo[1]": "response bit 2",
        "uo[2]": "response bit 3",
        "uo[3]": "response bit 4",
        "uo[4]": "response bit 5",
        "uo[5]": "response bit 6",
        "uo[6]": "response bit 7",
        "uo[7]": "response bit 8",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_macros77_subneg",
      "address": 911,
      "title": "SUBNEG CPU",
      "author": "Pawel Bialic",
      "description": "SUBNEG CPU requiring external parallel SRAM",
      "clock_hz": 1000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/macros77/tt_project_02",
      "commit": "7709dd64adf0c9f78dd8d87362bd3a2215a8c712",
      "pinout": {
        "ui[0]": "CPU enable",
        "ui[1]": "External SRAM address latch CLK",
        "ui[2]": "External SRAM WEn",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "SRAM address latch CLK",
        "uo[1]": "SRAM OEn",
        "uo[2]": "SRAM WEn",
        "uo[3]": "CPU output latch CLK",
        "uo[4]": "Internal CPU state bit 0",
        "uo[5]": "Internal CPU state bit 1",
        "uo[6]": "Internal CPU state bit 2",
        "uo[7]": "Internal CPU state bit 3",
        "uio[0]": "CPU bi-directional bus",
        "uio[1]": "CPU bi-directional bus",
        "uio[2]": "CPU bi-directional bus",
        "uio[3]": "CPU bi-directional bus",
        "uio[4]": "CPU bi-directional bus",
        "uio[5]": "CPU bi-directional bus",
        "uio[6]": "CPU bi-directional bus",
        "uio[7]": "CPU bi-directional bus"
      }
    },
    {
      "macro": "tt_um_maheredia",
      "address": 8,
      "title": "GPS signal generator",
      "author": "Grupo de Aplicaciones en Sistemas Embebidos - Universidad Tecnol\u00f3gica Nacional Facultad Regional Haedo",
      "description": "Generate a GPS IF signals using the following parameters: sat id, code phase, doppler and SNR.",
      "clock_hz": 16368000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/maheredia/tt07-gps_signal_gen",
      "commit": "9e58d5aa85add5d1556098b82ee06d64ee8d720e",
      "pinout": {
        "ui[0]": "msg_in - Used to modulate GPS signal with custom navigation message.",
        "ui[1]": "Not used",
        "ui[2]": "Not used",
        "ui[3]": "rx_in - UART rx input. Used to configure the register bank.",
        "ui[4]": "Not used",
        "ui[5]": "Not used",
        "ui[6]": "Not used",
        "ui[7]": "Not used",
        "uo[0]": "sin_out - Sine output with CA+msg modulation + noise.",
        "uo[1]": "cos_out - Cosine output with CA+msg modulation (no noise).",
        "uo[2]": "noise_start_out - Start of PRNG sequence used as noise.",
        "uo[3]": "start_out - Start of GPS signal. This output goes high when the configured phase matches the actual phase of the output signal.",
        "uo[4]": "clk - Output clock",
        "uo[5]": "Not used",
        "uo[6]": "Not used",
        "uo[7]": "Not used",
        "uio[0]": "Not used",
        "uio[1]": "Not used",
        "uio[2]": "Not used",
        "uio[3]": "Not used",
        "uio[4]": "Not used",
        "uio[5]": "Not used",
        "uio[6]": "Not used",
        "uio[7]": "Not used"
      }
    },
    {
      "macro": "tt_um_mandelbrot_accel",
      "address": 654,
      "title": "Mandelbrot Set Accelerator (32-bit IEEE 754)",
      "author": "Uri Shaked",
      "description": "Calculates `z = z^2 + c` on every clock cycle using 32-bit IEEE 754 floating point arithmetic.",
      "clock_hz": 20000000,
      "tiles": "6x2",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt07-mandelbrot-accelarator",
      "commit": "e6465bb67ce0c0205f7c21be5a683f2ca857183e",
      "pinout": {
        "ui[0]": "start",
        "ui[1]": "load_Cr",
        "ui[2]": "load_Ci",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "unbounded",
        "uo[1]": "iter[0]",
        "uo[2]": "iter[1]",
        "uo[3]": "iter[2]",
        "uo[4]": "iter[3]",
        "uo[5]": "iter[4]",
        "uo[6]": "iter[5]",
        "uo[7]": "iter[6]",
        "uio[0]": "data_in[0]",
        "uio[1]": "data_in[1]",
        "uio[2]": "data_in[2]",
        "uio[3]": "data_in[3]",
        "uio[4]": "data_in[4]",
        "uio[5]": "data_in[5]",
        "uio[6]": "data_in[6]",
        "uio[7]": "data_in[7]"
      }
    },
    {
      "macro": "tt_um_maxluppe_NIST",
      "address": 138,
      "title": "Four NIST SP 800-22 tests implementation",
      "author": "Maximiliam Luppe",
      "description": "Implementation of the first four NIST statistic tests",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/maxluppe/tt07_maxluppe_NIST",
      "commit": "3995571b501ae64a9cd4ae20d9cfe6c24268517b",
      "pinout": {
        "ui[0]": "LFSR Configurator clock",
        "ui[1]": "ALFSR reset",
        "ui[2]": "NIST random bits input",
        "ui[3]": "Operation mode",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "NIST 01 test output",
        "uo[1]": "NIST 02 test output",
        "uo[2]": "NIST 03 test output",
        "uo[3]": "NIST 04 test output",
        "uo[4]": "NIST Global error output",
        "uo[5]": "LFSR Configurator output",
        "uo[6]": "ALFSR _digitalized_ output 3",
        "uo[7]": "ALFSR _analog_ output 3",
        "uio[0]": "ALFSR _analog_ output 0",
        "uio[1]": "ALFSR _analog_ output 1",
        "uio[2]": "ALFSR _analog_ output 2",
        "uio[3]": "ALFSR _analog_ output 3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_maxluppe_digital_analog",
      "address": 66,
      "title": "All Digital DAC and Analog Comparators",
      "author": "Maximiliam Luppe",
      "description": "Implementation of a DAC and three versions of a analog comparator using only standard cells",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/maxluppe/tt07_maxluppe_Digital_DAC_Comp",
      "commit": "7c43dc1e57df02c555108e343d4d9e0e4ff3fcb1",
      "pinout": {
        "ui[0]": "First Counter Clock",
        "ui[1]": "Second Counter Clock",
        "ui[2]": "Comparators Clock",
        "ui[3]": "First Counter Enable",
        "ui[4]": "Second Counter Enable",
        "ui[5]": "Counter Mode Selection",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "VinP",
        "uo[1]": "VinM",
        "uo[2]": "VoutP_NAND",
        "uo[3]": "VoutM_NAND",
        "uo[4]": "VoutP_AO22",
        "uo[5]": "VoutM_AO22",
        "uo[6]": "VoutP_MX21",
        "uo[7]": "VoutM_MX21",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_mini_aie_2x2",
      "address": 480,
      "title": "Mini AIE: 2x2 CGRA with Ring-NoC",
      "author": "Lyte Venn",
      "description": "A mini aie/coarse-grained reconfigurable array",
      "clock_hz": 10000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/vrteee/tt07-mini-aie-cgra",
      "commit": "4a69a44f5f696146c0e3d17fee07bf8d31f141d9",
      "pinout": {
        "ui[0]": "data_0",
        "ui[1]": "data_1",
        "ui[2]": "data_2",
        "ui[3]": "data_3",
        "ui[4]": "data_4",
        "ui[5]": "data_5",
        "ui[6]": "data_6",
        "ui[7]": "data_7",
        "uo[0]": "out_0",
        "uo[1]": "out_1",
        "uo[2]": "out_2",
        "uo[3]": "out_3",
        "uo[4]": "out_4",
        "uo[5]": "out_5",
        "uo[6]": "out_6",
        "uo[7]": "out_7",
        "uio[0]": "debug_out0",
        "uio[1]": "debug_out1",
        "uio[2]": "debug_out2",
        "uio[3]": "debug_out3",
        "uio[4]": "debug_out4",
        "uio[5]": "debug_out5",
        "uio[6]": "debug_out6",
        "uio[7]": "debug_out7"
      }
    },
    {
      "macro": "tt_um_mitssdd",
      "address": 330,
      "title": "co processor for precision farming",
      "author": "MITS ECE",
      "description": "The processor will detect the deviation in sensor data and the sensor fault",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/mitsece/tt07-verilog-mitssdd",
      "commit": "29a4fa2926c7d9ecdd780c3448515357b9d92569",
      "pinout": {
        "ui[0]": "Input data from the sensors",
        "ui[1]": "Input data from the sensors",
        "ui[2]": "Input data from the sensors",
        "ui[3]": "Input data from the sensors",
        "ui[4]": "Input data from the sensors",
        "ui[5]": "Input data from the sensors",
        "ui[6]": "Input data from the sensors",
        "ui[7]": "Input data from the sensors",
        "uo[0]": "Deviation detector",
        "uo[1]": "Falut warning",
        "uo[2]": "Falut warning",
        "uo[3]": "Falut warning",
        "uo[4]": "Sensor identifier",
        "uo[5]": "Sensor identifier",
        "uo[6]": "Sensor identifier",
        "uo[7]": "Sensor identifier",
        "uio[0]": "Sensor identifier",
        "uio[1]": "Sensor identifier",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_mixed_signal_pulse_gen",
      "address": 494,
      "title": "mixed_signal_pulse_gen",
      "author": "Aravind, Allwan",
      "description": "Mixed signal pulse generator",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        5,
        0,
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/saranya-iiitmk/mux_test",
      "commit": "81ef3526b7e04cca0f567e018cb868a14378dbb0",
      "pinout": {
        "ui[0]": "pulse_period[0]",
        "ui[1]": "pulse_period[1]",
        "ui[2]": "pulse_period[2]",
        "ui[3]": "pulse_period[3]",
        "ui[4]": "percentage[0]",
        "ui[5]": "percentage[1]",
        "ui[6]": "start",
        "ui[7]": "pulse_count[0]",
        "uo[0]": "s_out_lines[1]",
        "uo[1]": "s_out_lines[0]",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "pwm_out2",
        "uo[6]": "pwm_out1",
        "uo[7]": "vout_1",
        "uio[0]": "pulse_count[1]",
        "uio[1]": "pulse_count[2]",
        "uio[2]": "pulse_count[3]",
        "uio[3]": "pulse_count[4]",
        "uio[4]": "pulse_count[5]",
        "uio[5]": "pulse_count[6]",
        "uio[6]": "pulse_count[7]",
        "uio[7]": "pulse_count[8]",
        "ua[0]": "s_in_lines[1]",
        "ua[1]": "s_in_lines[0]",
        "ua[2]": "vss",
        "ua[3]": "vout_4",
        "ua[4]": "vout_3",
        "ua[5]": "vout_2"
      }
    },
    {
      "macro": "tt_um_mos_bandgap",
      "address": 263,
      "title": "MOS Bandgap",
      "author": "Matt Venn",
      "description": "bandgap using only MOSFETs",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        9,
        8
      ],
      "repo": "https://github.com/mattvenn/tt07-mos-bandgap",
      "commit": "c4e350e23b19f191f1551d22f127b7387f2975ab",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "bandgap",
        "ua[1]": "bandgap_dtmos",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_multiplier_mbm",
      "address": 75,
      "title": "Modified Booth Multiplier",
      "author": "Varun Chandra Pendyala",
      "description": "The proposed design multiplies two 8bit signed numbers using modified booth algorithm",
      "clock_hz": 100000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/sreeramtirumalasetty/major",
      "commit": "6b0a6abe2462a443ed9aebd336ca2717c15b38c9",
      "pinout": {
        "ui[0]": "multiplicand[0]",
        "ui[1]": "multiplicand[1]",
        "ui[2]": "multiplicand[2]",
        "ui[3]": "multiplicand[3]",
        "ui[4]": "multiplicand[4]",
        "ui[5]": "multiplicand[5]",
        "ui[6]": "multiplicand[6]",
        "ui[7]": "multiplicand[7]",
        "uo[0]": "product[0]",
        "uo[1]": "product[1]",
        "uo[2]": "product[2]",
        "uo[3]": "product[3]",
        "uo[4]": "product[4]",
        "uo[5]": "product[5]",
        "uo[6]": "product[6]",
        "uo[7]": "product[7]",
        "uio[0]": "product[8]",
        "uio[1]": "product[9]",
        "uio[2]": "product[10]",
        "uio[3]": "product[11]",
        "uio[4]": "product[12]",
        "uio[5]": "product[13]",
        "uio[6]": "product[14]",
        "uio[7]": "product[15]"
      }
    },
    {
      "macro": "tt_um_neural_network",
      "address": 334,
      "title": "Neural Network dinamic",
      "author": "Kevin Gajardo, David Tapia",
      "description": "One line description",
      "clock_hz": 66000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/Kevomlml/tt07_chipusm_neural_network",
      "commit": "bffdd5672e393de450e66fd86f7f2300ee9ccb31",
      "pinout": {
        "ui[0]": "data_in[0]",
        "ui[1]": "data_in[1]",
        "ui[2]": "data_in[2]",
        "ui[3]": "data_in[3]",
        "ui[4]": "data_in[4]",
        "ui[5]": "data_in[5]",
        "ui[6]": "data_in[6]",
        "ui[7]": "data_in[7]",
        "uo[0]": "data_out[0]",
        "uo[1]": "data_out[1]",
        "uo[2]": "data_out[2]",
        "uo[3]": "data_out[3]",
        "uo[4]": "data_out[4]",
        "uo[5]": "data_out[5]",
        "uo[6]": "data_out[6]",
        "uo[7]": "data_out[7]",
        "uio[0]": "selector[0]",
        "uio[1]": "selector[1]",
        "uio[2]": "selector_out[0]",
        "uio[3]": "selector_out[1]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_njp_micro",
      "address": 69,
      "title": "MicroCode Multiplier",
      "author": "Neil Powell",
      "description": "microcode unit for shift and add multiplication",
      "clock_hz": 1000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/neilbluejohn/tt07-micro-mult",
      "commit": "76516adea73d30b3385675bd5d65d8f6ea0e4eae",
      "pinout": {
        "ui[0]": "inputA[0]",
        "ui[1]": "inputA[1]",
        "ui[2]": "inputA[2]",
        "ui[3]": "inputA[3]",
        "ui[4]": "inputB[0]",
        "ui[5]": "inputB[1]",
        "ui[6]": "inputB[2]",
        "ui[7]": "inputB[3]",
        "uo[0]": "SMP_out[0]",
        "uo[1]": "SMP_out[1]",
        "uo[2]": "SMP_out[2]",
        "uo[3]": "SMP_out[3]",
        "uo[4]": "SMP_out[4]",
        "uo[5]": "SMP_out[5]",
        "uo[6]": "SMP_out[6]",
        "uo[7]": "SMP_out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_nurirfansyah_alits02",
      "address": 271,
      "title": "Analog Test Circuit ITS 2",
      "author": "A. N Irfansyah, Raditya Eka, Yohanes Stefanus",
      "description": "PLL parts (VCO and phase detector)",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11,
        6,
        10,
        7,
        9,
        8
      ],
      "repo": "https://github.com/nurirfansyah/tt07-analog-its_ip_alits02",
      "commit": "849cd71f5889bed5b6662eb2add5b64b37b2bf3e",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "vco1_out",
        "ua[1]": "vco1_in-",
        "ua[2]": "vco1_in+",
        "ua[3]": "pllvco_out",
        "ua[4]": "pllfilter_n",
        "ua[5]": "pllfilter_p"
      }
    },
    {
      "macro": "tt_um_obriensp_pll",
      "address": 229,
      "title": "PLL Playground",
      "author": "Sean Patrick O'Brien",
      "description": "Phase-Locked Loop and its parts",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        0,
        5
      ],
      "repo": "https://github.com/obriensp/tt07-spo-pll-bits",
      "commit": "c28541a3fda54407e575c542d1c18e8b34121c91",
      "pinout": {
        "ui[0]": "vco0_s0",
        "ui[1]": "vco0_s1",
        "ui[2]": "pfd0_clk",
        "ui[3]": "pfd0_ref",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "vco0_out",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "vco0_vcont",
        "ua[1]": "pfd0_vout",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_pa1mantri_cdc_fifo",
      "address": 36,
      "title": "Clock Domain Crossing FIFO",
      "author": "Pavan Mantri",
      "description": "This FIFO buffers 4-bits data asynchronously across clock domains",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Pa1mantri/tt07_cdc_fifo",
      "commit": "ff14afce16efaed6cf4bd2bd030ef32e10039362",
      "pinout": {
        "ui[0]": "write_clock",
        "ui[1]": "write_increment",
        "ui[2]": "read_clock",
        "ui[3]": "read_increment",
        "ui[4]": "write_data0",
        "ui[5]": "write_data1",
        "ui[6]": "write_data2",
        "ui[7]": "write_data3",
        "uo[0]": "empty",
        "uo[1]": "full",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "read_data0",
        "uo[5]": "read-data1",
        "uo[6]": "read_data2",
        "uo[7]": "read_data3",
        "uio[0]": "write_reset",
        "uio[1]": "read_reset",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_pongsagon_tiniest_gpu",
      "address": 910,
      "title": "Tiniest GPU",
      "author": "Matt Pongsagon",
      "description": "A GPU that can render only a triangle",
      "clock_hz": 50000000,
      "tiles": "8x2",
      "analog_pins": [],
      "repo": "https://github.com/pongsagon/tt07-tiniest-gpu",
      "commit": "12ae2bb593f9bf1f76ce4fde2e9530393e0ce42a",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "RX",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "R1",
        "uio[1]": "G1",
        "uio[2]": "B1",
        "uio[3]": "vsync",
        "uio[4]": "R0",
        "uio[5]": "G0",
        "uio[6]": "B0",
        "uio[7]": "hsync"
      }
    },
    {
      "macro": "tt_um_pwm_elded",
      "address": 6,
      "title": "UACJ_PWM",
      "author": "Grupo C",
      "description": "Implementacion de un modulador de ancho de pulso (PWM) mediante Verilog esencial en electronica para regular la energia entregada a un dispositivo, este dise\u00f1o esta bajo los requisitos del sistema",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/remitenteaswad/UACJ-PWM-Sistemas-Digitales",
      "commit": "119cba232e451a7339d21acaa85e5ba9a9d41af5",
      "pinout": {
        "ui[0]": "duty_[0]",
        "ui[1]": "duty_[1]",
        "ui[2]": "duty_[2]",
        "ui[3]": "duty_[3]",
        "ui[4]": "duty_[4]",
        "ui[5]": "duty_[5]",
        "ui[6]": "duty_[6]",
        "ui[7]": "duty_[7]",
        "uo[0]": "pwm_o",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_pyamnihc_dummy_counter",
      "address": 68,
      "title": "Dummy Counter",
      "author": "Chinmay",
      "description": "A 16-bit counter",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/pyamnihc/tt07-dummy-counter",
      "commit": "b7c51dc54f012a7be18a053f2df79dafc12c5acf",
      "pinout": {
        "ui[0]": "count_en",
        "ui[1]": "mult_en",
        "ui[2]": "m_a0",
        "ui[3]": "m_a1",
        "ui[4]": "m_a2",
        "ui[5]": "m_b0",
        "ui[6]": "m_b1",
        "ui[7]": "m_b2",
        "uo[0]": "b0",
        "uo[1]": "b1",
        "uo[2]": "b2",
        "uo[3]": "b3",
        "uo[4]": "b4",
        "uo[5]": "b5",
        "uo[6]": "b6",
        "uo[7]": "b7",
        "uio[0]": "b8",
        "uio[1]": "b9",
        "uio[2]": "b10",
        "uio[3]": "b11",
        "uio[4]": "b12",
        "uio[5]": "b13",
        "uio[6]": "b14",
        "uio[7]": "b15"
      }
    },
    {
      "macro": "tt_um_rajum_iterativeMAC",
      "address": 40,
      "title": "Iterative MAC",
      "author": "Raju Machupalli",
      "description": "Iterative multiply and accumulation unit for ML accelerators",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RajuMachupalli/tt07_iterativeMAC",
      "commit": "7d7c200b932afb45a44b5f1c498fb43aad20e78a",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_in[0]",
        "uio[1]": "uio_in[1]",
        "uio[2]": "uio_in[2]",
        "uio[3]": "uio_in[3]",
        "uio[4]": "uio_in[4]",
        "uio[5]": "uio_in[5]",
        "uio[6]": "uio_in[6]",
        "uio[7]": "uio_in[7]"
      }
    },
    {
      "macro": "tt_um_rejunity_analog_dac_ay8913",
      "address": 484,
      "title": "AY-8193 single channel DAC",
      "author": "ReJ aka Renaldas Zioma",
      "description": "Logarithmic 4-bit DAC for AY-8193 sound generator",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        5
      ],
      "repo": "https://github.com/rejunity/tt07-analog-dac-ay8913",
      "commit": "e7772e17ba5ceb77bf45642a70abe2d5debbab90",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "db",
        "ui[2]": "db",
        "ui[3]": "db",
        "ui[4]": "db",
        "ui[5]": "db",
        "ui[6]": "db",
        "ui[7]": "db",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "db",
        "uio[1]": "db",
        "uio[2]": "db",
        "uio[3]": "db",
        "uio[4]": "db",
        "uio[5]": "db",
        "uio[6]": "db",
        "uio[7]": "db",
        "ua[0]": "output",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_rejunity_ay8913",
      "address": 520,
      "title": "Classic 8-bit era Programmable Sound Generator AY-3-8913",
      "author": "ReJ aka Renaldas Zioma",
      "description": "The AY-3-8913 is a 3-voice programmable sound generator (PSG) chip from General Instruments. The AY-3-8913 is a smaller variant of AY-3-8910 or its analog YM2149.",
      "clock_hz": 2000000,
      "tiles": "1x2",
      "analog_pins": [
        11,
        6,
        10
      ],
      "repo": "https://github.com/rejunity/tt07-psg-ay8913-with-analog-dac",
      "commit": "165113fb7aff13e7da53c6b988337f092c1203e2",
      "pinout": {
        "ui[0]": "multiplexed data/address bus LSB",
        "ui[1]": "multiplexed data/address bus",
        "ui[2]": "multiplexed data/address bus",
        "ui[3]": "multiplexed data/address bus",
        "ui[4]": "multiplexed data/address bus",
        "ui[5]": "multiplexed data/address bus",
        "ui[6]": "multiplexed data/address bus",
        "ui[7]": "multiplexed data/address bus MSB",
        "uo[0]": "(pwm) channel C ",
        "uo[1]": "(pwm) channel B",
        "uo[2]": "(pwm) channel A",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "(in) **BC1** bus control",
        "uio[1]": "(in) **BDIR** bus direction",
        "uio[2]": "(in) **SEL0** clock divider",
        "uio[3]": "(in) **SEL1** clock divider",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "(out) channel C",
        "ua[1]": "(out) channel B",
        "ua[2]": "(out) channel A",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_rejunity_vga",
      "address": 264,
      "title": "VGA Checkers",
      "author": "ReJ aka Renaldas Zioma",
      "description": "VGA",
      "clock_hz": 25200000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/vga-checkers",
      "commit": "1a35447c3a32200d401e81f1936e1e402f704833",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R",
        "uo[1]": "G",
        "uo[2]": "B",
        "uo[3]": "vsync",
        "uo[4]": "R",
        "uo[5]": "G",
        "uo[6]": "B",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_rejunity_z80",
      "address": 259,
      "title": "Zilog Z80",
      "author": "ReJ aka Renaldas Zioma",
      "description": "Z80 open-source silicon. Goal is to become a silicon proven, pin compatible, open-source replacement for classic Z80.",
      "clock_hz": 16000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/z80-open-silicon",
      "commit": "7f155e94b8a5fddfe23fb2f434564f9c2054590a",
      "pinout": {
        "ui[0]": "/WAIT",
        "ui[1]": "/INT",
        "ui[2]": "/NMI",
        "ui[3]": "/BUSRQ",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "/M1, A0, A8",
        "uo[1]": "/MREQ, A1, A9",
        "uo[2]": "/IORQ, A2, A10",
        "uo[3]": "/RD, A3, A11",
        "uo[4]": "/WR, A4, A12",
        "uo[5]": "/RFSH, A5, A13",
        "uo[6]": "/HALT, A6, A14",
        "uo[7]": "/BUSAK, A7, A15",
        "uio[0]": "D0",
        "uio[1]": "D1",
        "uio[2]": "D2",
        "uio[3]": "D3",
        "uio[4]": "D4",
        "uio[5]": "D5",
        "uio[6]": "D6",
        "uio[7]": "D7"
      }
    },
    {
      "macro": "tt_um_revenantx86_tinytpu",
      "address": 590,
      "title": "TinyTPU",
      "author": "Refik",
      "description": "TPU Unit with 2x2 matrix multiplication support",
      "clock_hz": 50000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/Revenantx86/tt07-tinytpu",
      "commit": "cdc35f3558339f664cd42404c190f08a2e85b8d6",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_riscv_spi_wrapper",
      "address": 974,
      "title": "RISCV32I with spi wrapper",
      "author": "Devin Macy",
      "description": "A mostly support riscv32i CPU with a bare bones spi wrapper allowing you to upload programs to instruction memory and echo information sent through SPI",
      "clock_hz": 50000000,
      "tiles": "8x2",
      "analog_pins": [],
      "repo": "https://github.com/devin-macy/tt06-riscv32i-spi-wrapper",
      "commit": "c9529d38e4f1acbdf9a2a20da998eebcb1641327",
      "pinout": {
        "ui[0]": "sclk",
        "ui[1]": "cs",
        "ui[2]": "mosi",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "miso",
        "uo[4]": "mode",
        "uo[5]": "cmd_error",
        "uo[6]": "passed",
        "uo[7]": "failed",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_rnunes2311_12bit_sar_adc",
      "address": 490,
      "title": "12 bit SAR ADC",
      "author": "Ricardo Nunes",
      "description": "A 12 bit differential (11 bit single-ended) SAR ADC",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        0,
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/rnunes2311/tt07-12bit_SAR_ADC",
      "commit": "8552c5feec6dc6641e0f6fefb52748b432064b98",
      "pinout": {
        "ui[0]": "start",
        "ui[1]": "en_offset_cal",
        "ui[2]": "single_ended",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "data[5]",
        "uo[1]": "data[4]",
        "uo[2]": "data[3]",
        "uo[3]": "data[2]",
        "uo[4]": "data[1]",
        "uo[5]": "data[0]",
        "uo[6]": "clk_data",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "vcm",
        "ua[1]": "vref",
        "ua[2]": "vref_gnd",
        "ua[3]": "vin_n",
        "ua[4]": "vin_p",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_router",
      "address": 256,
      "title": "router",
      "author": "Leeja & Saranya",
      "description": "1*3 router",
      "clock_hz": 10000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/leeja-j/router_tinytapeout",
      "commit": "203cfc74c587d9687d7527de39c482ef231acada",
      "pinout": {
        "ui[0]": "data_in[0]",
        "ui[1]": "data_in[1]",
        "ui[2]": "data_in[2]",
        "ui[3]": "pkt_valid",
        "ui[4]": "read_enb_0",
        "ui[5]": "read_enb_1",
        "ui[6]": "read_enb_2",
        "ui[7]": "",
        "uo[0]": "data_out_0[0]",
        "uo[1]": "data_out_0[1]",
        "uo[2]": "data_out_0[2]",
        "uo[3]": "data_out_1[0]",
        "uo[4]": "data_out_1[1]",
        "uo[5]": "data_out_1[2]",
        "uo[6]": "err",
        "uo[7]": "busy",
        "uio[0]": "data_out_2[0]",
        "uio[1]": "data_out_2[1]",
        "uio[2]": "data_out_2[2]",
        "uio[3]": "vld_out_0",
        "uio[4]": "vld_out_1",
        "uio[5]": "vld_out_2",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_rtmc_top_jrpetrus",
      "address": 324,
      "title": "Real Time Motor Controller",
      "author": "J. R. Petrus",
      "description": "Controls a stepper motor with precise timing between steps.",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/jrpetrus/tt_rtmc",
      "commit": "d8a19b2a77799f114bff952c6478ac8d0e7072ae",
      "pinout": {
        "ui[0]": "General Purpose Input gpi[0]",
        "ui[1]": "General Purpose Input gpi[1]",
        "ui[2]": "General Purpose Input gpi[2]",
        "ui[3]": "General Purpose Input gpi[3]",
        "ui[4]": "SPI0.cs",
        "ui[5]": "SPI0.sck",
        "ui[6]": "SPI0.tx",
        "ui[7]": "Connected to uo[6]",
        "uo[0]": "General Purpose Output gpo[0]",
        "uo[1]": "General Purpose Output gpo[1]",
        "uo[2]": "General Purpose Output gpo[2]",
        "uo[3]": "General Purpose Output gpo[3]",
        "uo[4]": "Connected to ^uio_in",
        "uo[5]": "Connected to ui[7]",
        "uo[6]": "Connected to ena",
        "uo[7]": "SPI0.rx",
        "uio[0]": "Motor Control mc[0]",
        "uio[1]": "Motor Control mc[1]",
        "uio[2]": "Motor Control mc[2]",
        "uio[3]": "Motor Control mc[3]",
        "uio[4]": "Motor Control mc[4]",
        "uio[5]": "Motor Control mc[5]",
        "uio[6]": "Motor Control mc[6]",
        "uio[7]": "Motor Control mc[7]"
      }
    },
    {
      "macro": "tt_um_seanyen0_SIMON",
      "address": 73,
      "title": "SIMON",
      "author": "seanyen0",
      "description": "SIMON game",
      "clock_hz": 20000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/seanyen0/tt07-makerchip-template",
      "commit": "7dbf40f686de5b57d4d18b2b76455fa8c9924a31",
      "pinout": {
        "ui[0]": "Button 0",
        "ui[1]": "Button 1",
        "ui[2]": "Button 2",
        "ui[3]": "Button 3",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "Reset",
        "uo[0]": "sseg0",
        "uo[1]": "sseg1",
        "uo[2]": "sseg2",
        "uo[3]": "sseg3",
        "uo[4]": "sseg4",
        "uo[5]": "sseg5",
        "uo[6]": "sseg6",
        "uo[7]": "sseg7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_serdes",
      "address": 200,
      "title": "SerDes",
      "author": "Mahaa Santeep G",
      "description": "The project implements a Serializer and Deserializer (SerDes) module for converting data between parallel and serial formats in digital systems.",
      "clock_hz": 100,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Santeep/TT_UM_SERDES",
      "commit": "b8aba214a7adf76361c6c767eccd904c04f3af1c",
      "pinout": {
        "ui[0]": "data_8b_in[0]",
        "ui[1]": "data_8b_in[1]",
        "ui[2]": "data_8b_in[2]",
        "ui[3]": "data_8b_in[3]",
        "ui[4]": "data_8b_in[4]",
        "ui[5]": "data_8b_in[5]",
        "ui[6]": "data_8b_in[6]",
        "ui[7]": "data_8b_in[7]",
        "uo[0]": "data_out[0]",
        "uo[1]": "data_out[1]",
        "uo[2]": "data_out[2]",
        "uo[3]": "data_out[3]",
        "uo[4]": "data_out[4]",
        "uo[5]": "data_out[5]",
        "uo[6]": "data_out[6]",
        "uo[7]": "data_out[7]",
        "uio[0]": "ser_in",
        "uio[1]": "ser_out",
        "uio[2]": "data_en",
        "uio[3]": "par_en",
        "uio[4]": "ser_en",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_shadow1229_vga_player",
      "address": 320,
      "title": "VGA player",
      "author": "shadow1229",
      "description": "80 x 60 binary pixel video player with PCM/PWM audio playing feature",
      "clock_hz": 31500000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/shadow1229/tt07-vga-player",
      "commit": "a24d72850178dce0c3b696872e5a8690f02c29b3",
      "pinout": {
        "ui[0]": "74880Hz 1-bit PCM(0) / 9360Hz 8-bit PWM(1)",
        "ui[1]": "Tiny VGA(0) / VGA clock PMOD(1)",
        "ui[2]": "color_off(0) - R",
        "ui[3]": "color_off(0) - G",
        "ui[4]": "color_off(0) - B",
        "ui[5]": "color_on(1)  - R",
        "ui[6]": "color_on(1)  - G",
        "ui[7]": "color_on(1)  - B",
        "uo[0]": "hsync / R1",
        "uo[1]": "vsync / G1",
        "uo[2]": "B0 / B1",
        "uo[3]": "B1 / VS",
        "uo[4]": "G0 / R0",
        "uo[5]": "G1 / G0",
        "uo[6]": "R0 / B0",
        "uo[7]": "R1 / HS",
        "uio[0]": "sound n",
        "uio[1]": "sound p",
        "uio[2]": "spi I/O 0 (W25Q128JVSSIQ NOR SPI flash chip)",
        "uio[3]": "spi I/O 1",
        "uio[4]": "spi I/O 2",
        "uio[5]": "spi I/O 3",
        "uio[6]": "spi flash clock",
        "uio[7]": "spi chip select"
      }
    },
    {
      "macro": "tt_um_spacecat_chan_john_pong_the_second",
      "address": 136,
      "title": "John Pong The Second",
      "author": "Sophia Rustfield (Representing HSWAW)",
      "description": "a hyper simple pong game with the polish pope taking the role of the ball outputted over vga",
      "clock_hz": 25175000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/SpaceCat-Chan/tt07-john-pong-the-second",
      "commit": "f3c16c7c77f779841c0d7a13d3cf3f4bd5592e5f",
      "pinout": {
        "ui[0]": "move paddle up",
        "ui[1]": "move paddle down",
        "ui[2]": "move player 2 paddle up",
        "ui[3]": "move player 2 paddle down",
        "ui[4]": "high voltage to activate player 2, low for ai",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "red channel bit 0",
        "uo[1]": "red channel bit 1",
        "uo[2]": "red channel bit 2",
        "uo[3]": "green channel bit 0",
        "uo[4]": "green channel bit 1",
        "uo[5]": "green channel bit 2",
        "uo[6]": "horizontal sync signal",
        "uo[7]": "vertical sync signal",
        "uio[0]": "blue channel bit 0",
        "uio[1]": "blue channel bit 1",
        "uio[2]": "blue channel bit 2",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_template",
      "address": 71,
      "title": "TT7 Simple Clock",
      "author": "Joseph Hsu",
      "description": "This is a very simple, configurable clock. By default it's 20 MHz, but it can be configured to 10/12/14 Mhz.",
      "clock_hz": 20000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JHsu01/tt07-clock",
      "commit": "0b8b9f4e4c177f0cad0b9ddb828c5dc099f49535",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "Clock Option - 10 MHz",
        "ui[2]": "Clock Option - 12 MHz",
        "ui[3]": "Clock Option - 14 MHz",
        "ui[4]": "Arduino Mode",
        "ui[5]": "Minute Display",
        "ui[6]": "Hour Display",
        "ui[7]": "4 Digit Mode",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_thatoddmailbox",
      "address": 134,
      "title": "DuckCPU",
      "author": "Alex Studer",
      "description": "Small System-on-Chip based around a custom 8-bit CPU.",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/thatoddmailbox/tt07-duckcpu",
      "commit": "5ea83e3fcc241137b9df9a96da2563e88c7a006d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "bootsel",
        "ui[5]": "spi0_miso",
        "ui[6]": "rspi_miso",
        "ui[7]": "uart0_rx",
        "uo[0]": "rspi_clk",
        "uo[1]": "rspi_mosi",
        "uo[2]": "rspi_flash_ce_n",
        "uo[3]": "rspi_ram_ce_n",
        "uo[4]": "uart0_tx",
        "uo[5]": "spi0_clk",
        "uo[6]": "spi0_mosi",
        "uo[7]": "spi0_ce_n",
        "uio[0]": "gpio0_data[0]",
        "uio[1]": "gpio0_data[1]",
        "uio[2]": "gpio0_data[2]",
        "uio[3]": "gpio0_data[3]",
        "uio[4]": "gpio0_data[4]",
        "uio[5]": "gpio0_data[5]",
        "uio[6]": "gpio0_data[6]",
        "uio[7]": "gpio0_data[7]"
      }
    },
    {
      "macro": "tt_um_tinytapeout_dvd_screensaver",
      "address": 130,
      "title": "DVD Screensaver with Tiny Tapeout Logo (Tiny VGA)",
      "author": "Uri Shaked",
      "description": "Tiny Tapeout Logo bouncing around the screen (640x480 VGA)",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt07-dvd-screensaver",
      "commit": "3c59c2f366595854edc1f8a9477f8304e6eaf832",
      "pinout": {
        "ui[0]": "tile",
        "ui[1]": "color",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tnt_diff_rx",
      "address": 524,
      "title": "TT07 Differential Receiver test",
      "author": "Sylvain Munaut",
      "description": "Small test module to test functionality of a differential input receiver",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11,
        10,
        7,
        9,
        8
      ],
      "repo": "https://github.com/smunaut/tt07-diff-rx",
      "commit": "2f22eea19e8ce28e3f56439e4b813dcc45ee1012",
      "pinout": {
        "ui[0]": "debug",
        "ui[1]": "bias_sel",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "q[0]",
        "uo[1]": "q[1]",
        "uo[2]": "q[2]",
        "uo[3]": "q[3]",
        "uo[4]": "q[4]",
        "uo[5]": "q[5]",
        "uo[6]": "q[6]",
        "uo[7]": "q[7]",
        "uio[0]": "q[8]",
        "uio[1]": "q[9]",
        "uio[2]": "q[10]",
        "uio[3]": "q[11]",
        "uio[4]": "q[12]",
        "uio[5]": "q[13]",
        "uio[6]": "q[14]",
        "uio[7]": "q[15]",
        "ua[0]": "clk_n",
        "ua[1]": "clk_p",
        "ua[2]": "data_n",
        "ua[3]": "data_p",
        "ua[4]": "ibias",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_toivoh_basilisc_2816",
      "address": 967,
      "title": "Basilisc-2816 v0.1a CPU",
      "author": "Toivo Henningsson",
      "description": "Small 2-bit serial 8/16 bit CPU",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/toivoh/tt07-basilisc-2816-cpu",
      "commit": "8bdb8bbf2d9eec6114acc6c152cef0ea2883b8aa",
      "pinout": {
        "ui[0]": "rx_in[0]",
        "ui[1]": "rx_in[1]",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "tx_out[0]",
        "uo[1]": "tx_out[1]",
        "uo[2]": "tx_fetch",
        "uo[3]": "tx_jump",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_toivoh_basilisc_2816_cpu_OL2",
      "address": 202,
      "title": "Basilisc-2816 v0.1b CPU",
      "author": "Toivo Henningsson",
      "description": "Small 2-bit serial 8/16 bit CPU",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/toivoh/tt07-basilisc-2816-cpu-OL2",
      "commit": "621db63cea649f7603f18e2b491a3fb1ec2c49d0",
      "pinout": {
        "ui[0]": "rx_in[0]",
        "ui[1]": "rx_in[1]",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "tx_out[0]",
        "uo[1]": "tx_out[1]",
        "uo[2]": "tx_fetch",
        "uo[3]": "tx_jump",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_toivoh_basilisc_2816_cpu_exp",
      "address": 72,
      "title": "Basilisc-2816 v0.1c CPU (experimental)",
      "author": "Toivo Henningsson",
      "description": "Small 2-bit serial 8/16 bit CPU",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/toivoh/tt07-basilisc-2816-cpu-experimental",
      "commit": "d5885df8b6b3b803671fa063676c359a6bb45607",
      "pinout": {
        "ui[0]": "rx_in[0]",
        "ui[1]": "rx_in[1]",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "tx_out[0]",
        "uo[1]": "tx_out[1]",
        "uo[2]": "tx_fetch",
        "uo[3]": "tx_jump",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tt7_meonwara",
      "address": 227,
      "title": "DDS and DAC",
      "author": "Meonwara",
      "description": "DDS with DAC and analogue output pin",
      "clock_hz": 40000000,
      "tiles": "1x2",
      "analog_pins": [
        4
      ],
      "repo": "https://github.com/meonwara/tt07_mw_analogue",
      "commit": "e1d1da753bc950abe449468892354911b2d87dee",
      "pinout": {
        "ui[0]": "ui[0]",
        "ui[1]": "ui[1]",
        "ui[2]": "ui[2]",
        "ui[3]": "ui[3]",
        "ui[4]": "ui[4]",
        "ui[5]": "ui[5]",
        "ui[6]": "ui[6]",
        "ui[7]": "ui[7]",
        "uo[0]": "uo[0]",
        "uo[1]": "uo[1]",
        "uo[2]": "uo[2]",
        "uo[3]": "uo[3]",
        "uo[4]": "uo[4]",
        "uo[5]": "uo[5]",
        "uo[6]": "uo[6]",
        "uo[7]": "uo[7]",
        "uio[0]": "uio[0]",
        "uio[1]": "uio[1]",
        "uio[2]": "uio[2]",
        "uio[3]": "uio[3]",
        "uio[4]": "uio[4]",
        "uio[5]": "uio[5]",
        "uio[6]": "uio[6]",
        "uio[7]": "uio[7]",
        "ua[0]": "ua[0]",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_twin_tee_opamp_osc",
      "address": 518,
      "title": "Twin Tee Sine Wave Generator",
      "author": "Matt Venn",
      "description": "Opamp plus notch filter = sine wave out",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11
      ],
      "repo": "https://github.com/mattvenn/tt07-twin-tee-opamp-osc",
      "commit": "e4c9827ad839dde549cc23cc8d163ac26353b3a9",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "counter bit 12",
        "uo[1]": "counter bit 13",
        "uo[2]": "counter bit 14",
        "uo[3]": "counter bit 15",
        "uo[4]": "counter bit 16",
        "uo[5]": "counter bit 17",
        "uo[6]": "counter bit 18",
        "uo[7]": "counter bit 19",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "sine out",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_underserved",
      "address": 328,
      "title": "underserved",
      "author": "Olof Kindgren",
      "description": "The award-winning SERV, the world's smallest RISC-V CPU. Now on Tiny Tapeout!",
      "clock_hz": 20000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/olofk/underserved",
      "commit": "7b9d08dec536623f44657c3ca316f3ce2b765910",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "gpio0",
        "uo[1]": "gpio1",
        "uo[2]": "gpio2",
        "uo[3]": "gpio3",
        "uo[4]": "gpio4",
        "uo[5]": "sclk",
        "uo[6]": "cs_n",
        "uo[7]": "mosi",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "miso"
      }
    },
    {
      "macro": "tt_um_unisnano",
      "address": 77,
      "title": "unisnano",
      "author": "Maria, Diego, Victor",
      "description": "UART menu with text output and hardware actions",
      "clock_hz": 50000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/vicvicvarunis/tt_unis_nano_24",
      "commit": "596a16f097b86d9d560e4e7597cd3ef12ade67cd",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "rx",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "output1",
        "uo[2]": "output2",
        "uo[3]": "",
        "uo[4]": "tx",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_urish_charge_pump",
      "address": 269,
      "title": "Dickson Charge Pump",
      "author": "Uri Shaked",
      "description": "Pumps the input voltage up to ~5.4V",
      "clock_hz": 2000000,
      "tiles": "1x2",
      "analog_pins": [
        8
      ],
      "repo": "https://github.com/urish/tt07-charge-pump",
      "commit": "0c254f358c495b1be96a1d127fb0970f4e6bba3d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "vout_div",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_urish_simon",
      "address": 897,
      "title": "Simon Says memory game",
      "author": "Uri Shaked",
      "description": "Repeat the sequence of colors and sounds to win the game",
      "clock_hz": 50000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt07-simon-game",
      "commit": "857fc56465b720bea0c22239a976aa3b2e47de02",
      "pinout": {
        "ui[0]": "btn1",
        "ui[1]": "btn2",
        "ui[2]": "btn3",
        "ui[3]": "btn4",
        "ui[4]": "seginv",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "led1",
        "uo[1]": "led2",
        "uo[2]": "led3",
        "uo[3]": "led4",
        "uo[4]": "speaker",
        "uo[5]": "dig1",
        "uo[6]": "dig2",
        "uo[7]": "",
        "uio[0]": "seg_a",
        "uio[1]": "seg_b",
        "uio[2]": "seg_c",
        "uio[3]": "seg_d",
        "uio[4]": "seg_e",
        "uio[5]": "seg_f",
        "uio[6]": "seg_g",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_urish_spell",
      "address": 782,
      "title": "SPELL",
      "author": "Uri Shaked",
      "description": "SPELL is a minimal, cryptic, stack-based programming language crafted for The Skull CTF",
      "clock_hz": 10000000,
      "tiles": "8x2",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt07-spell",
      "commit": "1aa1740ca4b21cf5c10d935dee1864fced67f9f2",
      "pinout": {
        "ui[0]": "run",
        "ui[1]": "step",
        "ui[2]": "load",
        "ui[3]": "dump",
        "ui[4]": "shift_in",
        "ui[5]": "reg_sel[0]",
        "ui[6]": "reg_sel[1]",
        "ui[7]": "",
        "uo[0]": "sleep/porta[0]",
        "uo[1]": "stop/porta[1]",
        "uo[2]": "wait_delay/porta[2]",
        "uo[3]": "shift_out/porta[3]",
        "uo[4]": "porta[4]",
        "uo[5]": "porta[5]",
        "uo[6]": "porta[6]",
        "uo[7]": "porta[7]",
        "uio[0]": "portb[0]",
        "uio[1]": "portb[1]",
        "uio[2]": "portb[2]",
        "uio[3]": "portb[3]",
        "uio[4]": "portb[4]",
        "uio[5]": "portb[5]",
        "uio[6]": "portb[6]",
        "uio[7]": "portb[7]"
      }
    },
    {
      "macro": "tt_um_vga_clock",
      "address": 903,
      "title": "VGA clock",
      "author": "Matt Venn",
      "description": "Shows the time on a VGA screen",
      "clock_hz": 31500000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/tt07-vga-clock",
      "commit": "7a30cdd04f9efdb74a65fac3441d585483587cce",
      "pinout": {
        "ui[0]": "adjust hours",
        "ui[1]": "adjust minutes",
        "ui[2]": "adjust seconds",
        "ui[3]": "PMOD type select",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "hsync / R1",
        "uo[1]": "vsync / G1",
        "uo[2]": "B0 / B1",
        "uo[3]": "B1 / VS",
        "uo[4]": "G0 / R0",
        "uo[5]": "G1 / G0",
        "uo[6]": "R0 / B0",
        "uo[7]": "R1 / HS",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_vga_perlin",
      "address": 260,
      "title": "VGA Perlin Noise",
      "author": "Uri Shaked",
      "description": "Simple animated perlin noise for TinyVGA PMod",
      "clock_hz": 31500000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt07-vga-perlin",
      "commit": "fffbcba2a9c5f96a2381f2d6790d94b088cc9eaa",
      "pinout": {
        "ui[0]": "pattern_sel",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_vga_snake",
      "address": 74,
      "title": "VGA Snake Game",
      "author": "Barak Hoffer",
      "description": "Snake game with vga output",
      "clock_hz": 31500000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/barakhoffer/tt07-vga-snake",
      "commit": "22d1353a124a7302bc5e30722266480236e392e2",
      "pinout": {
        "ui[0]": "left",
        "ui[1]": "right",
        "ui[2]": "up",
        "ui[3]": "down",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_vzayakov_top",
      "address": 38,
      "title": "Pong-VGA",
      "author": "Victor Zayakov",
      "description": "Pong game over a VGA connection",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/vzayakov/tt07-pong-vga",
      "commit": "991830edb2b3f3a98edc5bfef38a7bb6240bed73",
      "pinout": {
        "ui[0]": "R_move_switch",
        "ui[1]": "R_up_switch",
        "ui[2]": "L_move_switch",
        "ui[3]": "L_up_switch",
        "ui[4]": "serve_L_button",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "VGA_CLK",
        "uo[1]": "VGA_BLANK_N",
        "uo[2]": "VGA_SYNC_N",
        "uo[3]": "VGA_VS",
        "uo[4]": "VGA_HS",
        "uo[5]": "VGA_R",
        "uo[6]": "VGA_G",
        "uo[7]": "VGA_B",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_397140982440144897",
      "address": 907,
      "title": "7-Seg 'Tiny Tapeout' Display",
      "author": "J. Rosenthal & htfab",
      "description": "This circuit will output a string of characters (\u2019tiny tapeout\u2019) to the 7-segment display.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/htfab/tt07-7seg",
      "commit": "861070a8c390a723eeac738001d8fb23c353907d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "reset (sync)",
        "ui[2]": "",
        "ui[3]": "clock override",
        "ui[4]": "clock bit 3",
        "ui[5]": "clock bit 2",
        "ui[6]": "clock bit 1",
        "ui[7]": "clock bit 0",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_397142450561071105",
      "address": 905,
      "title": "Padlock",
      "author": "J. Rosenthal & htfab",
      "description": "Set a code for your precious safe",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/htfab/tt07-padlock",
      "commit": "55f7e07ec4a06bedba711ebf944f975b6baeb9d3",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "reset",
        "ui[2]": "code bit 0",
        "ui[3]": "code bit 1",
        "ui[4]": "code bit 2",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "set code",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_397268065185737729",
      "address": 965,
      "title": "Mini Light Up Game",
      "author": "Dyrick Williams",
      "description": "This is a small game where the objective is to light up the segments to form a '0' by toggling a switch at the correct moment.",
      "clock_hz": 10,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Dyrand/Tiny-Tapeout-Mini-Light-Up-Game",
      "commit": "b74223654d9883bc65514ae0537d44690bbc16a1",
      "pinout": {
        "ui[0]": "select",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "S1",
        "uo[1]": "S2",
        "uo[2]": "S3",
        "uo[3]": "S4",
        "uo[4]": "S5",
        "uo[5]": "S6",
        "uo[6]": "",
        "uo[7]": "SDOT",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_397774697322214401",
      "address": 971,
      "title": "secret L",
      "author": "stuart childs",
      "description": "basic first test - secret code on input displays a letter as output",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/saladss/TT-secret-L",
      "commit": "89013ac9817c56b9b29373942ce1b257658e5776",
      "pinout": {
        "ui[0]": "input0",
        "ui[1]": "input1",
        "ui[2]": "input2",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_399163158804194305",
      "address": 14,
      "title": "Digital Timer",
      "author": "Francisca Donoso",
      "description": "The circuit acts as a configurable timer displaying the remaining time in binary form as time passes",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/FranciscaDB/tt07-wokwi-Digital-Timer",
      "commit": "1e2456834b6a3e8c8903c71ebfc8ed0fab9efae7",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "in_start",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "out_state",
        "uio[5]": "out_end_flag",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_399169514887574529",
      "address": 10,
      "title": "Gaussian Blur",
      "author": "Alfonso Cortes",
      "description": "4-bit gaussian blur filter",
      "clock_hz": 100000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ChipUSM/tt07-wokwi-gaussian-blur",
      "commit": "aada950089119740410ed31cb6435f1b7c603166",
      "pinout": {
        "ui[0]": "reg_in[0]",
        "ui[1]": "reg_in[1]",
        "ui[2]": "reg_in[2]",
        "ui[3]": "reg_in[3]",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "reg_out[0]",
        "uo[1]": "reg_out[1]",
        "uo[2]": "reg_out[2]",
        "uo[3]": "reg_out[3]",
        "uo[4]": "blur[0]",
        "uo[5]": "blur[1]",
        "uo[6]": "blur[2]",
        "uo[7]": "blur[3]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_399192124046955521",
      "address": 65,
      "title": "ECC_test1",
      "author": "Dr. Vaibhav Neema",
      "description": "it is use for detecting single bit error",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/vaibhav-neema/ECC",
      "commit": "7e0688af8c999e141ee9c68a488dc6dac3680767",
      "pinout": {
        "ui[0]": "IN0",
        "ui[1]": "IN1",
        "ui[2]": "IN2",
        "ui[3]": "IN3",
        "ui[4]": "IN4",
        "ui[5]": "IN5",
        "ui[6]": "IN6",
        "ui[7]": "IN7",
        "uo[0]": "OUT0",
        "uo[1]": "OUT1",
        "uo[2]": "OUT2",
        "uo[3]": "OUT3",
        "uo[4]": "OUT4",
        "uo[5]": "OUT5",
        "uo[6]": "OUT6",
        "uo[7]": "OUT7",
        "uio[0]": "ttio0:IN",
        "uio[1]": "ttio1:IN",
        "uio[2]": "ttio2:IN",
        "uio[3]": "ttio3:IN",
        "uio[4]": "ttio4:OUT",
        "uio[5]": "ttio5:OUT",
        "uio[6]": "ttio6:OUT",
        "uio[7]": "ttio7:OUT"
      }
    },
    {
      "macro": "tt_um_wokwi_399336892246401025",
      "address": 12,
      "title": "UART",
      "author": "Elisa Parent",
      "description": "Connecting two digital devices",
      "clock_hz": 300,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ElisaParent/tt_um_ElisaParent_UART_wowki",
      "commit": "171f213c5b52924b0d79c65369513c0baac04e6f",
      "pinout": {
        "ui[0]": "in1",
        "ui[1]": "in2",
        "ui[2]": "in3",
        "ui[3]": "in4",
        "ui[4]": "in5",
        "ui[5]": "in6",
        "ui[6]": "in7",
        "ui[7]": "in8",
        "uo[0]": "out1",
        "uo[1]": "out2",
        "uo[2]": "out3",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_399447152724198401",
      "address": 4,
      "title": "8-Bit Register",
      "author": "Eric Ulteig",
      "description": "The 8 inputs are saved to the 8 outputs on a clock pulse",
      "clock_hz": 1,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Beird0/TT07_8-Bit_Register",
      "commit": "9062bcadc9f0793ffec409ce8f22c8b442bd81e4",
      "pinout": {
        "ui[0]": "input1",
        "ui[1]": "input2",
        "ui[2]": "input3",
        "ui[3]": "input4",
        "ui[4]": "input5",
        "ui[5]": "input6",
        "ui[6]": "input7",
        "ui[7]": "input8",
        "uo[0]": "output1",
        "uo[1]": "output2",
        "uo[2]": "output3",
        "uo[3]": "output4",
        "uo[4]": "output5",
        "uo[5]": "output6",
        "uo[6]": "output7",
        "uo[7]": "output8",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_399469995038350337",
      "address": 64,
      "title": "dEFAULt 2hAC",
      "author": "Beau Ambur",
      "description": "Inverted 7-segment !(tinY tAPeout)",
      "clock_hz": 1,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/nubcore/tt07-wokwi-inverted",
      "commit": "1a443507c4180ed09a4ace1f946234b85849cf2d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "a",
        "uo[1]": "b",
        "uo[2]": "c",
        "uo[3]": "d",
        "uo[4]": "e",
        "uo[5]": "f",
        "uo[6]": "g",
        "uo[7]": "dot",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_399488550855755777",
      "address": 70,
      "title": "My 9-year-old son made an 8-bit counter chip",
      "author": "Kian Dabui",
      "description": "My 9-year-old son made an 8-bit counter chip following instructions and a picture with a brief explanation.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/splinedrive/tt07-kian-binary-8bcounterby8yrs",
      "commit": "93616f1312f638670cf251d3eb609d309653d252",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "q0",
        "uo[1]": "q1",
        "uo[2]": "q2",
        "uo[3]": "q3",
        "uo[4]": "q4",
        "uo[5]": "q5",
        "uo[6]": "q6",
        "uo[7]": "q7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_399518371950068737",
      "address": 46,
      "title": "Full-adder out of a kmap",
      "author": "Levi Feldman",
      "description": "A full-adder made out of a kmap.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/levifeldman/tt7",
      "commit": "c0ba4e43e278899ae6bf523389572c92b4e14055",
      "pinout": {
        "ui[0]": "A",
        "ui[1]": "B",
        "ui[2]": "C-IN",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "SUM",
        "uo[1]": "C-OUT",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_xeniarose_sha256",
      "address": 718,
      "title": "tiny sha256",
      "author": "xenia dragon",
      "description": "a minimal single-cycle-round sha256 core intended to fit in one tile",
      "clock_hz": 50000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/xeniarose/tt07-sha256",
      "commit": "655efb860a6a89915d001c382ff274a11d1ce7a2",
      "pinout": {
        "ui[0]": "addressed register bit 0",
        "ui[1]": "addressed register bit 1",
        "ui[2]": "addressed register bit 2",
        "ui[3]": "addressed register bit 3",
        "ui[4]": "addressed register bit 4",
        "ui[5]": "addressed register bit 5",
        "ui[6]": "IO read/write select",
        "ui[7]": "IO clock",
        "uo[0]": "ready",
        "uo[1]": "IO read/write selected",
        "uo[2]": "todo0",
        "uo[3]": "todo1",
        "uo[4]": "todo2",
        "uo[5]": "todo3",
        "uo[6]": "todo4",
        "uo[7]": "todo5",
        "uio[0]": "data bit 0",
        "uio[1]": "data bit 1",
        "uio[2]": "data bit 2",
        "uio[3]": "data bit 3",
        "uio[4]": "data bit 4",
        "uio[5]": "data bit 5",
        "uio[6]": "data bit 6",
        "uio[7]": "data bit 7"
      }
    }
  ]
}