{
  "version": 3,
  "id": "ttihp0p1",
  "name": "Tiny Tapeout IHP 0.1",
  "repo": "https://github.com/TinyTapeout/tinytapeout-ihp-0p1",
  "commit": "7e4947d66db465dd9bb068426df5766d344d2529",
  "updated": "2024-08-12T00:25:51Z",
  "projects": [
    {
      "macro": "tt_um_algofoogle_raybox_zero",
      "address": 22,
      "title": "raybox-zero TT07 edition",
      "author": "algofoogle (Anton Maurovic)",
      "description": "TT07 improved resub of 'simple VGA ray caster game demo' from TT04",
      "clock_hz": 25000000,
      "tiles": "6x2",
      "analog_pins": [],
      "repo": "https://github.com/algofoogle/tt07-raybox-zero",
      "commit": "52f0c950ce848645954d855fd43489ddb16e0dc4",
      "pinout": {
        "ui[0]": "SPI in: pov_sclk",
        "ui[1]": "SPI in: pov_mosi",
        "ui[2]": "SPI in: pov_ss_n",
        "ui[3]": "debug",
        "ui[4]": "inc_px",
        "ui[5]": "inc_py",
        "ui[6]": "reg",
        "ui[7]": "gen_tex",
        "uo[0]": "red[1]",
        "uo[1]": "green[1]",
        "uo[2]": "blue[1]",
        "uo[3]": "vsync_n",
        "uo[4]": "red[0]",
        "uo[5]": "green[0]",
        "uo[6]": "blue[0]",
        "uo[7]": "hsync_n",
        "uio[0]": "Out: tex_csb",
        "uio[1]": "Out: tex_sclk",
        "uio[2]": "In: \"SPI2\" reg_sclk",
        "uio[3]": "In: \"SPI2\" reg_mosi",
        "uio[4]": "In: \"SPI2\" reg_ss_n",
        "uio[5]": "I/O: tex_io0",
        "uio[6]": "In: tex_io1",
        "uio[7]": "In: tex_io2"
      }
    },
    {
      "macro": "tt_um_chip_rom",
      "address": 0,
      "title": "Chip ROM",
      "author": "Uri Shaked",
      "description": "ROM with information about the chip",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt-chip-rom",
      "commit": "7b1d3638536711cabd8fd4d131e10a37cdd208df",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "addr[4]",
        "ui[5]": "addr[5]",
        "ui[6]": "addr[6]",
        "ui[7]": "addr[7]",
        "uo[0]": "data[0]",
        "uo[1]": "data[1]",
        "uo[2]": "data[2]",
        "uo[3]": "data[3]",
        "uo[4]": "data[4]",
        "uo[5]": "data[5]",
        "uo[6]": "data[6]",
        "uo[7]": "data[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_dinogame",
      "address": 20,
      "title": "VGA Dino Game",
      "author": "Anish Singhani",
      "description": "An endless-runner game implemented on a VGA monitor",
      "clock_hz": 0,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/asinghani/dinogame-tt05",
      "commit": "1260f6cce9c49f074d378ede868ff53714f2e17d",
      "pinout": {
        "ui[0]": "jump btn",
        "ui[1]": "halt btn",
        "ui[2]": "debug btn",
        "ui[3]": "mode btn",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "VGA R0",
        "uo[1]": "VGA G0",
        "uo[2]": "VGA B0",
        "uo[3]": "VGA vsync",
        "uo[4]": "VGA R1",
        "uo[5]": "VGA G1",
        "uo[6]": "VGA B1",
        "uo[7]": "VGA hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_dlmiles_muldiv4",
      "address": 8,
      "title": "MULDIV unit (4-bit signed/unsigned)",
      "author": "Darryl Miles",
      "description": "Combinational Multiply and Divide Unit (signed and unsigned)",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dlmiles/tt04-muldiv4",
      "commit": "1be4eb1afe68dd31b53dc008477c6746e870d557",
      "pinout": {
        "ui[0]": "MUL A[0], DIV Dend[0]",
        "ui[1]": "MUL A[1], DIV Dend[1]",
        "ui[2]": "MUL A[2], DIV Dend[2]",
        "ui[3]": "MUL A[3], DIV Dend[3]",
        "ui[4]": "MUL B[0], DIV Dsor[0]",
        "ui[5]": "MUL B[1], DIV Dsor[1]",
        "ui[6]": "MUL B[2], DIV Dsor[2]",
        "ui[7]": "MUL B[3], DIV Dsor[3]",
        "uo[0]": "MUL P[0], DIV Q[0]",
        "uo[1]": "MUL P[1], DIV Q[1]",
        "uo[2]": "MUL P[2], DIV Q[2]",
        "uo[3]": "MUL P[3], DIV Q[3]",
        "uo[4]": "MUL P[4], DIV R[0]",
        "uo[5]": "MUL P[5], DIV R[1]",
        "uo[6]": "MUL P[6], DIV R[2]",
        "uo[7]": "MUL P[7], DIV R[3]",
        "uio[0]": "(unused)",
        "uio[1]": "(unused)",
        "uio[2]": "(unused)",
        "uio[3]": "(unused)",
        "uio[4]": "DIV error overflow (output only)",
        "uio[5]": "DIV error divide-by-zero (output only)",
        "uio[6]": "OPSIGNED mode (input only)",
        "uio[7]": "MULDIV mode (input only)"
      }
    },
    {
      "macro": "tt_um_factory_test",
      "address": 1,
      "title": "TinyTapeout 7 Factory Test",
      "author": "Tiny Tapeout",
      "description": "Factory test module",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt07-factory-test",
      "commit": "affdc8cd37ceed313439a08f3a83859c50203076",
      "pinout": {
        "ui[0]": "sel / in_a[0]",
        "ui[1]": "in_a[1]",
        "ui[2]": "in_a[2]",
        "ui[3]": "in_a[3]",
        "ui[4]": "in_a[4]",
        "ui[5]": "in_a[5]",
        "ui[6]": "in_a[6]",
        "ui[7]": "in_a[7]",
        "uo[0]": "output[0] / counter[0]",
        "uo[1]": "output[1] / counter[1]",
        "uo[2]": "output[2] / counter[2]",
        "uo[3]": "output[3] / counter[3]",
        "uo[4]": "output[4] / counter[4]",
        "uo[5]": "output[5] / counter[5]",
        "uo[6]": "output[6] / counter[6]",
        "uo[7]": "output[7] / counter[7]",
        "uio[0]": "in_b[0] / counter[0]",
        "uio[1]": "in_b[1] / counter[1]",
        "uio[2]": "in_b[2] / counter[2]",
        "uio[3]": "in_b[3] / counter[3]",
        "uio[4]": "in_b[4] / counter[4]",
        "uio[5]": "in_b[5] / counter[5]",
        "uio[6]": "in_b[6] / counter[6]",
        "uio[7]": "in_b[7] / counter[7]"
      }
    },
    {
      "macro": "tt_um_flappy_vga_cutout1",
      "address": 14,
      "title": "Flappy VGA",
      "author": "Daniel Robinson",
      "description": "A simple flappy bird clone with a button input and 640x480 VGA output. 25MHz clock required.",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Cutout1/tt05-flappy-vga",
      "commit": "ba3ea911955f88c4ff137a878be4bf49c4e67658",
      "pinout": {
        "ui[0]": "Button",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "vsync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "hsync",
        "uio[0]": "score[0]",
        "uio[1]": "score[1]",
        "uio[2]": "score[2]",
        "uio[3]": "score[3]",
        "uio[4]": "score[4]",
        "uio[5]": "score[5]",
        "uio[6]": "score[6]",
        "uio[7]": "score[7]"
      }
    },
    {
      "macro": "tt_um_htfab_rotfpga2",
      "address": 12,
      "title": "ROTFPGA v2",
      "author": "htfab",
      "description": "A reconfigurable logic circuit made of identical rotatable tiles",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/htfab/rotfpga2",
      "commit": "369dae341d4d6d73c76958e78849efbda5640ebd",
      "pinout": {
        "ui[0]": "tile(0,0) left in",
        "ui[1]": "tile(0,1) left in",
        "ui[2]": "tile(0,2) left in",
        "ui[3]": "tile(0,3) left in",
        "ui[4]": "tile(0,4) left in",
        "ui[5]": "tile(0,5) left in",
        "ui[6]": "tile(0,6) left in",
        "ui[7]": "tile(0,7) left in",
        "uo[0]": "tile(7,0) right out",
        "uo[1]": "tile(7,1) right out",
        "uo[2]": "tile(7,2) right out",
        "uo[3]": "tile(7,3) right out",
        "uo[4]": "tile(7,4) right out",
        "uo[5]": "tile(7,5) right out",
        "uo[6]": "tile(7,6) right out",
        "uo[7]": "tile(7,7) right out",
        "uio[0]": "_scan enable_ input",
        "uio[1]": "_scan chain_ input",
        "uio[2]": "_configuration_ input bit 0",
        "uio[3]": "_configuration_ input bit 1",
        "uio[4]": "_loop breaker enable_ input",
        "uio[5]": "_loop breaker class_ input bit 0",
        "uio[6]": "_loop breaker class_ input bit 1",
        "uio[7]": "_scan chain_ output"
      }
    },
    {
      "macro": "tt_um_kianV_rv32ima_uLinux_SoC",
      "address": 23,
      "title": "KianV uLinux SoC",
      "author": "Hirosh Dabui",
      "description": "A RISC-V ASIC that can boot \u03bcLinux.",
      "clock_hz": 0,
      "tiles": "8x2",
      "analog_pins": [],
      "repo": "https://github.com/splinedrive/KianV-RV32IMA-RISC-V-uLinux-SoC",
      "commit": "70facbbd14b78b76a96913c6e0e7190ca77ed816",
      "pinout": {
        "ui[0]": "uart_rx",
        "ui[1]": "spi_sio1_so_miso0",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "spi_cen0",
        "uo[1]": "spi_sclk0",
        "uo[2]": "spi_sio0_si_mosi0",
        "uo[3]": "led[0]",
        "uo[4]": "uart_tx",
        "uo[5]": "led[1]",
        "uo[6]": "led[2]",
        "uo[7]": "led[3]",
        "uio[0]": "ce0 flash",
        "uio[1]": "sio0",
        "uio[2]": "sio1",
        "uio[3]": "sck",
        "uio[4]": "sd2",
        "uio[5]": "sd3",
        "uio[6]": "cs1 psram",
        "uio[7]": "always high"
      }
    },
    {
      "macro": "tt_um_mattvenn_rgb_mixer",
      "address": 7,
      "title": "RGB Mixer demo",
      "author": "Matt Venn",
      "description": "Zero to ASIC demo project",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/tt06-rgb-mixer",
      "commit": "73b9b9a8ad9f6e2656c30faa81a76aee2b797b00",
      "pinout": {
        "ui[0]": "enc0 a",
        "ui[1]": "enc0 b",
        "ui[2]": "enc1 a",
        "ui[3]": "enc1 b",
        "ui[4]": "enc2 a",
        "ui[5]": "enc2 b",
        "ui[6]": "debug bit 0",
        "ui[7]": "debug bit 1",
        "uo[0]": "pwm0",
        "uo[1]": "pwm1",
        "uo[2]": "pwm2",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "encoder bit 0",
        "uio[1]": "encoder bit 1",
        "uio[2]": "encoder bit 2",
        "uio[3]": "encoder bit 3",
        "uio[4]": "encoder bit 4",
        "uio[5]": "encoder bit 5",
        "uio[6]": "encoder bit 6",
        "uio[7]": "encoder bit 7"
      }
    },
    {
      "macro": "tt_um_meriac_play_tune",
      "address": 11,
      "title": "Super Mario Tune on A Piezo Speaker",
      "author": "Milosch Meriac",
      "description": "Plays Super Mario Tune over a Piezo Speaker connected across uio_out[1:0]",
      "clock_hz": 100000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/meriac/tt05-play-tune",
      "commit": "554f6a5be2c5362097ce867ed9c3aa783d56e0fc",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "ui_in[0]",
        "uo[1]": "ui_in[1]",
        "uo[2]": "ui_in[2]",
        "uo[3]": "ui_in[3]",
        "uo[4]": "ui_in[4]",
        "uo[5]": "ui_in[5]",
        "uo[6]": "ui_in[6]",
        "uo[7]": "ui_in[7]",
        "uio[0]": "piezo_speaker_p (uio_out[0])",
        "uio[1]": "piezo_speaker_n (uio_out[1])",
        "uio[2]": "GND",
        "uio[3]": "GND",
        "uio[4]": "GND",
        "uio[5]": "GND",
        "uio[6]": "GND",
        "uio[7]": "GND"
      }
    },
    {
      "macro": "tt_um_MichaelBell_nanoV",
      "address": 19,
      "title": "Risc-V Nano V",
      "author": "Michael Bell",
      "description": "RV32E bit serial processor",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/tt04-nanoV",
      "commit": "76f850a4d73398e16c32a3e790d24bd27d845318",
      "pinout": {
        "ui[0]": "General purpose input 0",
        "ui[1]": "General purpose input 1",
        "ui[2]": "General purpose input 2",
        "ui[3]": "General purpose input 3",
        "ui[4]": "General purpose input 4",
        "ui[5]": "General purpose input 5",
        "ui[6]": "General purpose input 6",
        "ui[7]": "General purpose input 7",
        "uo[0]": "segment a / GP output 0",
        "uo[1]": "segment b / GP output 1",
        "uo[2]": "segment c / GP output 2",
        "uo[3]": "segment d / GP output 3",
        "uo[4]": "segment e / GP output 4",
        "uo[5]": "segment f / GP output 5",
        "uo[6]": "segment g / GP output 6",
        "uo[7]": "dot / GP output 7",
        "uio[0]": "SPI RAM MOSI",
        "uio[1]": "SPI RAM CSn",
        "uio[2]": "SPI RAM SCK",
        "uio[3]": "SPI RAM MISO",
        "uio[4]": "UART RX",
        "uio[5]": "UART TX",
        "uio[6]": "UART RTS",
        "uio[7]": "SPI RAM ~Hold"
      }
    },
    {
      "macro": "tt_um_no_time_for_squares_tommythorn",
      "address": 21,
      "title": "No Time for Squares",
      "author": "Tommy Thorn",
      "description": "It's a 12-hour clock, drawn with triangles rendered by a race-the-beam triangle render",
      "clock_hz": 31500000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/tommythorn/no-time-for-squares",
      "commit": "e790eadb9ef3e7cea80ea629d8d2abceb4f720fe",
      "pinout": {
        "ui[0]": "clock",
        "ui[1]": "reset",
        "ui[2]": "hour, advance hour",
        "ui[3]": "minute, advance minute",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "debugsel\\[1]",
        "ui[7]": "debugsel\\[0]",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "vsync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "hsync",
        "uio[0]": "debug\\[7]",
        "uio[1]": "debug\\[6]",
        "uio[2]": "debug\\[5]",
        "uio[3]": "debug\\[4]",
        "uio[4]": "debug\\[3]",
        "uio[5]": "debug\\[2]",
        "uio[6]": "debug\\[1]",
        "uio[7]": "debug\\[0]"
      }
    },
    {
      "macro": "tt_um_psychogenic_neptuneproportional",
      "address": 6,
      "title": "Neptune guitar tuner (proportional window, version b, debug output on bidir pins, larger set of frequencies)",
      "author": "Pat Deegan",
      "description": "It's a guitar tuner!  and so much more... ",
      "clock_hz": 1000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/psychogenic/tt04-neptune",
      "commit": "3854c9280281eac0806a5b2f9983e316c6406a09",
      "pinout": {
        "ui[0]": "n/a",
        "ui[1]": "n/a",
        "ui[2]": "clk config 0",
        "ui[3]": "clk config 1",
        "ui[4]": "clk config 2",
        "ui[5]": "input pulse",
        "ui[6]": "output display single enable (LOW == dual)",
        "ui[7]": "output display select",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "dot or select (for dual)",
        "uio[0]": "raw input pulse count bit 0",
        "uio[1]": "raw input pulse count bit 1",
        "uio[2]": "raw input pulse count bit 2",
        "uio[3]": "raw input pulse count bit 3",
        "uio[4]": "raw input pulse count bit 4",
        "uio[5]": "raw input pulse count bit 5",
        "uio[6]": "raw input pulse count bit 6",
        "uio[7]": "raw input pulse count bit 7"
      }
    },
    {
      "macro": "tt_um_rejunity_ay8913",
      "address": 15,
      "title": "Classic 8-bit era Programmable Sound Generator AY-3-8913",
      "author": "ReJ aka Renaldas Zioma",
      "description": "The AY-3-8913 is a 3-voice programmable sound generator (PSG) chip from General Instruments. The AY-3-8913 is a smaller variant of AY-3-8910 or its analog YM2149.",
      "clock_hz": 2000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tt05-psg-ay8913",
      "commit": "a93ee1da79593aca863c5d507e2177e233f67ffe",
      "pinout": {
        "ui[0]": "DA0 - multiplexed data/address bus",
        "ui[1]": "DA1 - multiplexed data/address bus",
        "ui[2]": "DA2 - multiplexed data/address bus",
        "ui[3]": "DA3 - multiplexed data/address bus",
        "ui[4]": "DA4 - multiplexed data/address bus",
        "ui[5]": "DA5 - multiplexed data/address bus",
        "ui[6]": "DA6 - multiplexed data/address bus",
        "ui[7]": "DA7 - multiplexed data/address bus",
        "uo[0]": "audio out (pwm)",
        "uo[1]": "digita audio least significant bit",
        "uo[2]": "digita audio",
        "uo[3]": "digita audio",
        "uo[4]": "digita audio",
        "uo[5]": "digita audio",
        "uo[6]": "digita audio",
        "uo[7]": "digita audio most significant bit",
        "uio[0]": "(in) **BC1** bus control",
        "uio[1]": "(in) **BDIR** bus direction",
        "uio[2]": "(in) **SEL0** clock divider",
        "uio[3]": "(in) **SEL1** clock divider",
        "uio[4]": "(out) channel A (PWM)",
        "uio[5]": "(out) channel B (PWM)",
        "uio[6]": "(out) channel C (PWM)",
        "uio[7]": "(out) AUDIO OUT master (PWM)"
      }
    },
    {
      "macro": "tt_um_robojan_top",
      "address": 18,
      "title": "Tiny Breakout",
      "author": "Robbert-Jan de Jager",
      "description": "This is a small breakout game implemented in HDL. It uses a VGA connector to output the video signal. The game is controlled by 3 buttons. The left button moves the paddle to the left, the right button moves the paddle to the right and the action button starts the game. The game is over when all blocks are destroyed or when the ball hits the bottom of the screen.",
      "clock_hz": 25175000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/robojan/tt04-breakout-submission",
      "commit": "19bec184c8db4208729cbac44f92abc956d84f39",
      "pinout": {
        "ui[0]": "MOSI",
        "ui[1]": "SCK",
        "ui[2]": "slave select",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "Button left",
        "ui[6]": "Button right",
        "ui[7]": "Button action",
        "uo[0]": "HSync",
        "uo[1]": "VSync",
        "uo[2]": "Red output bit 0",
        "uo[3]": "Red output bit 1",
        "uo[4]": "Green output bit 0",
        "uo[5]": "Green output bit 1",
        "uo[6]": "Blue output bit 0",
        "uo[7]": "Blue output bit 1",
        "uio[0]": "MISO",
        "uio[1]": "HBlank",
        "uio[2]": "VBlank",
        "uio[3]": "sound output. Connect to a speaker with amplifier.",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tomkeddie_a",
      "address": 10,
      "title": "VGA Experiments",
      "author": "Tom Keddie",
      "description": "Simple Game",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TomKeddie/tinytapeout-2023-tt05a",
      "commit": "621f0f1604bb5d5ea33630bae4f026edd93948cb",
      "pinout": {
        "ui[0]": "left paddle up",
        "ui[1]": "left paddle down",
        "ui[2]": "right paddle up",
        "ui[3]": "right paddle down",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "pmod sel (high=mole99, low=digilent)",
        "uo[0]": "r1/r0 (mole99/digilent)",
        "uo[1]": "g1/r1 (mole99/digilent)",
        "uo[2]": "b1/r2 (mole99/digilent)",
        "uo[3]": "vsync/r3 (mole99/digilent)",
        "uo[4]": "r0/b0 (mole99/digilent)",
        "uo[5]": "g0/b1 (mole99/digilent)",
        "uo[6]": "b0/b2 (mole99/digilent)",
        "uo[7]": "hsync/b3 (mole99/digilent)",
        "uio[0]": "g0",
        "uio[1]": "g1",
        "uio[2]": "g2",
        "uio[3]": "g3",
        "uio[4]": "hsync",
        "uio[5]": "vsync",
        "uio[6]": "tied low",
        "uio[7]": "tied low"
      }
    },
    {
      "macro": "tt_um_top_mole99",
      "address": 9,
      "title": "One Sprite Pony",
      "author": "Leo Moser",
      "description": "This SVGA design has exactly one trick up its sleeve: it displays a sprite!",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mole99/tt05-one-sprite-pony",
      "commit": "763590f5892dad22081c96777b660326b326c83c",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VS",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HS",
        "uio[0]": "CS",
        "uio[1]": "MOSI",
        "uio[2]": "MISO",
        "uio[3]": "SCK",
        "uio[4]": "Vertical Pulse",
        "uio[5]": "Horizontal Pulse",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_urish_simon",
      "address": 2,
      "title": "Simon Says memory game",
      "author": "Uri Shaked",
      "description": "Repeat the sequence of colors and sounds to win the game",
      "clock_hz": 50000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt07-simon-game",
      "commit": "857fc56465b720bea0c22239a976aa3b2e47de02",
      "pinout": {
        "ui[0]": "btn1",
        "ui[1]": "btn2",
        "ui[2]": "btn3",
        "ui[3]": "btn4",
        "ui[4]": "seginv",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "led1",
        "uo[1]": "led2",
        "uo[2]": "led3",
        "uo[3]": "led4",
        "uo[4]": "speaker",
        "uo[5]": "dig1",
        "uo[6]": "dig2",
        "uo[7]": "",
        "uio[0]": "seg_a",
        "uio[1]": "seg_b",
        "uio[2]": "seg_c",
        "uio[3]": "seg_d",
        "uio[4]": "seg_e",
        "uio[5]": "seg_f",
        "uio[6]": "seg_g",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_urish_usb_cdc",
      "address": 17,
      "title": "USB CDC (Serial)",
      "author": "Uri Shaked",
      "description": "USB to Serial bridge",
      "clock_hz": 48000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt04-usbcdc",
      "commit": "91b374368fe50a87ca772199ca287de41c83f9ea",
      "pinout": {
        "ui[0]": "tx[0]",
        "ui[1]": "tx[1]",
        "ui[2]": "tx[2]",
        "ui[3]": "tx[3]",
        "ui[4]": "tx[4]",
        "ui[5]": "tx[5]",
        "ui[6]": "tx[6]",
        "ui[7]": "tx[7]",
        "uo[0]": "rx[0]",
        "uo[1]": "rx[1]",
        "uo[2]": "rx[2]",
        "uo[3]": "rx[3]",
        "uo[4]": "rx[4]",
        "uo[5]": "rx[5]",
        "uo[6]": "rx[6]",
        "uo[7]": "rx[7]",
        "uio[0]": "usb_p",
        "uio[1]": "usb_n",
        "uio[2]": "tx_valid",
        "uio[3]": "tx_ready",
        "uio[4]": "rx_valid",
        "uio[5]": "rx_ready",
        "uio[6]": "dp_pu_o",
        "uio[7]": "configured"
      }
    },
    {
      "macro": "tt_um_uwuifier",
      "address": 16,
      "title": "UART uwuifier",
      "author": "Anish Singhani",
      "description": "Operates on a UART signal and uwuifies it",
      "clock_hz": 6000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/asinghani/uwuifier-tt05",
      "commit": "bf8bcdb06a3b21943d9a78886e99f0ac4f9155b6",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "uart rx",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "uart tx",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_vga_clock",
      "address": 3,
      "title": "VGA clock",
      "author": "Matt Venn",
      "description": "Shows the time on a VGA screen",
      "clock_hz": 31500000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/tt07-vga-clock",
      "commit": "7a30cdd04f9efdb74a65fac3441d585483587cce",
      "pinout": {
        "ui[0]": "adjust hours",
        "ui[1]": "adjust minutes",
        "ui[2]": "adjust seconds",
        "ui[3]": "PMOD type select",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "hsync / R1",
        "uo[1]": "vsync / G1",
        "uo[2]": "B0 / B1",
        "uo[3]": "B1 / VS",
        "uo[4]": "G0 / R0",
        "uo[5]": "G1 / G0",
        "uo[6]": "R0 / B0",
        "uo[7]": "R1 / HS",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_380408823952452609",
      "address": 13,
      "title": "Character Selector",
      "author": "Dakota W Winslow",
      "description": "A circuit to output latin characters on a 7-segment display",
      "clock_hz": 1000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dakotawinslow/TinyTapeout5",
      "commit": "ba59a42f6cde2818a6a8b80be1c42e3492eb4408",
      "pinout": {
        "ui[0]": "dip0",
        "ui[1]": "dip1",
        "ui[2]": "dip2",
        "ui[3]": "dip3",
        "ui[4]": "dip4",
        "ui[5]": "dip5",
        "ui[6]": "not connected",
        "ui[7]": "not connected",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "dot",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_397140982440144897",
      "address": 4,
      "title": "7-Seg 'Tiny Tapeout' Display",
      "author": "J. Rosenthal & htfab",
      "description": "This circuit will output a string of characters (\u2019tiny tapeout\u2019) to the 7-segment display.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/htfab/tt07-7seg",
      "commit": "861070a8c390a723eeac738001d8fb23c353907d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "reset (sync)",
        "ui[2]": "",
        "ui[3]": "clock override",
        "ui[4]": "clock bit 3",
        "ui[5]": "clock bit 2",
        "ui[6]": "clock bit 1",
        "ui[7]": "clock bit 0",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_397142450561071105",
      "address": 5,
      "title": "Padlock",
      "author": "J. Rosenthal & htfab",
      "description": "Set a code for your precious safe",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/htfab/tt07-padlock",
      "commit": "55f7e07ec4a06bedba711ebf944f975b6baeb9d3",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "reset",
        "ui[2]": "code bit 0",
        "ui[3]": "code bit 1",
        "ui[4]": "code bit 2",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "set code",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    }
  ]
}