{
  "version": 3,
  "id": "tt03p5",
  "name": "Tiny Tapeout 3.5",
  "repo": "https://github.com/TinyTapeout/tinytapeout-03p5",
  "commit": "b511e6d6232bb79a74cdd528eeb2ae67c95d19cc",
  "updated": "2024-06-20T10:21:38Z",
  "projects": [
    {
      "macro": "tt_um_MichaelBell_hovalaag",
      "address": 22,
      "title": "Hovalaag CPU",
      "author": "Mike Bell",
      "description": "Implementation of the CPU from HOVALAAG",
      "clock_hz": 12500,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/tt03-hovalaag",
      "commit": "3da1b42ac9eae33d46fbaa37a82b06823f0210a0",
      "pinout": {
        "ui[0]": "Input 0",
        "ui[1]": "Input 1",
        "ui[2]": "Input 2 or Reset (when high)",
        "ui[3]": "Input 3 or Reset subcycle count (when high)",
        "ui[4]": "Input 4 or enable ROSC (when high and reset enabled)",
        "ui[5]": "Input 5",
        "ui[6]": "Input 6",
        "ui[7]": "Input 7",
        "uo[0]": "Output 0",
        "uo[1]": "Output 1",
        "uo[2]": "Output 2",
        "uo[3]": "Output 3",
        "uo[4]": "Output 4",
        "uo[5]": "Output 5",
        "uo[6]": "Output 6",
        "uo[7]": "Output 7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_Reloj_top",
      "address": 36,
      "title": "Wall Clock and Alarm",
      "author": "Daniel Arevalos",
      "description": "An small 8 display clock with alarm usign time-division-multiplexing",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/lild4d4/tt03p5-Wall-Clock-and-Alarm",
      "commit": "61b7ea779f553e7751b9aabf6f0bd19417ea2c5a",
      "pinout": {
        "ui[0]": "up",
        "ui[1]": "down",
        "ui[2]": "center",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "dot",
        "uio[0]": "anode 0",
        "uio[1]": "anode 1",
        "uio[2]": "anode 2",
        "uio[3]": "anode 3",
        "uio[4]": "anode 4",
        "uio[5]": "anode 5",
        "uio[6]": "anode 6",
        "uio[7]": "anode 7"
      }
    },
    {
      "macro": "tt_um_TrainLED2_top",
      "address": 19,
      "title": "TrainLED2 - RGB-LED driver with 8 bit PWM engine",
      "author": "cpldcpu",
      "description": "A RGB-LED driver using the WS2812 protocol",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/cpldcpu/tt03p5-TrainLED2",
      "commit": "d33443cd9f205a6be840b5cbefcea8183e07954e",
      "pinout": {
        "ui[0]": "Din Driver A",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Dout Driver A",
        "uo[1]": "LED1A",
        "uo[2]": "LED2A",
        "uo[3]": "LED3A",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_algofoogle_solo_squash",
      "address": 37,
      "title": "Solo Squash VGA game",
      "author": "Anton Maurovic (algofoogle)",
      "description": "VGA display driver that implements a minimal Pong-like game for 1 player",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/algofoogle/tt03p5-solo-squash",
      "commit": "c63d7418f33d0b85f894c0378d49dc7fffe4efe9",
      "pinout": {
        "ui[0]": "pause",
        "ui[1]": "new_game",
        "ui[2]": "down_key",
        "ui[3]": "up_key",
        "ui[4]": "extra_sel",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "blue",
        "uo[1]": "green",
        "uo[2]": "red",
        "uo[3]": "hsync",
        "uo[4]": "vsync",
        "uo[5]": "speaker",
        "uo[6]": "col0",
        "uo[7]": "row0",
        "uio[0]": "lzc_out[0]",
        "uio[1]": "lzc_out[1]",
        "uio[2]": "lzc_out[2]",
        "uio[3]": "lzc_out[3]",
        "uio[4]": "lzc_out[4]",
        "uio[5]": "lzc_all",
        "uio[6]": "debug1",
        "uio[7]": "debug2"
      }
    },
    {
      "macro": "tt_um_apu_pulse",
      "address": 38,
      "title": "XLS APU Pulse Oscillator",
      "author": "Johan Euphrosine",
      "description": "attempt at recreating the square oscillator from the NES APU with XLS",
      "clock_hz": 117295,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/proppy/tt03p5-xls-apu",
      "commit": "f85fdd8bf15f698af92ac5e30b6614c5f7b3826d",
      "pinout": {
        "ui[0]": "pulse 1 period  0/10",
        "ui[1]": "pulse 1 period  1/10",
        "ui[2]": "pulse 1 period  2/10",
        "ui[3]": "pulse 1 period  3/10",
        "ui[4]": "pulse 1 period  4/10",
        "ui[5]": "pulse 1 period  5/10",
        "ui[6]": "pulse 1 period  6/10",
        "ui[7]": "pulse 1 period  7/10",
        "uo[0]": "signal 0",
        "uo[1]": "signal 0 valid output flag",
        "uo[2]": "period ready output flag",
        "uo[3]": "duty ready output flag",
        "uo[4]": "signal 1",
        "uo[5]": "signal 2",
        "uo[6]": "signal 3",
        "uo[7]": "signal 4",
        "uio[0]": "pulse 1 period  8/10",
        "uio[1]": "pulse 1 period  9/10",
        "uio[2]": "pulse 1 period 10/10",
        "uio[3]": "pulse 1 duty cycle 0/1",
        "uio[4]": "pulse 1 duty cycle 1/1",
        "uio[5]": "period valid input flag",
        "uio[6]": "duty valid input flag",
        "uio[7]": "output ready input flag"
      }
    },
    {
      "macro": "tt_um_as1802",
      "address": 0,
      "title": "AS1802",
      "author": "Tholin",
      "description": "Implementation of CDP1802 architecture, with only a few things missing.",
      "clock_hz": 1000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/89Mods/tt3p5-as1802",
      "commit": "b0acd85b033435858e55c4165421192174aa5f31",
      "pinout": {
        "ui[0]": "EF0b",
        "ui[1]": "EF1b",
        "ui[2]": "EF2b",
        "ui[3]": "EF3b",
        "ui[4]": "INT",
        "ui[5]": "RXD",
        "ui[6]": "SI",
        "ui[7]": "",
        "uo[0]": "Q",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "CSB_RAM",
        "uo[4]": "SCK_RAM",
        "uo[5]": "TXD",
        "uo[6]": "SCK",
        "uo[7]": "SO",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "IO0_RAM",
        "uio[5]": "IO1_RAM",
        "uio[6]": "IO2_RAM",
        "uio[7]": "IO3_RAM"
      }
    },
    {
      "macro": "tt_um_cam",
      "address": 23,
      "title": "Simple verilog content-addressable memory/associative array",
      "author": "Ioannis-Rafail Tzonevrakis",
      "description": "This module implements a 16x7 memory that is addressable by its contents, rather than addresses.",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/irtzonevrakis/tt03p5-content-addressable-memory",
      "commit": "aeaa1a7c922a1dd5b2537927cf96cea53c1226c9",
      "pinout": {
        "ui[0]": "content",
        "ui[1]": "content",
        "ui[2]": "content",
        "ui[3]": "content",
        "ui[4]": "content",
        "ui[5]": "content",
        "ui[6]": "content",
        "ui[7]": "write_enable",
        "uo[0]": "found_addr",
        "uo[1]": "found_addr",
        "uo[2]": "found_addr",
        "uo[3]": "found_addr",
        "uo[4]": "found_addr",
        "uo[5]": "found_addr",
        "uo[6]": "found_addr",
        "uo[7]": "found_addr",
        "uio[0]": "found_addr",
        "uio[1]": "found_addr",
        "uio[2]": "found_addr",
        "uio[3]": "found_addr",
        "uio[4]": "found_addr",
        "uio[5]": "found_addr",
        "uio[6]": "found_addr",
        "uio[7]": "found_addr"
      }
    },
    {
      "macro": "tt_um_gatecat_fpga_top",
      "address": 35,
      "title": "FPGA test",
      "author": "myrtle",
      "description": "small mux2 fpga test",
      "clock_hz": 1000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/psychogenic/tt03p5-gatecat-fpga",
      "commit": "eab390b8eab2dd5f82991fe6b628bae058851b6c",
      "pinout": {
        "ui[0]": "clock",
        "ui[1]": "cfg_frameinc",
        "ui[2]": "cfg_framestrb",
        "ui[3]": "cfg_mode",
        "ui[4]": "cfg_sel0_in0",
        "ui[5]": "cfg_sel0_in1",
        "ui[6]": "cfg_sel0_in2",
        "ui[7]": "cfg_sel0_in3",
        "uo[0]": "out 0",
        "uo[1]": "out 1",
        "uo[2]": "out 2",
        "uo[3]": "out 3",
        "uo[4]": "out 4",
        "uo[5]": "out 5",
        "uo[6]": "out 6",
        "uo[7]": "out 7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_greycode_top",
      "address": 16,
      "title": "Grey-code divide by 10 and 100 of six different ring oscillators",
      "author": "Daniel Wisehart",
      "description": "Select one of six ring oscillators.  If none is selected the system clock is used.  The output will be divided by 10 (uo[0]) and 100 (uo[5]). uo[4:0] together is x1 decemal grey-code of the ring oscillator.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dwisehart/tt03p5-greycode",
      "commit": "557e260665b06d232fd959a69f89b225708b2966",
      "pinout": {
        "ui[0]": "ui[7]",
        "ui[1]": "ui[6]",
        "ui[2]": "ui[5]",
        "ui[3]": "ui[4]",
        "ui[4]": "ui[3]",
        "ui[5]": "ui[2]",
        "ui[6]": "ui[1]",
        "ui[7]": "ui[0]",
        "uo[0]": "uo[7]",
        "uo[1]": "uo[6]",
        "uo[2]": "uo[5]",
        "uo[3]": "uo[4]",
        "uo[4]": "uo[3]",
        "uo[5]": "uo[2]",
        "uo[6]": "uo[1]",
        "uo[7]": "uo[0]",
        "uio[0]": "uio[7]",
        "uio[1]": "uio[6]",
        "uio[2]": "uio[5]",
        "uio[3]": "uio[4]",
        "uio[4]": "uio[3]",
        "uio[5]": "uio[2]",
        "uio[6]": "uio[1]",
        "uio[7]": "uio[0]"
      }
    },
    {
      "macro": "tt_um_htfab_totp",
      "address": 34,
      "title": "TOTP authenticator",
      "author": "htfab",
      "description": "Generates 6 to 8 digit codes for two-factor authentication based on a shared secret and the current timestamp. Compatible with Google Authenticator, Aegis, Authy, Duo, FreeOTP etc.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/htfab/totp",
      "commit": "7c2f410ae51c700f402ca81b919a80d696c7e946",
      "pinout": {
        "ui[0]": "serial data line",
        "ui[1]": "hold high while sending key",
        "ui[2]": "hold high while sending timestamp",
        "ui[3]": "digit selector bit 0",
        "ui[4]": "digit selector bit 1",
        "ui[5]": "digit selector bit 2",
        "ui[6]": "debug selector 1",
        "ui[7]": "debug selector 2",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "calculation finished",
        "uio[0]": "hotp reset override (in) / sha1 debug bit 0",
        "uio[1]": "hotp data override (in) / sha1 debug bit 1",
        "uio[2]": "hotp output / hmac debug bit 0",
        "uio[3]": "hotp debug bit 1 / hmac debug bit 1",
        "uio[4]": "digit value bit 0 / hmac debug bit 2",
        "uio[5]": "digit value bit 1 / hmac debug bit 3",
        "uio[6]": "digit value bit 2 / stream debug bit 0 / hmac debug bit 4",
        "uio[7]": "digit value bit 3 / stream debug bit 1 / hotp debug bit 0"
      }
    },
    {
      "macro": "tt_um_kiwih_tt_top",
      "address": 2,
      "title": "TT3p5-QTCore-A1",
      "author": "Hammond Pearce",
      "description": "An accumulator-based 8-bit microarchitecture designed via GPT-4 conversations.",
      "clock_hz": 1000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/kiwih/tt03p5-verilog-qtcoreA1",
      "commit": "20f2c22b74a7fe7ca9f58b951db8ca029b1e0702",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "scan enable (active low) - connect to an SPI chip select.",
        "ui[3]": "processor enable (active low) - connect to an SPI chip select.",
        "ui[4]": "scan data in - connect to an SPI MOSI.",
        "ui[5]": "general purpose input (e.g. Button). This input will be provided to the I/O register bit 0.",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "general purpose output 0 (e.g. LED segment a). This output comes from the I/O register bit 1.",
        "uo[1]": "general purpose output 1 (e.g. LED segment b). This output comes from the I/O register bit 2.",
        "uo[2]": "general purpose output 2 (e.g. LED segment c). This output comes from the I/O register bit 3.",
        "uo[3]": "general purpose output 3 (e.g. LED segment d). This output comes from the I/O register bit 4.",
        "uo[4]": "general purpose output 4 (e.g. LED segment e). This output comes from the I/O register bit 5.",
        "uo[5]": "general purpose output 5 (e.g. LED segment f). This output comes from the I/O register bit 6.",
        "uo[6]": "general purpose output 6 (e.g. LED segment g). This output comes from the I/O register bit 7.",
        "uo[7]": "scan data out - connect to an SPI MISO.",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "halt_out (direct MISO connection)",
        "uio[7]": "scan_out (direct MISO connection)"
      }
    },
    {
      "macro": "tt_um_loopback",
      "address": 32,
      "title": "TinyTapeout 3p5 Loopback",
      "author": "Sylvain Munaut",
      "description": "Loopback test module",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt03p5-loopback",
      "commit": "d44b24387a3191ecc6671b9c2157b065564b742d",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "mirrors in0",
        "uo[1]": "mirrors in0",
        "uo[2]": "mirrors in0",
        "uo[3]": "mirrors in0",
        "uo[4]": "mirrors in0",
        "uo[5]": "mirrors in0",
        "uo[6]": "mirrors in0",
        "uo[7]": "the value of in4 & in5 & in6 & in7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_millerresearch_top",
      "address": 52,
      "title": "SPINet",
      "author": "Richard Miller",
      "description": "Network On Chip for microcontroller clusters connected via SPI",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/millerresearch/tt03p5",
      "commit": "876a0eb165f14db1ad9b4b4cf197b96ac438ede7",
      "pinout": {
        "ui[0]": "Node 0 SPI SS",
        "ui[1]": "Node 0 SPI SCLK",
        "ui[2]": "Node 0 SPI MOSI",
        "ui[3]": "Node 1 SPI SS",
        "ui[4]": "Node 1 SPI SCLK",
        "ui[5]": "Node 1 SPI MOSI",
        "ui[6]": "Node 2 SPI SS",
        "ui[7]": "Node 2 SPI SCLK",
        "uo[0]": "Node 0 SPI MISO",
        "uo[1]": "Node 0 TXREADY",
        "uo[2]": "Node 0 RXREADY",
        "uo[3]": "Node 1 SPI MISO",
        "uo[4]": "Node 1 TXREADY",
        "uo[5]": "Node 1 RXREADY",
        "uo[6]": "Node 2 SPI MISO",
        "uo[7]": "Node 2 TXREADY",
        "uio[0]": "Node 2 SPI MOSI",
        "uio[1]": "Node 3 SPI SS",
        "uio[2]": "Node 3 SPI SCLK",
        "uio[3]": "Node 3 SPI MOSI",
        "uio[4]": "Node 2 RXREADY",
        "uio[5]": "Node 3 SPI MISO",
        "uio[6]": "Node 3 TXREADY",
        "uio[7]": "Node 3 RXREADY"
      }
    },
    {
      "macro": "tt_um_moyes0_top_module",
      "address": 17,
      "title": "M0: A 16-bit SUBLEQ Microprocessor",
      "author": "William Moyes",
      "description": "A capable but slow microprocessor that fits in a very tight space",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/moyesw/TT03p5-M0",
      "commit": "c5da1e5e283a3db809e138c0aca5a08c9de726ea",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "spi_miso",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "dbg_in",
        "uo[0]": "spi_cs0",
        "uo[1]": "spi_cs1",
        "uo[2]": "spi_clk",
        "uo[3]": "spi_mosi",
        "uo[4]": "uart_tx",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "dbg_out",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_power_test",
      "address": 33,
      "title": "TinyTapeout 3p5 Power Test",
      "author": "Matt Venn",
      "description": "Test module",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt03p5-power-test",
      "commit": "e92d0b736717ebef9feeb0790bd40110ef17c1fc",
      "pinout": {
        "ui[0]": "a",
        "ui[1]": "b",
        "ui[2]": "c",
        "ui[3]": "d",
        "ui[4]": "e",
        "ui[5]": "f",
        "ui[6]": "g",
        "ui[7]": "dot",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "dot",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_psychogenic_neptuneproportional",
      "address": 53,
      "title": "Neptune guitar tuner (proportional window, version b, with debug output on bidir pins)",
      "author": "Pat Deegan",
      "description": "It's a guitar tuner!  and so much more... (TODO)",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/psychogenic/tt03p5_neptune_proportional_b",
      "commit": "eae655f6bfed568225bc20f995c5009d3a85f271",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "clock config A",
        "ui[3]": "clock config B",
        "ui[4]": "measured frequency input pulses",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "display select",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ringosc_cnt_pfet",
      "address": 48,
      "title": "Ring oscillator with counter, PFET-gated",
      "author": "Uri Shaked",
      "description": "Test module for the TT03p5 power switching FET",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt03p5-ringosc-cnt-with-pfet",
      "commit": "316a1c359057d588698e48c84f32de39ec1330ae",
      "pinout": {
        "ui[0]": "cnt_shift[0]",
        "ui[1]": "cnt_shift[1]",
        "ui[2]": "cnt_shift[2]",
        "ui[3]": "cnt_shift[3]",
        "ui[4]": "cnt_shift[4]",
        "ui[5]": "cnt_shift[5]",
        "ui[6]": "cnt_stop",
        "ui[7]": "cnt_reset",
        "uo[0]": "cnt[0]",
        "uo[1]": "cnt[1]",
        "uo[2]": "cnt[2]",
        "uo[3]": "cnt[3]",
        "uo[4]": "cnt[4]",
        "uo[5]": "cnt[5]",
        "uo[6]": "cnt[6]",
        "uo[7]": "cnt[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ternaryPC_radixconvert",
      "address": 21,
      "title": "4-trit balanced ternary program counter and convertor",
      "author": "Steven bos",
      "description": "A 4-trit synchronous balanced ternary (BT) program counter allowing tri-directional counting (up, down, hold) and jump/load the program counter. The other part is a 3-trit asyncronous BT radix converter.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/aiunderstand/tt03p5-4-trit-balanced-ternary-counter-bt_signb_bt-radix-convertor",
      "commit": "8c8456592ad7103a01062ca54a9ced59f6eff575",
      "pinout": {
        "ui[0]": "clock",
        "ui[1]": "reset",
        "ui[2]": "ui_in[7] data2 MST (most significant trit)",
        "ui[3]": "ui_in[6] data2",
        "ui[4]": "ui_in[5] data1 MST",
        "ui[5]": "ui_in[4] data1",
        "ui[6]": "ui_in[3] data0 MST",
        "ui[7]": "ui_in[2] data0",
        "uo[0]": "uo_out[7] PC data3 MST",
        "uo[1]": "uo_out[6] PC data3",
        "uo[2]": "uo_out[5] PC data2 MST",
        "uo[3]": "uo_out[4] PC data2",
        "uo[4]": "uo_out[3] PC data1 MST",
        "uo[5]": "uo_out[2] PC data1",
        "uo[6]": "uo_out[1] PC data0 MST",
        "uo[7]": "uo_out[0] PC data0",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_test",
      "address": 54,
      "title": "TinyTapeout 3p5 Test",
      "author": "Sylvain Munaut",
      "description": "Test module",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt03p5-test",
      "commit": "434c5d508d20053bea346881a61355f87ea1ca91",
      "pinout": {
        "ui[0]": "a",
        "ui[1]": "b",
        "ui[2]": "c",
        "ui[3]": "d",
        "ui[4]": "e",
        "ui[5]": "f",
        "ui[6]": "g",
        "ui[7]": "dot",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "dot",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_thorkn_vgaclock",
      "address": 39,
      "title": "VGA Clock - Bars",
      "author": "Thorsten Knoll",
      "description": "A clock for a VGA display",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ThorKn/tt03p5-vgaclock-02",
      "commit": "1b3c4fcc1d2ef294d4a43705d25fba19a1c065a8",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "vga_horizontal_sync",
        "uo[1]": "vga_vertical_sync",
        "uo[2]": "vga_red",
        "uo[3]": "vga_green",
        "uo[4]": "vga_blue",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tomkeddie_a",
      "address": 20,
      "title": "LED Panel Driver",
      "author": "Tom Keddie",
      "description": "Drives a 16x16 P10 LED panel",
      "clock_hz": 12000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TomKeddie/tinytapeout-2023-2a",
      "commit": "98a8f6d2dcda62b9a2b640d8c1d52b486aeaa0bd",
      "pinout": {
        "ui[0]": "uart",
        "ui[1]": "mode",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "red0",
        "uo[1]": "blue0",
        "uo[2]": "b",
        "uo[3]": "blank",
        "uo[4]": "green0",
        "uo[5]": "a",
        "uo[6]": "clk",
        "uo[7]": "latch",
        "uio[0]": "red1",
        "uio[1]": "blue1",
        "uio[2]": "green1",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_urish_dffram",
      "address": 4,
      "title": "DFFRAM (128 bytes)",
      "author": "Uri Shaked",
      "description": "128 bytes DFFRAM module",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt03p5-dffram",
      "commit": "9aa5590623f52fd1088f9ea29d49ce4c0d9f2f9c",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "addr[4]",
        "ui[5]": "addr[5]",
        "ui[6]": "addr[6]",
        "ui[7]": "wen",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "in[0]",
        "uio[1]": "in[1]",
        "uio[2]": "in[2]",
        "uio[3]": "in[3]",
        "uio[4]": "in[4]",
        "uio[5]": "in[5]",
        "uio[6]": "in[6]",
        "uio[7]": "in[7]"
      }
    },
    {
      "macro": "tt_um_urish_simon",
      "address": 1,
      "title": "Simon Says",
      "author": "Uri Shaked",
      "description": "A simple memory game",
      "clock_hz": 50000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt03p5-simon-game",
      "commit": "0beaebc7dc7497b8d89344a14044fbe32309bb7e",
      "pinout": {
        "ui[0]": "btn1",
        "ui[1]": "btn2",
        "ui[2]": "btn3",
        "ui[3]": "btn4",
        "ui[4]": "clk1",
        "ui[5]": "clk3",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "led1",
        "uo[1]": "led2",
        "uo[2]": "led3",
        "uo[3]": "led4",
        "uo[4]": "speaker",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_urish_sram_poc",
      "address": 55,
      "title": "SRAM Controller PoC (128 bytes)",
      "author": "Uri Shaked",
      "description": "128 bytes SRAM controller module",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt03p5-sram-poc",
      "commit": "992d0c4a5dd4ff3e759eb3e83bd4808d6bb65c90",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "addr[4]",
        "ui[5]": "addr[5]",
        "ui[6]": "bank_sel",
        "ui[7]": "wen",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "in[0] (when bank_sel = 0), addr[6] (when bank_sel = 1)",
        "uio[1]": "in[1] (when bank_sel = 0), addr[7] (when bank_sel = 1)",
        "uio[2]": "in[2] (when bank_sel = 0), addr[8] (when bank_sel = 1)",
        "uio[3]": "in[3]",
        "uio[4]": "in[4]",
        "uio[5]": "in[5]",
        "uio[6]": "in[6]",
        "uio[7]": "in[7]"
      }
    },
    {
      "macro": "tt_um_vga_clock",
      "address": 18,
      "title": "VGA clock",
      "author": "Matt Venn",
      "description": "Shows the time on a VGA screen",
      "clock_hz": 31500000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt03p5-vga-clock",
      "commit": "b24c87012df73d5a2c672490070da67923138301",
      "pinout": {
        "ui[0]": "clock",
        "ui[1]": "reset",
        "ui[2]": "adjust hours",
        "ui[3]": "adjust minutes",
        "ui[4]": "adjust seconds",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "hsync",
        "uo[1]": "vsync",
        "uo[2]": "r0",
        "uo[3]": "r1",
        "uo[4]": "g0",
        "uo[5]": "g1",
        "uo[6]": "b0",
        "uo[7]": "b1",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_347144898258928211",
      "address": 50,
      "title": "7-Seg 'Tiny Tapeout' Display",
      "author": "Tiny Tapeout 02 (J. Rosenthal)",
      "description": "This circuit will output a string of characters (\u2019tiny tapeout\u2019) to the 7-segment display.\n",
      "clock_hz": 1,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/psychogenic/tt03p5-UARTstring",
      "commit": "1fa0d1fe249005ed85930be0eca4ea7d1aa00f23",
      "pinout": {
        "ui[0]": "clock",
        "ui[1]": "Reset Counter",
        "ui[2]": "N/A",
        "ui[3]": "Clock Disable (Test Mode)",
        "ui[4]": "Test Logic A",
        "ui[5]": "Test Logic B",
        "ui[6]": "Test Logic C",
        "ui[7]": "Test Logic D",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "N/A",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_347417602591556180",
      "address": 51,
      "title": "7-Seg 'Tiny Tapeout' Display",
      "author": "Tiny Tapeout 02 (J. Rosenthal)",
      "description": "This circuit will output a string of characters (\u2019tiny tapeout\u2019) to the 7-segment display.\n",
      "clock_hz": 1,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/psychogenic/tt03p5-padlock",
      "commit": "cb936643e2f93e4bb3a2a4f0a7dcee4218c63233",
      "pinout": {
        "ui[0]": "clock",
        "ui[1]": "Reset Counter",
        "ui[2]": "N/A",
        "ui[3]": "Clock Disable (Test Mode)",
        "ui[4]": "Test Logic A",
        "ui[5]": "Test Logic B",
        "ui[6]": "Test Logic C",
        "ui[7]": "Test Logic D",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "N/A",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_347497504164545108",
      "address": 49,
      "title": "7-Seg 'Tiny Tapeout' Display",
      "author": "Tiny Tapeout 02 (J. Rosenthal)",
      "description": "This circuit will output a string of characters (\u2019tiny tapeout\u2019) to the 7-segment display.\n",
      "clock_hz": 1,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/psychogenic/tt03p5-7segstringdisplay",
      "commit": "7e039786fadec44f0d6204f4ea15053ef237f0b8",
      "pinout": {
        "ui[0]": "clock",
        "ui[1]": "Reset Counter",
        "ui[2]": "N/A",
        "ui[3]": "Clock Disable (Test Mode)",
        "ui[4]": "Test Logic A",
        "ui[5]": "Test Logic B",
        "ui[6]": "Test Logic C",
        "ui[7]": "Test Logic D",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "N/A",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_366318576852367361",
      "address": 3,
      "title": "TT03p5 ternary async test",
      "author": "Alexander Shabarshin",
      "description": "Async Ternary Selector",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/shaos/tt03p5-submission-shaos",
      "commit": "cce73ebd39fc9e57e97f91540cd3f90ab36471b1",
      "pinout": {
        "ui[0]": "Sn",
        "ui[1]": "So",
        "ui[2]": "Sp",
        "ui[3]": "Nn",
        "ui[4]": "False",
        "ui[5]": "Np",
        "ui[6]": "TestOUT",
        "ui[7]": "TestOE",
        "uo[0]": "Cn",
        "uo[1]": "Co",
        "uo[2]": "Cp",
        "uo[3]": "OutReady",
        "uo[4]": "ErrN",
        "uo[5]": "ErrO",
        "uo[6]": "ErrP",
        "uo[7]": "ErrOut",
        "uio[0]": "True",
        "uio[1]": "Oo",
        "uio[2]": "Op",
        "uio[3]": "Pn",
        "uio[4]": "Po",
        "uio[5]": "Pp",
        "uio[6]": "ErrAny",
        "uio[7]": "TestBidir"
      }
    }
  ]
}