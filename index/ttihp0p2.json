{
  "version": 3,
  "id": "ttihp0p2",
  "name": "Tiny Tapeout IHP 0.2",
  "repo": "https://github.com/TinyTapeout/tinytapeout-ihp-0p2",
  "commit": "b383dc750213c8e8962d99cd3a3c4d7f5f4dee0f",
  "updated": "2024-11-05T08:54:29Z",
  "projects": [
    {
      "macro": "tt_um_2048_vga_game",
      "address": 68,
      "title": "2048 sliding tile puzzle game (VGA)",
      "author": "Uri Shaked",
      "description": "Slide numbered tiles on a grid to combine them to create a tile with the number 2048.",
      "clock_hz": 0,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt09-2048-game",
      "commit": "9f9086693a9b9f9aff76af684784f6f1357c574e",
      "pinout": {
        "ui[0]": "btn_up",
        "ui[1]": "btn_down",
        "ui[2]": "btn_left",
        "ui[3]": "btn_right",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "retro_colors",
        "ui[7]": "debug_mode",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "debug_cmd",
        "uio[1]": "debug_cmd",
        "uio[2]": "debug_cmd",
        "uio[3]": "debug_cmd",
        "uio[4]": "debug_data",
        "uio[5]": "debug_data",
        "uio[6]": "debug_data",
        "uio[7]": "debug_data"
      }
    },
    {
      "macro": "tt_um_MichaelBell_canon",
      "address": 291,
      "title": "TT08 Pachelbel's Canon demo",
      "author": "Mike Bell",
      "description": "Tiny Tapeout visuals with the classic Canon soundtrack",
      "clock_hz": 36000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttihp0p2-demo-canon",
      "commit": "20253ec6e5ae704a15f6011d833f25e1d707598d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R[1]",
        "uo[1]": "G[1]",
        "uo[2]": "B[1]",
        "uo[3]": "vsync",
        "uo[4]": "R[0]",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "PWM output"
      }
    },
    {
      "macro": "tt_um_MichaelBell_mandelbrot",
      "address": 4,
      "title": "VGA Mandelbrot",
      "author": "Mike Bell",
      "description": "Mandelbrot on VGA, racing the beam",
      "clock_hz": 100000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/ttihp-mandelbrot",
      "commit": "9b97c9a1b2a08bdbf54e82ab3fb91911263c980a",
      "pinout": {
        "ui[0]": "Ctrl 0",
        "ui[1]": "Ctrl 1",
        "ui[2]": "Ctrl 2",
        "ui[3]": "Input 0",
        "ui[4]": "Input 1",
        "ui[5]": "Input 2",
        "ui[6]": "Input 3",
        "ui[7]": "Input 4",
        "uo[0]": "R[1]",
        "uo[1]": "G[1]",
        "uo[2]": "B[1]",
        "uo[3]": "vsync",
        "uo[4]": "R[0]",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "Input 5",
        "uio[1]": "Input 6",
        "uio[2]": "Input 7",
        "uio[3]": "Input 8",
        "uio[4]": "Input 9",
        "uio[5]": "Input 10",
        "uio[6]": "Input 11",
        "uio[7]": "Input 12"
      }
    },
    {
      "macro": "tt_um_MichaelBell_rle_vga",
      "address": 423,
      "title": "RLE Video Player",
      "author": "Mike Bell",
      "description": "Reads run length encoded data from QSPI flash, displays on VGA",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/ttihp-rle-vga",
      "commit": "06147f7ab31bd95ddccfc11deed90a1f2b74c0de",
      "pinout": {
        "ui[0]": "SPI latency[0]",
        "ui[1]": "SPI latency[1]",
        "ui[2]": "SPI latency[2]",
        "ui[3]": "30Hz select",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R[1]",
        "uo[1]": "G[1]",
        "uo[2]": "B[1]",
        "uo[3]": "vsync",
        "uo[4]": "R[0]",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "CS",
        "uio[1]": "SD0",
        "uio[2]": "SD1",
        "uio[3]": "SCK",
        "uio[4]": "SD2",
        "uio[5]": "SD3",
        "uio[6]": "Unused CS",
        "uio[7]": "Unused CS"
      }
    },
    {
      "macro": "tt_um_MichaelBell_tinyQV",
      "address": 458,
      "title": "TinyQV Risc-V SoC",
      "author": "Michael Bell",
      "description": "A Risc-V SoC for Tiny Tapeout",
      "clock_hz": 64000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/ttihp-tinyQV",
      "commit": "17156309f638c5e62c6959ee36f776d630c6900c",
      "pinout": {
        "ui[0]": "Interrupt 0",
        "ui[1]": "Interrupt 1",
        "ui[2]": "SPI MISO",
        "ui[3]": "GP in3",
        "ui[4]": "GP in4",
        "ui[5]": "GP in5",
        "ui[6]": "GP in6",
        "ui[7]": "UART RX",
        "uo[0]": "UART TX",
        "uo[1]": "UART RTS",
        "uo[2]": "SPI DC",
        "uo[3]": "SPI MOSI",
        "uo[4]": "SPI CS",
        "uo[5]": "SPI SCK",
        "uo[6]": "Debug UART TX",
        "uo[7]": "Debug signal / PWM",
        "uio[0]": "Flash CS",
        "uio[1]": "SD0",
        "uio[2]": "SD1",
        "uio[3]": "SCK",
        "uio[4]": "SD2",
        "uio[5]": "SD3",
        "uio[6]": "RAM A CS",
        "uio[7]": "RAM B CS / PWM"
      }
    },
    {
      "macro": "tt_um_NicklausThompson_SkyKing",
      "address": 614,
      "title": "SkyKing Demo",
      "author": "Nicklaus Thompson",
      "description": "Types some text over an image of a plane flying into the sunset",
      "clock_hz": 25200000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/FangameEmpire/tt08_skyking",
      "commit": "948ca9c0a8f5a36c3fd5cdc69e3b18bada44e847",
      "pinout": {
        "ui[0]": "0: VGA, 1: XY",
        "ui[1]": "0: XY 1, 1: XY 2",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "ui[1:0] = 0 -> HS, 1 -> Trig, 3 -> Y0",
        "uo[1]": "ui[1:0] = 0 -> R0, 1 -> Y5, 3 -> Y2",
        "uo[2]": "ui[1:0] = 0 -> G0, 1 -> X7, 3 -> Y4",
        "uo[3]": "ui[1:0] = 0 -> B0, 1 -> X5, 3 -> Y6",
        "uo[4]": "ui[1:0] = 0 -> VS, 1 -> Y6, 3 -> Y1",
        "uo[5]": "ui[1:0] = 0 -> R1, 1 -> Y4, 3 -> Y3",
        "uo[6]": "ui[1:0] = 0 -> G1, 1 -> X6, 3 -> Y5",
        "uo[7]": "ui[1:0] = 0 -> B1, 1 -> X4, 3 -> Trig",
        "uio[0]": "ui[1] = 0 -> 1'b0, 1 -> X0",
        "uio[1]": "ui[1] = 0 -> 1'b0, 1 -> X2",
        "uio[2]": "ui[1] = 0 -> 1'b0, 1 -> X4",
        "uio[3]": "ui[1] = 0 -> 1'b0, 1 -> X6",
        "uio[4]": "ui[1] = 0 -> 1'b0, 1 -> X1",
        "uio[5]": "ui[1] = 0 -> 1'b0, 1 -> X3",
        "uio[6]": "ui[1] = 0 -> 1'b0, 1 -> X5",
        "uio[7]": "ui[1] = 0 -> 1'b0, 1 -> X7"
      }
    },
    {
      "macro": "tt_um_QIF_8bit",
      "address": 483,
      "title": "8 Bit Digital QIF",
      "author": "David Parent",
      "description": "The circuit will spike when the input is positive.  It will reset when the signal exceeds a predetermined value",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/davidparent/ttihp-verilog-QIF",
      "commit": "c0bc0cec0ac0284aa643a1e68bdba2034a0bd750",
      "pinout": {
        "ui[0]": "B0",
        "ui[1]": "B1",
        "ui[2]": "B2",
        "ui[3]": "B3",
        "ui[4]": "B4",
        "ui[5]": "B5",
        "ui[6]": "B6",
        "ui[7]": "B7",
        "uo[0]": "AS0",
        "uo[1]": "S1",
        "uo[2]": "S2",
        "uo[3]": "S3",
        "uo[4]": "S4",
        "uo[5]": "S5",
        "uo[6]": "S6",
        "uo[7]": "S7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_a1k0n_demo",
      "address": 293,
      "title": "Demo by a1k0n",
      "author": "Andy Sloane",
      "description": "Tiny Tapeout demo competition entry",
      "clock_hz": 48000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttihp0p2-demo-a1k0n",
      "commit": "828c01ecef4fb27572d4f94a47098ff6cd1a7622",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "AudioPWM"
      }
    },
    {
      "macro": "tt_um_a1k0n_nyancat",
      "address": 233,
      "title": "VGA Nyan Cat",
      "author": "Andy Sloane",
      "description": "Displays the classic nyan.cat animation",
      "clock_hz": 25175000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/a1k0n/ttihp-nyan",
      "commit": "48d4eefdb7b12b18c6cf963a83cd04616cef8f07",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "AudioPWM"
      }
    },
    {
      "macro": "tt_um_a1k0n_vgadonut",
      "address": 330,
      "title": "VGA donut",
      "author": "Andy Sloane",
      "description": "Renders a 3D torus on a VGA display",
      "clock_hz": 48000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/a1k0n/tt08-vga-donut",
      "commit": "f7286adb3e96f42245ca9a31bac088903c9c51bf",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_algofoogle_raybox_zero",
      "address": 326,
      "title": "raybox-zero TTIHP0p2 edition",
      "author": "algofoogle (Anton Maurovic)",
      "description": "TTIHP0p2 experimental resub of 'simple VGA ray caster game demo' from TT07",
      "clock_hz": 25175000,
      "tiles": "4x2",
      "analog_pins": [],
      "repo": "https://github.com/algofoogle/ttihp0p2-raybox-zero",
      "commit": "998b3887034150944e126ff4b98f562ae18f1168",
      "pinout": {
        "ui[0]": "SPI in: pov_sclk",
        "ui[1]": "SPI in: pov_mosi",
        "ui[2]": "SPI in: pov_ss_n",
        "ui[3]": "debug",
        "ui[4]": "inc_px",
        "ui[5]": "inc_py",
        "ui[6]": "reg",
        "ui[7]": "gen_tex",
        "uo[0]": "red[1]",
        "uo[1]": "green[1]",
        "uo[2]": "blue[1]",
        "uo[3]": "vsync_n",
        "uo[4]": "red[0]",
        "uo[5]": "green[0]",
        "uo[6]": "blue[0]",
        "uo[7]": "hsync_n",
        "uio[0]": "Out: tex_csb",
        "uio[1]": "Out: tex_sclk",
        "uio[2]": "In: \"SPI2\" reg_sclk",
        "uio[3]": "In: \"SPI2\" reg_mosi",
        "uio[4]": "In: \"SPI2\" reg_ss_n",
        "uio[5]": "I/O: tex_io0",
        "uio[6]": "In: tex_io1",
        "uio[7]": "In: tex_io2"
      }
    },
    {
      "macro": "tt_um_algofoogle_tinyvga_fun_wrapper",
      "address": 613,
      "title": "TTIHP TinyVGA FUN!",
      "author": "algofoogle (Anton Maurovic) + htfab",
      "description": "The digital part of TT08 VGA FUN! with a simple sequencer loop",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttihp0p2-demo-tinyvgafun",
      "commit": "ab190ca6658bb3e896db673fb690eaa9c0b54559",
      "pinout": {
        "ui[0]": "(mode bit 0)",
        "ui[1]": "(mode bit 1)",
        "ui[2]": "(mode bit 2)",
        "ui[3]": "(depth bit 0)",
        "ui[4]": "(depth bit 1)",
        "ui[5]": "(depth bit 2)",
        "ui[6]": "(depth bit 3)",
        "ui[7]": "override sequencer",
        "uo[0]": "r1",
        "uo[1]": "g1",
        "uo[2]": "b1",
        "uo[3]": "vsync",
        "uo[4]": "r0",
        "uo[5]": "g0",
        "uo[6]": "b0",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_algofoogle_vga_fun_wrapper",
      "address": 551,
      "title": "TTIHP VGA FUN!",
      "author": "algofoogle (Anton Maurovic) + htfab",
      "description": "The digital part of TT08 VGA FUN! with a simple sequencer loop",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttihp0p2-demo-vgafun",
      "commit": "66b2887f1a7c4b11c0cda86d33040fd80eb51f88",
      "pinout": {
        "ui[0]": "(mode bit 0)",
        "ui[1]": "(mode bit 1)",
        "ui[2]": "(mode bit 2)",
        "ui[3]": "(depth bit 0)",
        "ui[4]": "(depth bit 1)",
        "ui[5]": "(depth bit 2)",
        "ui[6]": "(depth bit 3)",
        "ui[7]": "override sequencer",
        "uo[0]": "r0",
        "uo[1]": "r1",
        "uo[2]": "r2",
        "uo[3]": "r3",
        "uo[4]": "b0",
        "uo[5]": "b1",
        "uo[6]": "b2",
        "uo[7]": "b3",
        "uio[0]": "g0",
        "uio[1]": "g1",
        "uio[2]": "g2",
        "uio[3]": "g3",
        "uio[4]": "hsync",
        "uio[5]": "vsync",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_autosel",
      "address": 583,
      "title": "I2C EEPROM Project Selection",
      "author": "Uri Shaked",
      "description": "Prototype for reading the selected Tiny Tapeout design address from an I2C EEPROM",
      "clock_hz": 20000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/ttihp-autosel",
      "commit": "48ef1505d66b607e371dd60d80c0720f51b42735",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "ctrl_sel_rst_n",
        "uo[1]": "ctrl_sel_inc",
        "uo[2]": "ctrl_ena",
        "uo[3]": "",
        "uo[4]": "uart_tx",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "SCL",
        "uio[1]": "SDA",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_brandonramos_VGA_Pong_with_NES_Controllers",
      "address": 225,
      "title": "VGA Pong with NES Controllers",
      "author": "Brandon S. Ramos",
      "description": "Pong using 2 NES Controllers with a VGA display",
      "clock_hz": 25175000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/J0NTrollston/tt08-VGA-Pong-with-NES-Controllers",
      "commit": "2d2997992d63c205154ff47fd93268175d4bcf3a",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "h_sync",
        "uo[1]": "v_sync",
        "uo[2]": "r",
        "uo[3]": "g",
        "uo[4]": "b",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "NES_Controller_Left[0]",
        "uio[1]": "NES_Controller_Left[1]",
        "uio[2]": "NES_Controller_Left[2]",
        "uio[3]": "NES_Controller_Right[0]",
        "uio[4]": "NES_Controller_Right[1]",
        "uio[5]": "NES_Controller_Right[2]",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_calonso88_74181",
      "address": 610,
      "title": "8-bit ALU based on 2x 74181",
      "author": "Caio Alonso da Costa",
      "description": "8-bit ALU implemented with 2x 4-bit slice arithmetic logic unit 74181 with SPI interface",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/calonso88/tt_ihp0p2_ALU_74181",
      "commit": "b8c22015d27cff5f929997f22b3feac13633010d",
      "pinout": {
        "ui[0]": "cpol",
        "ui[1]": "cpha",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "decod_reg[0]",
        "uo[1]": "decod_reg[1]",
        "uo[2]": "decod_reg[2]",
        "uo[3]": "decod_reg[3]",
        "uo[4]": "decod_reg[4]",
        "uo[5]": "decod_reg[5]",
        "uo[6]": "decod_reg[6]",
        "uo[7]": "decod_reg[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "spi_miso",
        "uio[4]": "spi_cs_n",
        "uio[5]": "spi_clk",
        "uio[6]": "spi_mosi",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_calonso88_rsa",
      "address": 32,
      "title": "8 bit RSA encryption",
      "author": "Caio Alonso da Costa",
      "description": "8 bit RSA encryption coprocessor with SPI interface",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/calonso88/tt09_rsa",
      "commit": "1fd0645057880658b564c1dc8d5f560e82eca8eb",
      "pinout": {
        "ui[0]": "gpio_start",
        "ui[1]": "gpio_stop",
        "ui[2]": "cpol",
        "ui[3]": "cpha",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "spare[0]",
        "uo[1]": "spare[1]",
        "uo[2]": "spare[2]",
        "uo[3]": "spare[3]",
        "uo[4]": "spare[4]",
        "uo[5]": "spare[5]",
        "uo[6]": "spare[6]",
        "uo[7]": "spare[7]",
        "uio[0]": "irq",
        "uio[1]": "ui[4]",
        "uio[2]": "ui[5]",
        "uio[3]": "spi_miso",
        "uio[4]": "spi_cs_n",
        "uio[5]": "spi_clk",
        "uio[6]": "spi_mosi",
        "uio[7]": "ui[7]"
      }
    },
    {
      "macro": "tt_um_ccattuto_conway",
      "address": 101,
      "title": "Conway's Game of Life on UART and VGA",
      "author": "Ciro Cattuto",
      "description": "A simulation of Conways' Game of Life visualized to an ANSI terminal over UART and to VGA",
      "clock_hz": 24000000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/ccattuto/ttihp-conway-termvga",
      "commit": "040cef1eaa3c843cb135de2fd9e26760e03ac2d9",
      "pinout": {
        "ui[0]": "simulation start",
        "ui[1]": "simulation randomization",
        "ui[2]": "",
        "ui[3]": "UART RX",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "UART TX",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "hsync",
        "uio[1]": "B[0]",
        "uio[2]": "G[0]",
        "uio[3]": "R[0]",
        "uio[4]": "vsync",
        "uio[5]": "B[1]",
        "uio[6]": "G[1]",
        "uio[7]": "R[1]"
      }
    },
    {
      "macro": "tt_um_cejmu",
      "address": 485,
      "title": "CEJMU Beers and Adders",
      "author": "Prof. Dr.-Ing. Matthias Jung, Philipp Wetzstein, Derek Christ, Jonathan Hager",
      "description": "Several projects to show in lectures. Includes a simple state-machine, a decoder and two 24 bit adders. Refer to documentation for details",
      "clock_hz": 12000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/CEJMU/tt08_cejmu",
      "commit": "b102bf09ff9597b6fe32307178cec65dbadd2a3d",
      "pinout": {
        "ui[0]": "Multiplexed to all designs (refer to documentation for details)",
        "ui[1]": "...",
        "ui[2]": "...",
        "ui[3]": "...",
        "ui[4]": "...",
        "ui[5]": "...",
        "ui[6]": "...",
        "ui[7]": "...",
        "uo[0]": "Multiplexed from all designs (refer to documentation for details)",
        "uo[1]": "...",
        "uo[2]": "...",
        "uo[3]": "...",
        "uo[4]": "...",
        "uo[5]": "...",
        "uo[6]": "...",
        "uo[7]": "...",
        "uio[0]": "Select design (input)",
        "uio[1]": "Select design (input)",
        "uio[2]": "start_calc",
        "uio[3]": "output_result",
        "uio[4]": "unused",
        "uio[5]": "unused",
        "uio[6]": "overflow bit of RCA (output)",
        "uio[7]": "overflow bit of CLA (output)"
      }
    },
    {
      "macro": "tt_um_cfib_demo",
      "address": 549,
      "title": "cfib Demoscene Entry",
      "author": "Christian Fibich",
      "description": "Generates VGA video and PWM audio",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttihp0p2-demo-cfib",
      "commit": "90d0f5dba8506b2ebaa49a17f59692936e123e9d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "r[1]",
        "uo[1]": "g[1]",
        "uo[2]": "b[1]",
        "uo[3]": "vsync",
        "uo[4]": "r[0]",
        "uo[5]": "g[0]",
        "uo[6]": "b[0]",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "pwm"
      }
    },
    {
      "macro": "tt_um_chip_rom",
      "address": 0,
      "title": "Chip ROM",
      "author": "Uri Shaked",
      "description": "ROM with information about the chip",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt-chip-rom",
      "commit": "e22570f04abf0fd86c947af862c72f491abb1716",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "addr[4]",
        "ui[5]": "addr[5]",
        "ui[6]": "addr[6]",
        "ui[7]": "addr[7]",
        "uo[0]": "data[0]",
        "uo[1]": "data[1]",
        "uo[2]": "data[2]",
        "uo[3]": "data[3]",
        "uo[4]": "data[4]",
        "uo[5]": "data[5]",
        "uo[6]": "data[6]",
        "uo[7]": "data[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_crispy_vga",
      "address": 587,
      "title": "Crispy VGA",
      "author": "James Meech",
      "description": "The scrolling VGA example from the vga playground but as you set more inputs high it gets successively more crispy",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JamesTimothyMeech/ames-Meech-IHP-Demoscene",
      "commit": "42bab23f0213213f8d4de4b7ddb2cdbe6048cf5b",
      "pinout": {
        "ui[0]": "R[1] vga input",
        "ui[1]": "G[1] vga input",
        "ui[2]": "B[1] vga input",
        "ui[3]": "vsync vga input",
        "ui[4]": "R[0] vga input",
        "ui[5]": "G[0] vga input",
        "ui[6]": "B[0] vga input",
        "ui[7]": "hsync vga input",
        "uo[0]": "R[1] vga input",
        "uo[1]": "G[1] vga input",
        "uo[2]": "B[1] vga input",
        "uo[3]": "vsync vga input",
        "uo[4]": "R[0] vga input",
        "uo[5]": "G[0] vga input",
        "uo[6]": "B[0] vga input",
        "uo[7]": "hsync vga input",
        "uio[0]": "Crispy input bit 0 that toggles the noise on the hsync signal on or off. Also adds one bit of noise to audio.",
        "uio[1]": "Crispy input bit 1 toggles the noise on the B signal on or off. Also adds one bit of noise to audio.",
        "uio[2]": "Crispy input bit 2 toggles the noise on the G signal on or off. Also adds one bit of noise to audio.",
        "uio[3]": "Crispy input bit 3 toggles the noise on the R signal on or off. Also adds one bit of noise to audio.",
        "uio[4]": "Crispy input bit 4 that toggles the noise on the vsync signal on or off. Also adds one bit of noise to audio.",
        "uio[5]": "Crispy input bit 5 that sets the noise level applied to the R, G, and B wires to high or low. Also adds one bit of noise to audio.",
        "uio[6]": "Audio input bit",
        "uio[7]": "Audio output bit"
      }
    },
    {
      "macro": "tt_um_demosiine_sda",
      "address": 227,
      "title": "DemoSiine",
      "author": "SagarDevAchar",
      "description": "A Wavy and Rainbowy TT08 Demoscene Submission",
      "clock_hz": 25000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/Syntaks-Code-Vault/ttihp0p2-demosiine",
      "commit": "2eb54f140282a2aa105a46bab96efd2ee515af6a",
      "pinout": {
        "ui[0]": "Frame Positive / Negative",
        "ui[1]": "Enable / Disable Little Sine Layer",
        "ui[2]": "Enable / Disable Big Sine Layer",
        "ui[3]": "Enable / Disable Overlay",
        "ui[4]": "Toggle Overlay Style",
        "ui[5]": "Toggle Background Style",
        "ui[6]": "Run / Stop Animation",
        "ui[7]": "Play / Pause Audio",
        "uo[0]": "Video Red MSB",
        "uo[1]": "Video Green MSB",
        "uo[2]": "Video Blue MSB",
        "uo[3]": "Video V-Sync",
        "uo[4]": "Video Red LSB",
        "uo[5]": "Video Green LSB",
        "uo[6]": "Video Blue LSB",
        "uo[7]": "Video H-Sync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Audio Output"
      }
    },
    {
      "macro": "tt_um_devinatkin_pulse_width_counter",
      "address": 553,
      "title": "Pulse Width Counter",
      "author": "Devin Atkin",
      "description": "Pulse Width Counter Accessible Over UART",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/devinatkin/ttihp-pulsewidth-counter",
      "commit": "25170d3b36894d5a0f86f6cec7bb35568f462384",
      "pinout": {
        "ui[0]": "freq_in",
        "ui[1]": "out_sel[0]",
        "ui[2]": "out_sel[1]",
        "ui[3]": "out_sel[2]",
        "ui[4]": "out_sel[3]",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "time_hi_lo_per[0]",
        "uo[1]": "time_hi_lo_per[1]",
        "uo[2]": "time_hi_lo_per[2]",
        "uo[3]": "time_hi_lo_per[3]",
        "uo[4]": "time_hi_lo_per[4]",
        "uo[5]": "time_hi_lo_per[5]",
        "uo[6]": "time_hi_lo_per[6]",
        "uo[7]": "time_hi_lo_per[7]",
        "uio[0]": "uart_tx",
        "uio[1]": "uart_rx",
        "uio[2]": "uart_tx_ready",
        "uio[3]": "uart_tx_valid",
        "uio[4]": "uart_rx_valid",
        "uio[5]": "uart_rx_ready",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_digital_clock_example",
      "address": 546,
      "title": "Digital Desk Clock v2.0",
      "author": "Sam Ellicott",
      "description": "7-Segment Digital Desk Clock for ihp Tapeout",
      "clock_hz": 5000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/sellicott/sellicott_ttihp_digital_desk_clock",
      "commit": "17866649c2b6bb90c62e7ac81136259bf633825e",
      "pinout": {
        "ui[0]": "refclk",
        "ui[1]": "",
        "ui[2]": "Fast/Slow Set",
        "ui[3]": "Set Hours",
        "ui[4]": "Set Minutes",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "Display CS",
        "uio[1]": "Display MOSI",
        "uio[2]": "",
        "uio[3]": "Display SCK",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_dlmiles_bad_synchronizer",
      "address": 552,
      "title": "Example of Bad Synchronizer",
      "author": "Darryl Miles project from Eric Smith",
      "description": "Figure 29.3 from Dally & Harting",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dlmiles/ttihp0p2-bad-synchronizer",
      "commit": "5ab874a3252605f163e7179e4e0815d558c73c59",
      "pinout": {
        "ui[0]": "clk1",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "stage3[0]",
        "uo[1]": "stage3[1]",
        "uo[2]": "stage3[2]",
        "uo[3]": "stage3[3]",
        "uo[4]": "skew",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "stage2[0]",
        "uio[1]": "stage2[1]",
        "uio[2]": "stage2[2]",
        "uio[3]": "stage2[3]",
        "uio[4]": "stage1[0]",
        "uio[5]": "stage1[1]",
        "uio[6]": "stage1[2]",
        "uio[7]": "stage1[3]"
      }
    },
    {
      "macro": "tt_um_dlmiles_loopback",
      "address": 491,
      "title": "IHP loopback tile with input skew measurement",
      "author": "Darryl Miles project from Eric Smith",
      "description": "Count up to 10, one second at a time.",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dlmiles/ttihp0p2-loopback-with-skew",
      "commit": "92c70db4279d7d82e446681fa6a7002bed40c6c8",
      "pinout": {
        "ui[0]": "compare bit 11",
        "ui[1]": "compare bit 12",
        "ui[2]": "compare bit 13",
        "ui[3]": "compare bit 14",
        "ui[4]": "compare bit 15",
        "ui[5]": "compare bit 16",
        "ui[6]": "compare bit 17",
        "ui[7]": "compare bit 18",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "dot",
        "uio[0]": "second counter bit 0",
        "uio[1]": "second counter bit 1",
        "uio[2]": "second counter bit 2",
        "uio[3]": "second counter bit 3",
        "uio[4]": "second counter bit 4",
        "uio[5]": "second counter bit 5",
        "uio[6]": "second counter bit 6",
        "uio[7]": "second counter bit 7"
      }
    },
    {
      "macro": "tt_um_dlmiles_muldiv8",
      "address": 489,
      "title": "MULDIV unit (8-bit signed/unsigned)",
      "author": "Darryl Miles",
      "description": "Combinational Multiply and Divide Unit (signed and unsigned)",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dlmiles/ttihp0p2-muldiv8",
      "commit": "7b3785a10f463adaf65af8c28543434504cdc8f9",
      "pinout": {
        "ui[0]": "Data0 see docs",
        "ui[1]": "Data1 see docs",
        "ui[2]": "Data2 see docs",
        "ui[3]": "Data3 see docs",
        "ui[4]": "Data4 see docs",
        "ui[5]": "Data5 see docs",
        "ui[6]": "Data6 see docs",
        "ui[7]": "Data7 see docs",
        "uo[0]": "Result0 see docs",
        "uo[1]": "Result1 see docs",
        "uo[2]": "Result2 see docs",
        "uo[3]": "Result3 see docs",
        "uo[4]": "Result4 see docs",
        "uo[5]": "Result5 see docs",
        "uo[6]": "Result6 see docs",
        "uo[7]": "Result7 see docs",
        "uio[0]": "Addr bit0 HI=1/lo=0 mux of Data and Result (input only)",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "Result mux registered=1/immediate=0 (input only)",
        "uio[4]": "DIV error overflow (output only)",
        "uio[5]": "DIV error divide-by-zero (output only)",
        "uio[6]": "OPSIGNED mode (input only)",
        "uio[7]": "MULDIV mode (input only)"
      }
    },
    {
      "macro": "tt_um_dlmiles_ringosc_5inv",
      "address": 555,
      "title": "Ring Oscillator (5 inverter)",
      "author": "Darryl Miles",
      "description": "Ring Oscillator (5 inverter)",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dlmiles/ttihp0p2-ringosc-5inv",
      "commit": "21a105b57333a0325bb4a6eb03cbfc4b95187a0a",
      "pinout": {
        "ui[0]": "ring enable",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "divide-by-1",
        "uo[1]": "divide-by-2",
        "uo[2]": "divide-by-4",
        "uo[3]": "divide-by-8",
        "uo[4]": "divide-by-16",
        "uo[5]": "divide-by-32",
        "uo[6]": "divide-by-64",
        "uo[7]": "divide-by-128",
        "uio[0]": "divide-by-256",
        "uio[1]": "divide-by-512",
        "uio[2]": "divide-by-1024",
        "uio[3]": "divide-by-2048",
        "uio[4]": "divide-by-4096",
        "uio[5]": "divide-by-8192",
        "uio[6]": "divide-by-16738",
        "uio[7]": "divide-by-32768"
      }
    },
    {
      "macro": "tt_um_dlmiles_tt05_i2c_bert",
      "address": 359,
      "title": "I2C BERT",
      "author": "Darryl Miles",
      "description": "I2C Bit Error Rate Test",
      "clock_hz": 10000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/dlmiles/ttihp0p2-i2c-bert",
      "commit": "593e110986975460c1d26ce75775ad9d9533e216",
      "pinout": {
        "ui[0]": "i2cSampleDivisor bit0",
        "ui[1]": "i2cSampleDivisor bit1",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "7seg or accm",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "dot",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "I2C SCL (bidi) old",
        "uio[3]": "I2C SDA (bidi)",
        "uio[4]": "I2C SCL (bidi) new",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "powerOnSense (out)"
      }
    },
    {
      "macro": "tt_um_dvxf_dj8v",
      "address": 419,
      "title": "DJ8 8-bit CPU",
      "author": "DaveX",
      "description": "DJ8 8-bit CPU with parallel Flash / RAM interface",
      "clock_hz": 13760000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dvxf/ttiph0p2-dj8v",
      "commit": "1b11039e0045738fa6af090764a87fa0b79fc57d",
      "pinout": {
        "ui[0]": "data in 0",
        "ui[1]": "data in 1",
        "ui[2]": "data in 2",
        "ui[3]": "data in 3",
        "ui[4]": "data in 4",
        "ui[5]": "data in 5",
        "ui[6]": "data in 6",
        "ui[7]": "data in 7",
        "uo[0]": "address out 8",
        "uo[1]": "address out 9",
        "uo[2]": "address out 10",
        "uo[3]": "address out 11",
        "uo[4]": "address out 12",
        "uo[5]": "address out 13",
        "uo[6]": "address out 14",
        "uo[7]": "write enable",
        "uio[0]": "address out 0 / data out 0",
        "uio[1]": "address out 1 / data out 1",
        "uio[2]": "address out 2 / data out 2",
        "uio[3]": "address out 3 / data out 3",
        "uio[4]": "address out 4 / data out 4",
        "uio[5]": "address out 5 / data out 5",
        "uio[6]": "address out 6 / data out 6",
        "uio[7]": "address out 7 / data out 7"
      }
    },
    {
      "macro": "tt_um_edwintorok",
      "address": 229,
      "title": "Rounding error",
      "author": "Edwin T\u00f6r\u00f6k",
      "description": "Competition entry",
      "clock_hz": 25250000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/edwintorok/roundingerror-ihp",
      "commit": "05a7654ee5c5cb190a7bdaecc8edbb8571ab337d",
      "pinout": {
        "ui[0]": "test mode (0=no, 1=yes)",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "r1",
        "uo[1]": "g1",
        "uo[2]": "b1",
        "uo[3]": "vsync",
        "uo[4]": "r0",
        "uo[5]": "g0",
        "uo[6]": "b0",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "PWM output"
      }
    },
    {
      "macro": "tt_um_factory_test",
      "address": 1,
      "title": "TinyTapeout Factory Test",
      "author": "Tiny Tapeout",
      "description": "Factory test module",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/ttihp-factory-test",
      "commit": "ad9b5537f5b827ff0de0ca129bef44923795432d",
      "pinout": {
        "ui[0]": "sel / in_a[0]",
        "ui[1]": "in_a[1]",
        "ui[2]": "in_a[2]",
        "ui[3]": "in_a[3]",
        "ui[4]": "in_a[4]",
        "ui[5]": "in_a[5]",
        "ui[6]": "in_a[6]",
        "ui[7]": "in_a[7]",
        "uo[0]": "output[0] / counter[0]",
        "uo[1]": "output[1] / counter[1]",
        "uo[2]": "output[2] / counter[2]",
        "uo[3]": "output[3] / counter[3]",
        "uo[4]": "output[4] / counter[4]",
        "uo[5]": "output[5] / counter[5]",
        "uo[6]": "output[6] / counter[6]",
        "uo[7]": "output[7] / counter[7]",
        "uio[0]": "in_b[0] / counter[0]",
        "uio[1]": "in_b[1] / counter[1]",
        "uio[2]": "in_b[2] / counter[2]",
        "uio[3]": "in_b[3] / counter[3]",
        "uio[4]": "in_b[4] / counter[4]",
        "uio[5]": "in_b[5] / counter[5]",
        "uio[6]": "in_b[6] / counter[6]",
        "uio[7]": "in_b[7] / counter[7]"
      }
    },
    {
      "macro": "tt_um_favoritohjs_scroller",
      "address": 545,
      "title": "VGA Scroller",
      "author": "FavoritoHJS",
      "description": "Scrolls across a very pixelated cityscape",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttihp0p2-demo-scroller",
      "commit": "40451442918c9cf47686957757c5cb3288c19286",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Rh",
        "uo[1]": "Gh",
        "uo[2]": "Bh",
        "uo[3]": "vsync",
        "uo[4]": "Rl",
        "uo[5]": "Gl",
        "uo[6]": "Bl",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_fountaincoder_top_V2",
      "address": 353,
      "title": "maddihp",
      "author": "Jonny Edwards",
      "description": "a multi use multi-hit dot product accelerator V2",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/Fountaincoder/maddihp",
      "commit": "2f5e2b8d8ac8598c6ba23147222b513ec93dcc02",
      "pinout": {
        "ui[0]": "index[0]",
        "ui[1]": "index[1]",
        "ui[2]": "index[2]",
        "ui[3]": "index[3]",
        "ui[4]": "data[0]",
        "ui[5]": "data[1]",
        "ui[6]": "data[2]",
        "ui[7]": "data[3]",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "out[8]",
        "uio[1]": "out[9]",
        "uio[2]": "out[10]",
        "uio[3]": "out[11]",
        "uio[4]": "instruction [0]",
        "uio[5]": "instruction [1]",
        "uio[6]": "load",
        "uio[7]": "run"
      }
    },
    {
      "macro": "tt_um_frequency_counter",
      "address": 577,
      "title": "Frequency counter",
      "author": "Matt Venn",
      "description": "measured frequency of a signal on pin 0 and displays on the 7 segment display",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/ttihp-freq-counter",
      "commit": "e0f5632da244b6bc4ddc0028969a5d62056ed3d8",
      "pinout": {
        "ui[0]": "signal to measure",
        "ui[1]": "debug mode",
        "ui[2]": "load new period",
        "ui[3]": "none",
        "ui[4]": "count period bit 11",
        "ui[5]": "count period bit 10",
        "ui[6]": "count period bit 9",
        "ui[7]": "count period bit 8",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "digit select",
        "uio[7]": "count period bit 07 or debug edge  bit 2",
        "uio[6]": "count period bit 06 or debug edge  bit 1",
        "uio[5]": "count period bit 05 or debug edge  bit 0",
        "uio[4]": "count period bit 04 or debug clock  bit 2",
        "uio[3]": "count period bit 03 or debug clock  bit 1",
        "uio[2]": "count period bit 02 or debug clock  bit 0",
        "uio[1]": "count period bit 01 or debug state  bit 1",
        "uio[0]": "count period bit 00 or debug state  bit 0"
      }
    },
    {
      "macro": "tt_um_froith_goldcrest",
      "address": 394,
      "title": "Goldcrest RISC-V",
      "author": "Felix Roithmayr, Lucas Klemmer, Daniel Gro\u00dfe",
      "description": "A microcoded RISC-V based on SUBLEQ",
      "clock_hz": 20000000,
      "tiles": "6x2",
      "analog_pins": [],
      "repo": "https://github.com/ics-jku/ttihp-goldcrest",
      "commit": "a417f90333a8e8d9650cc7ca66693fe784469f84",
      "pinout": {
        "ui[0]": "UART rx",
        "ui[1]": "External SPI ROM MISO",
        "ui[2]": "External SPI RAM MISO",
        "ui[3]": "Other SPI MISO",
        "ui[4]": "GPIO in 0",
        "ui[5]": "GPIO in 1",
        "ui[6]": "GPIO in 2",
        "ui[7]": "GPIO in 3",
        "uo[0]": "UART tx",
        "uo[1]": "External SPI ROM SCK",
        "uo[2]": "External SPI ROM MOSI",
        "uo[3]": "External SPI ROM CS",
        "uo[4]": "External SPI RAM SCK",
        "uo[5]": "External SPI RAM MOSI",
        "uo[6]": "External SPI RAM CS",
        "uo[7]": "Other SPI SCK",
        "uio[0]": "Other SPI MOSI",
        "uio[1]": "Other SPI CS1",
        "uio[2]": "Other SPI CS2",
        "uio[3]": "Other SPI CS3",
        "uio[4]": "GPIO out 0",
        "uio[5]": "GPIO out 1",
        "uio[6]": "GPIO out 2",
        "uio[7]": "GPIO out 3"
      }
    },
    {
      "macro": "tt_um_gray_sobel",
      "address": 427,
      "title": "Gray scale and Sobel filter",
      "author": "Diana Natali Maldonado Ramirez",
      "description": "Grayscale and Sobel filter.",
      "clock_hz": 10000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/DianaNatali/ttihp_grayscale_sobel",
      "commit": "187883bbacab761c84bb4344992dd58050c20738",
      "pinout": {
        "ui[0]": "spi_sck_i",
        "ui[1]": "spi_cs_i",
        "ui[2]": "spi_sdi_i",
        "ui[3]": "select_process_i[0]",
        "ui[4]": "select_process_i[1]",
        "ui[5]": "start_sobel_i",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "spi_sdo_o",
        "uo[1]": "lfsr_done",
        "uo[2]": "ena",
        "uo[3]": "output_px[0]",
        "uo[4]": "output_px[1]",
        "uo[5]": "output_px[2]",
        "uo[6]": "output_px[3]",
        "uo[7]": "output_px[4]",
        "uio[0]": "LFSR_enable_i",
        "uio[1]": "seed_stop_i",
        "uio[2]": "lfsr_en_i",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_hpretl_minilogix",
      "address": 198,
      "title": "Minilogix",
      "author": "Harald Pretl",
      "description": "A configurable 8b in, 8b out logic block with optional feedback",
      "clock_hz": 20000000,
      "tiles": "4x2",
      "analog_pins": [],
      "repo": "https://github.com/iic-jku/ttihp-0p2-hpretl-minilogix",
      "commit": "7d3762f5e00ed8f3937f44df6569eba4e4fec800",
      "pinout": {
        "ui[0]": "data in0",
        "ui[1]": "data in1",
        "ui[2]": "data in2",
        "ui[3]": "data in3",
        "ui[4]": "data in4",
        "ui[5]": "data in5",
        "ui[6]": "data in6",
        "ui[7]": "data in7",
        "uo[0]": "data out0",
        "uo[1]": "data out1",
        "uo[2]": "data out2",
        "uo[3]": "data out3",
        "uo[4]": "data out4",
        "uo[5]": "data out5",
        "uo[6]": "data out6",
        "uo[7]": "data out7",
        "uio[0]": "load enable",
        "uio[1]": "load clk",
        "uio[2]": "load data",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "dbg out0",
        "uio[6]": "dbg out1",
        "uio[7]": "dbg out2"
      }
    },
    {
      "macro": "tt_um_hpretl_spi",
      "address": 579,
      "title": "SPI Test",
      "author": "Harald Pretl",
      "description": "Simple SPI-based register file (for the testing the flow)",
      "clock_hz": 20000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/iic-jku/ttihp0p2-um-hpretl-spi",
      "commit": "ca3609a9dfcdeb27675edc1fb99b957664d67200",
      "pinout": {
        "ui[0]": "SPI clk (SCLK)",
        "ui[1]": "SPI data in (MOSI)",
        "ui[2]": "SPI load (CS)",
        "ui[3]": "select output byte (0 = low, 1 = high)",
        "ui[4]": "sinegen scale factor (LSB)",
        "ui[5]": "sinegen scale factor (MSB)",
        "ui[6]": "select ds-modulator input (0 = SPI register, 1 = sine generator)",
        "ui[7]": "order of delta-sigma modulator (0 = 1st, 1 = 2nd)",
        "uo[0]": "SPI data out (MISO)",
        "uo[1]": "cookie detected (loaded 0xCAFE)",
        "uo[2]": "XOR of SPI clk and SPI data in",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "inverted output of delta-sigma modulator",
        "uo[7]": "output of delta-sigma modulator",
        "uio[0]": "register b0|8",
        "uio[1]": "register b1|9",
        "uio[2]": "register b2|10",
        "uio[3]": "register b3|11",
        "uio[4]": "register b4|12",
        "uio[5]": "register b5|13",
        "uio[6]": "register b6|14",
        "uio[7]": "register b7|15"
      }
    },
    {
      "macro": "tt_um_htfab_bouncy_capsule",
      "address": 299,
      "title": "Bouncy Capsule",
      "author": "htfab",
      "description": "Demoscene project featuring... well, a bouncy capsule",
      "clock_hz": 25000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttihp0p2-bouncy-capsule",
      "commit": "313dd4916fd559506eee4a3fe2f97aafcc0a9d00",
      "pinout": {
        "ui[0]": "Pause kinematics",
        "ui[1]": "Reset kinematics",
        "ui[2]": "Mute sound",
        "ui[3]": "Kill sound",
        "ui[4]": "Hide background",
        "ui[5]": "Hide text",
        "ui[6]": "Lock colors",
        "ui[7]": "No re-orientation",
        "uo[0]": "Tiny VGA R1",
        "uo[1]": "Tiny VGA G1",
        "uo[2]": "Tiny VGA B1",
        "uo[3]": "Tiny VGA VSync",
        "uo[4]": "Ting VGA R0",
        "uo[5]": "Tiny VGA G0",
        "uo[6]": "Tiny VGA B0",
        "uo[7]": "Tiny VGA HSync",
        "uio[0]": "PDM audio out",
        "uio[1]": "PDM audio out",
        "uio[2]": "PDM audio out",
        "uio[3]": "PDM audio out",
        "uio[4]": "PDM audio out",
        "uio[5]": "PDM audio out",
        "uio[6]": "PDM audio out",
        "uio[7]": "PDM audio out"
      }
    },
    {
      "macro": "tt_um_htfab_caterpillar",
      "address": 289,
      "title": "Simon's Caterpillar",
      "author": "htfab",
      "description": "Port of Caterpillar Logic to Simon Says PMOD",
      "clock_hz": 50000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttihp0p2-caterpillar",
      "commit": "2dc9726eb96812a8bb2ca467e58342d40a66e817",
      "pinout": {
        "ui[0]": "red button",
        "ui[1]": "green button",
        "ui[2]": "blue button",
        "ui[3]": "yellow button",
        "ui[4]": "display polarity",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "red led",
        "uo[1]": "green led",
        "uo[2]": "yellow led",
        "uo[3]": "blue led",
        "uo[4]": "speaker",
        "uo[5]": "digit 1",
        "uo[6]": "digit 2",
        "uo[7]": "",
        "uio[0]": "segment A",
        "uio[1]": "segment B",
        "uio[2]": "segment C",
        "uio[3]": "segment D",
        "uio[4]": "segment E",
        "uio[5]": "segment F",
        "uio[6]": "segment G",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_htfab_cells",
      "address": 616,
      "title": "Cell mux",
      "author": "htfab",
      "description": "All the IHP standard cells",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttihp0p2-cells",
      "commit": "9ea9c0f50cd950321eaaf3500ed81d51c6967c91",
      "pinout": {
        "ui[0]": "page bit 0",
        "ui[1]": "page bit 1",
        "ui[2]": "page bit 2",
        "ui[3]": "page bit 3",
        "ui[4]": "input bit 0",
        "ui[5]": "input bit 1",
        "ui[6]": "input bit 2",
        "ui[7]": "input bit 3",
        "uo[0]": "output bit 8*page",
        "uo[1]": "output bit 8*page+1",
        "uo[2]": "output bit 8*page+2",
        "uo[3]": "output bit 8*page+3",
        "uo[4]": "output bit 8*page+4",
        "uo[5]": "output bit 8*page+5",
        "uo[6]": "output bit 8*page+6",
        "uo[7]": "output bit 8*page+7",
        "uio[0]": "input bit 4",
        "uio[1]": "input bit 5",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_htfab_latch_test",
      "address": 523,
      "title": "Latch test",
      "author": "htfab",
      "description": "Verify that $_DLATCH_N_ can be properly techmapped",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttihp0p2-latchtest",
      "commit": "4f8c38031e2691b6a61ea566261704389af89fdc",
      "pinout": {
        "ui[0]": "p_e",
        "ui[1]": "p_d",
        "ui[2]": "n_e",
        "ui[3]": "n_d",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "p_q",
        "uo[1]": "n_q",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_htfab_pg_1x1",
      "address": 618,
      "title": "Power gating test (1x1)",
      "author": "htfab",
      "description": "Placeholder for a power gated test design (preliminary work on supporting power gated designs on later IHP shuttles)",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttihp0p2-pg-1x1",
      "commit": "7b039294c28b80a041cad94b71f76585468c9c41",
      "pinout": {
        "ui[0]": "TODO",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "TODO",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_htfab_pg_1x2",
      "address": 363,
      "title": "Power gating test (1x2)",
      "author": "htfab",
      "description": "Placeholder for a power gated test design (preliminary work on supporting power gated designs on later IHP shuttles)",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttihp0p2-pg-1x2",
      "commit": "2fae4c48b98b87812c21616527a1634ee9e1a633",
      "pinout": {
        "ui[0]": "TODO",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "TODO",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_htfab_rotfpga2",
      "address": 107,
      "title": "ROTFPGA v2a",
      "author": "htfab",
      "description": "A reconfigurable logic circuit made of identical rotatable tiles",
      "clock_hz": 10000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttihp0p2-rotfpga",
      "commit": "a741d391880766f4d3451ffd902b95e0b45efe74",
      "pinout": {
        "ui[0]": "tile(0,0) left in",
        "ui[1]": "tile(0,1) left in",
        "ui[2]": "tile(0,2) left in",
        "ui[3]": "tile(0,3) left in",
        "ui[4]": "tile(0,4) left in",
        "ui[5]": "tile(0,5) left in",
        "ui[6]": "tile(0,6) left in",
        "ui[7]": "tile(0,7) left in",
        "uo[0]": "tile(7,0) right out",
        "uo[1]": "tile(7,1) right out",
        "uo[2]": "tile(7,2) right out",
        "uo[3]": "tile(7,3) right out",
        "uo[4]": "tile(7,4) right out",
        "uo[5]": "tile(7,5) right out",
        "uo[6]": "tile(7,6) right out",
        "uo[7]": "tile(7,7) right out",
        "uio[0]": "_scan enable_ input",
        "uio[1]": "_scan chain_ input",
        "uio[2]": "_configuration_ input bit 0",
        "uio[3]": "_configuration_ input bit 1",
        "uio[4]": "_loop breaker enable_ input",
        "uio[5]": "_loop breaker class_ input bit 0",
        "uio[6]": "_loop breaker class_ input bit 1",
        "uio[7]": "_scan chain_ output"
      }
    },
    {
      "macro": "tt_um_htfab_rotfpga2_ff",
      "address": 161,
      "title": "ROTFPGA v2b",
      "author": "htfab",
      "description": "A reconfigurable logic circuit made of identical rotatable tiles",
      "clock_hz": 10000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttihp0p2-rotfpga-ff",
      "commit": "79a800e1329adf0ec908da70b6bf13b7af68373b",
      "pinout": {
        "ui[0]": "tile(0,0) left in",
        "ui[1]": "tile(0,1) left in",
        "ui[2]": "tile(0,2) left in",
        "ui[3]": "tile(0,3) left in",
        "ui[4]": "tile(0,4) left in",
        "ui[5]": "tile(0,5) left in",
        "ui[6]": "tile(0,6) left in",
        "ui[7]": "tile(0,7) left in",
        "uo[0]": "tile(7,0) right out",
        "uo[1]": "tile(7,1) right out",
        "uo[2]": "tile(7,2) right out",
        "uo[3]": "tile(7,3) right out",
        "uo[4]": "tile(7,4) right out",
        "uo[5]": "tile(7,5) right out",
        "uo[6]": "tile(7,6) right out",
        "uo[7]": "tile(7,7) right out",
        "uio[0]": "_scan enable_ input",
        "uio[1]": "_scan chain_ input",
        "uio[2]": "_configuration_ / _loop breaker class_ input bit 0",
        "uio[3]": "_configuration_ / _loop breaker class_ input bit 1",
        "uio[4]": "_loop breaker enable_ input",
        "uio[5]": "clock gating for flip-flops",
        "uio[6]": "clock gating for simulated latches",
        "uio[7]": "_scan chain_ output"
      }
    },
    {
      "macro": "tt_um_jamesrosssharp_1bitam",
      "address": 74,
      "title": "1bit_am_sdr",
      "author": "James Sharp",
      "description": "1bit AM software defined radio",
      "clock_hz": 50000000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/jamesrosssharp/ttihp-am-sdr",
      "commit": "f4ed8befa3c1d11810098727537c9642c17868fe",
      "pinout": {
        "ui[0]": "COMP_IN",
        "ui[1]": "SPI_MOSI",
        "ui[2]": "SPI_SCK",
        "ui[3]": "SPI_CSb",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "COMP_OUT",
        "uo[1]": "PWM",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_jayjaywong12",
      "address": 105,
      "title": "mulmul",
      "author": "JJ Wong",
      "description": "Small 4-bit vector multiplication engine",
      "clock_hz": 0,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/jayjaywong12/tt08",
      "commit": "21dbbdb31304caaae2ca8e69d3ca508df9baba2f",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "addr[4]",
        "ui[5]": "addr[5]",
        "ui[6]": "op[0]",
        "ui[7]": "op[1]",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "data[0]",
        "uio[1]": "data[1]",
        "uio[2]": "data[2]",
        "uio[3]": "data[3]",
        "uio[4]": "state[0]",
        "uio[5]": "state[1]",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_joerdsonsilva_modem",
      "address": 355,
      "title": "Multimode Modem",
      "author": "Joerdson Silva",
      "description": "Performs digital modulation and demodulation in amplitude, frequency and phase schemes.",
      "clock_hz": 10000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/joerdsonsilva/ttihp-multimode-modem",
      "commit": "ca763b745d723ba63970cb5635b1e3c11625a05a",
      "pinout": {
        "ui[0]": "selection_0",
        "ui[1]": "selection_1",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "modulation_out_0",
        "uo[1]": "modulation_out_1",
        "uo[2]": "modulation_out_2",
        "uo[3]": "modulation_out_3",
        "uo[4]": "modulation_out_4",
        "uo[5]": "modulation_out_5",
        "uo[6]": "modulation_out_6",
        "uo[7]": "demodulation_out",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_kbeckmann_flame",
      "address": 235,
      "title": "Flame demo",
      "author": "Konrad Beckmann & Linus M\u00e5rtensson",
      "description": "Flame demo",
      "clock_hz": 25000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/kbeckmann/ttihp0p2-kbeckmann-flame",
      "commit": "99be099b9732d68d37a05310869c4ff165d910f2",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "ui_out[0]",
        "uo[1]": "ui_out[1]",
        "uo[2]": "ui_out[2]",
        "uo[3]": "ui_out[3]",
        "uo[4]": "ui_out[4]",
        "uo[5]": "ui_out[5]",
        "uo[6]": "ui_out[6]",
        "uo[7]": "ui_out[7]",
        "uio[0]": "uio_out[0]",
        "uio[1]": "uio_out[1]",
        "uio[2]": "uio_out[2]",
        "uio[3]": "uio_out[3]",
        "uio[4]": "uio_out[4]",
        "uio[5]": "uio_out[5]",
        "uio[6]": "uio_out[6]",
        "uio[7]": "uio_out[7]"
      }
    },
    {
      "macro": "tt_um_kianv_bare_metal",
      "address": 138,
      "title": "KianV RISC-V RV32E Baremetal SoC",
      "author": "Dipl.-Ing. Hirosh Dabui",
      "description": "A baremetal RISC-V RV32E ASIC with audio, spi, uart",
      "clock_hz": 50000000,
      "tiles": "4x2",
      "analog_pins": [],
      "repo": "https://github.com/splinedrive/RISCV-KianV-BareMetalStyle",
      "commit": "abddc9127d1d13f2956c4a953d666ddfd48f87dc",
      "pinout": {
        "ui[0]": "uart_rx",
        "ui[1]": "spi_sio1_so_miso0",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "spi_cen0",
        "uo[1]": "spi_sclk0",
        "uo[2]": "spi_sio0_si_mosi0",
        "uo[3]": "pwm_o",
        "uo[4]": "uart_tx",
        "uo[5]": "led[0]",
        "uo[6]": "led[1]",
        "uo[7]": "led[2]",
        "uio[0]": "ce0 flash",
        "uio[1]": "sio0",
        "uio[2]": "sio1",
        "uio[3]": "sck",
        "uio[4]": "sd2",
        "uio[5]": "sd3",
        "uio[6]": "cs1 psram",
        "uio[7]": "always high"
      }
    },
    {
      "macro": "tt_um_meiniKi_ttihp_fazyrv_exotiny",
      "address": 10,
      "title": "FazyRV-ExoTiny",
      "author": "Meinhard Kissich",
      "description": "A minimal SoC based on FazyRV that uses external QSPI ROM and RAM.",
      "clock_hz": 50000000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/meiniKi/ttihp-FazyRV-ExoTiny",
      "commit": "1aabd21d570c9c8dea94c1505b875696cfeb6026",
      "pinout": {
        "ui[0]": "General purpose input (GPI) 0.",
        "ui[1]": "General purpose input (GPI) 1.",
        "ui[2]": "General purpose input (GPI) 2.",
        "ui[3]": "General purpose input (GPI) 3.",
        "ui[4]": "General purpose input (GPI) 4.",
        "ui[5]": "General purpose input (GPI) 5.",
        "ui[6]": "General purpose input (GPI) 6.",
        "ui[7]": "(User) SPI SDI.",
        "uo[0]": "General purpose output (GPO) 0.",
        "uo[1]": "General purpose output (GPO) 1.",
        "uo[2]": "General purpose output (GPO) 2.",
        "uo[3]": "General purpose output (GPO) 3.",
        "uo[4]": "General purpose output (GPO) 4.",
        "uo[5]": "General purpose output (GPO) 5.",
        "uo[6]": "(User) SPI SCK.",
        "uo[7]": "(User) SPI SDO.",
        "uio[0]": "QSPI ROM chip select (low active).",
        "uio[1]": "QSPI ROM/RAM SDO[0].",
        "uio[2]": "QSPI ROM/RAM SDO[1].",
        "uio[3]": "QSPI ROM/RAM SCK.",
        "uio[4]": "QSPI ROM/RAM SDO[2].",
        "uio[5]": "QSPI ROM/RAM SDO[3].",
        "uio[6]": "QSPI RAM chip select (low active).",
        "uio[7]": "NC."
      }
    },
    {
      "macro": "tt_um_multi_bit_puf_wrapper",
      "address": 617,
      "title": "One Bit PUF",
      "author": "Yimin Gao and Ceylan Morgul",
      "description": "It is a PUF based on a difference of two registers",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mcmorgul/ttihp02-multi-bit-puf",
      "commit": "2d9dfd8f6753a3c53dee271b531c4245ce397462",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "start_signal",
        "uo[0]": "puf_out[0]",
        "uo[1]": "puf_out[1]",
        "uo[2]": "puf_out[2]",
        "uo[3]": "puf_out[3]",
        "uo[4]": "puf_out[4]",
        "uo[5]": "puf_out[5]",
        "uo[6]": "puf_out[6]",
        "uo[7]": "puf_out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_no_time_for_squares_tommythorn",
      "address": 266,
      "title": "No Time For Squares, IHP edition",
      "author": "Tommy Thorn",
      "description": "It's a 12-hour clock, drawn with triangles rendered by a race-the-beam triangle render",
      "clock_hz": 31500000,
      "tiles": "4x2",
      "analog_pins": [],
      "repo": "https://github.com/tommythorn/ttihp-no-time-for-squares",
      "commit": "e6cce2e8e1c6fd6cc9a131106caad6ca5a41ce62",
      "pinout": {
        "ui[0]": "debugsel0",
        "ui[1]": "debugsel1",
        "ui[2]": "debugsel2",
        "ui[3]": "debugsel3",
        "ui[4]": "unused0",
        "ui[5]": "unused1",
        "ui[6]": "minute, advance minute",
        "ui[7]": "hour, advance hour",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "vsync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_oled_frequency_counter",
      "address": 357,
      "title": "Frequency Counter SSD1306 OLED",
      "author": "Pawel Sitarz (embelon)",
      "description": "Simple Frequency Counter displaying result on SSD1306 SPI OLED",
      "clock_hz": 1000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/embelon/ttihp-frequency-counter-oled",
      "commit": "562151df48506e37e2b3aefb579ba84177f7bb8d",
      "pinout": {
        "ui[0]": "clk_x - measured frequency input",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "OLED nRST",
        "uo[1]": "OLED nVBAT",
        "uo[2]": "OLED nVDC",
        "uo[3]": "OLED nCS",
        "uo[4]": "OLED Data/Command",
        "uo[5]": "OLED CLK",
        "uo[6]": "OLED Data Out",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_one_bit_puf_wrapper",
      "address": 615,
      "title": "One Bit PUF",
      "author": "Yimin Gao and Ceylan Morgul",
      "description": "It is a PUF based on a difference of two registers",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mcmorgul/ttihp02-one-bit-puf",
      "commit": "f508ffdc6bad6c3a386c7098706303219e6c607d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "start_signal",
        "uo[0]": "one_bit_puf output",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_phansel_laplace_lut",
      "address": 202,
      "title": "Experiment Number Six: Laplace LUT",
      "author": "Paul Hansel",
      "description": "ASCII ROM encoding the LaTeX characters needed to typeset the Laplace transforms of a few specialized functions.",
      "clock_hz": 10000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/phansel/ttihp-ens2",
      "commit": "dfa58d4be9ed83e8eb66d2b9d2715cb323bd295a",
      "pinout": {
        "ui[0]": "Address bit 0",
        "ui[1]": "Address bit 1",
        "ui[2]": "Address bit 2",
        "ui[3]": "Address bit 3",
        "ui[4]": "Address bit 4",
        "ui[5]": "Address bit 5",
        "ui[6]": "Character output enable",
        "ui[7]": "Clock divider disable",
        "uo[0]": "RHS_BIT_0",
        "uo[1]": "RHS_BIT_1",
        "uo[2]": "RHS_BIT_2",
        "uo[3]": "RHS_BIT_3",
        "uo[4]": "RHS_BIT_4",
        "uo[5]": "RHS_BIT_5",
        "uo[6]": "RHS_BIT_6",
        "uo[7]": "RHS_BIT_7",
        "uio[0]": "LHS_BIT_0",
        "uio[1]": "LHS_BIT_1",
        "uio[2]": "LHS_BIT_2",
        "uio[3]": "LHS_BIT_3",
        "uio[4]": "LHS_BIT_4",
        "uio[5]": "LHS_BIT_5",
        "uio[6]": "LHS_BIT_6",
        "uio[7]": "LHS_BIT_7"
      }
    },
    {
      "macro": "tt_um_pulse_generator",
      "address": 609,
      "title": "TTL Pulse Generator",
      "author": "Adonai Cruz",
      "description": "Simple TTL Pulse Generator",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/adonairc/ttihp0p2-pulse-generator",
      "commit": "d84f66df93177adae90112592730240ad22f54e6",
      "pinout": {
        "ui[0]": "Sequence Select bit 0",
        "ui[1]": "Sequence Select bit 1",
        "ui[2]": "Sequence Select bit 2",
        "ui[3]": "Sequence Select bit 3",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "TTL output",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_rajum_iterativeMAC",
      "address": 611,
      "title": "Iterative MAC",
      "author": "Raju Machupalli",
      "description": "Iterative multiply and accumulation unit for ML accelerators",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RajuMachupalli/ttihp-iterative-MAC-unit",
      "commit": "23c286cb0d2d40d64b019e3da6be49bcdcc21345",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_in[0]",
        "uio[1]": "uio_in[1]",
        "uio[2]": "uio_in[2]",
        "uio[3]": "uio_in[3]",
        "uio[4]": "uio_in[4]",
        "uio[5]": "uio_in[5]",
        "uio[6]": "uio_in[6]",
        "uio[7]": "uio_in[7]"
      }
    },
    {
      "macro": "tt_um_ravenslofty_chess",
      "address": 43,
      "title": "Chess",
      "author": "Hannah Ravensloft",
      "description": "chess move generator",
      "clock_hz": 0,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/Ravenslofty/ttihp-chess",
      "commit": "68d192f915c62dbb68ba7f4ef4b911b673e180f7",
      "pinout": {
        "ui[0]": "Address bit 0",
        "ui[1]": "Address bit 1",
        "ui[2]": "Address bit 2",
        "ui[3]": "Address bit 3",
        "ui[4]": "Address bit 4",
        "ui[5]": "Address bit 5",
        "ui[6]": "Address bit 6",
        "ui[7]": "Address bit 7 (valid)",
        "uo[0]": "Square out bit 0",
        "uo[1]": "Square out bit 1",
        "uo[2]": "Square out bit 2",
        "uo[3]": "Square out bit 3",
        "uo[4]": "Square out bit 4",
        "uo[5]": "Square out bit 5",
        "uo[6]": "End iteration bit",
        "uo[7]": "Illegal position bit",
        "uio[0]": "Data in bit 0",
        "uio[1]": "Data in bit 1",
        "uio[2]": "Data in bit 2",
        "uio[3]": "Data in bit 3",
        "uio[4]": "Data in bit 4",
        "uio[5]": "Data in bit 5",
        "uio[6]": "Data in bit 6",
        "uio[7]": "Data in bit 7"
      }
    },
    {
      "macro": "tt_um_rebeccargb_colorbars",
      "address": 585,
      "title": "Color Bars",
      "author": "Rebecca G. Bettencourt",
      "description": "VGA demo resembling NTSC color bars",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/ttihp-colorbars",
      "commit": "23422c79981f3b9b3492ae41a48a69bc17801104",
      "pinout": {
        "ui[0]": "show_id",
        "ui[1]": "custom_id",
        "ui[2]": "scroll_id",
        "ui[3]": "scroll_bars",
        "ui[4]": "D3 (custom id)",
        "ui[5]": "D2 (custom id)",
        "ui[6]": "D1 (custom id)",
        "ui[7]": "D0 (custom id)",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "A0 (custom id)",
        "uio[1]": "A1 (custom id)",
        "uio[2]": "A2 (custom id)",
        "uio[3]": "A3 (custom id)",
        "uio[4]": "A4 (custom id)",
        "uio[5]": "A5 (custom id)",
        "uio[6]": "A6 (custom id)",
        "uio[7]": "A7 (custom id)"
      }
    },
    {
      "macro": "tt_um_rebeccargb_hardware_utf8",
      "address": 519,
      "title": "Hardware UTF Encoder/Decoder",
      "author": "Rebecca G. Bettencourt",
      "description": "Converts Unicode code points between UTF-8, UTF-16, and UTF-32.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/ttihp-hardware-utf8",
      "commit": "50ac867c4024c375f1eb2a7632175463643b175c",
      "pinout": {
        "ui[0]": "/ROUT",
        "ui[1]": "ERRS, /PROPS",
        "ui[2]": "CHK",
        "ui[3]": "CBE, /CLE",
        "ui[4]": "READ, /WRITE",
        "ui[5]": "/CIO",
        "ui[6]": "/UIO",
        "ui[7]": "/BIO",
        "uo[0]": "READY; NORMAL",
        "uo[1]": "RETRY; CONTROL",
        "uo[2]": "INVALID; SURROGATE",
        "uo[3]": "OVERLONG; HIGHCHAR",
        "uo[4]": "NONUNI; PRIVATE",
        "uo[5]": "ERROR; NONCHAR",
        "uo[6]": "UEOF",
        "uo[7]": "BEOF",
        "uio[0]": "I/O LSB",
        "uio[1]": "I/O",
        "uio[2]": "I/O",
        "uio[3]": "I/O",
        "uio[4]": "I/O",
        "uio[5]": "I/O",
        "uio[6]": "I/O",
        "uio[7]": "I/O MSB"
      }
    },
    {
      "macro": "tt_um_rebeccargb_intercal_alu",
      "address": 619,
      "title": "INTERCAL ALU",
      "author": "Rebecca G. Bettencourt",
      "description": "An ALU for the five operators of the INTERCAL programming language.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/ttihp-intercal-alu",
      "commit": "d19afcd730b28aa5692a16ae96bd4a5d3d06e93f",
      "pinout": {
        "ui[0]": "A0 (address)",
        "ui[1]": "A1 (address)",
        "ui[2]": "S0 (selector)",
        "ui[3]": "S1 (selector)",
        "ui[4]": "S2 (selector)",
        "ui[5]": "S3 (selector)",
        "ui[6]": "/OE (output enable)",
        "ui[7]": "/WE (write enable)",
        "uo[0]": "D0",
        "uo[1]": "D1",
        "uo[2]": "D2",
        "uo[3]": "D3",
        "uo[4]": "D4",
        "uo[5]": "D5",
        "uo[6]": "D6",
        "uo[7]": "D7",
        "uio[0]": "D0",
        "uio[1]": "D1",
        "uio[2]": "D2",
        "uio[3]": "D3",
        "uio[4]": "D4",
        "uio[5]": "D5",
        "uio[6]": "D6",
        "uio[7]": "D7"
      }
    },
    {
      "macro": "tt_um_rebeccargb_universal_decoder",
      "address": 517,
      "title": "Universal Binary to Segment Decoder",
      "author": "Rebecca G. Bettencourt",
      "description": "Decodes various binary codes to various segmented displays.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/ttihp-ubcd",
      "commit": "84f77f23d9333964dc1ef0cf8e8c914bb060b0bc",
      "pinout": {
        "ui[0]": "A; D0; A1; A",
        "ui[1]": "B; D1; B1; B",
        "ui[2]": "C; D2; C1; C",
        "ui[3]": "D; D3; D1; D",
        "ui[4]": "V0; D4; A2; E",
        "ui[5]": "V1; D5; B2; -",
        "ui[6]": "V2; D6; C2; /VBI",
        "ui[7]": "/RBI; LC; D2; /RBI",
        "uo[0]": "Segment a; U1; a",
        "uo[1]": "Segment b; U2; b",
        "uo[2]": "Segment c; V1; c",
        "uo[3]": "Segment d; V2; d",
        "uo[4]": "Segment e; W1; e",
        "uo[5]": "Segment f; W2; f",
        "uo[6]": "Segment g; X1; g",
        "uo[7]": "/RBO; /LTR; X2; /RBO",
        "uio[0]": "X6; X6; Y1; h",
        "uio[1]": "X7; X7; Y2; V",
        "uio[2]": "X9; X9; /LT1; -",
        "uio[3]": "/LT; FS; /LT2; /LT",
        "uio[4]": "/BI (blanking input)",
        "uio[5]": "/AL (active low)",
        "uio[6]": "M0 (mode select)",
        "uio[7]": "M1 (mode select)"
      }
    },
    {
      "macro": "tt_um_rebeccargb_vga_pride",
      "address": 231,
      "title": "VGA Pride",
      "author": "Rebecca G. Bettencourt",
      "description": "A VGA demo for showing pride flags",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/ttihp-vga-pride",
      "commit": "487f14e82f3997d3a8e2cb24a001ea0701888c5a",
      "pinout": {
        "ui[0]": "address mode",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "set",
        "ui[5]": "prev",
        "ui[6]": "next",
        "ui[7]": "reset",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "A0",
        "uio[1]": "A1",
        "uio[2]": "A2",
        "uio[3]": "A3",
        "uio[4]": "A4",
        "uio[5]": "A5",
        "uio[6]": "A6",
        "uio[7]": "A7"
      }
    },
    {
      "macro": "tt_um_rejunity_ay8913",
      "address": 544,
      "title": "Classic 8-bit era Programmable Sound Generator AY-3-8913",
      "author": "ReJ aka Renaldas Zioma",
      "description": "The AY-3-8913 is a 3-voice programmable sound generator (PSG) chip from General Instruments. The AY-3-8913 is a smaller variant of AY-3-8910 or its analog YM2149.",
      "clock_hz": 2000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tt05-psg-ay8913",
      "commit": "8ea457a87fcd7c83091888a1c97dd7eb1d9718dc",
      "pinout": {
        "ui[0]": "DA0 - multiplexed data/address bus LSB",
        "ui[1]": "DA1 - multiplexed data/address bus",
        "ui[2]": "DA2 - multiplexed data/address bus",
        "ui[3]": "DA3 - multiplexed data/address bus",
        "ui[4]": "DA4 - multiplexed data/address bus",
        "ui[5]": "DA5 - multiplexed data/address bus",
        "ui[6]": "DA6 - multiplexed data/address bus",
        "ui[7]": "DA7 - multiplexed data/address bus MSB",
        "uo[0]": "audio out (PWM)",
        "uo[1]": "digita audio LSB",
        "uo[2]": "digita audio ",
        "uo[3]": "digita audio ",
        "uo[4]": "digita audio ",
        "uo[5]": "digita audio ",
        "uo[6]": "digita audio ",
        "uo[7]": "digita audio MSB",
        "uio[0]": "(in) **BC1** bus control",
        "uio[1]": "(in) **BDIR** bus direction",
        "uio[2]": "(in) **SEL0** clock divider",
        "uio[3]": "(in) **SEL1** clock divider",
        "uio[4]": "(out) channel A (PWM)",
        "uio[5]": "(out) channel B (PWM)",
        "uio[6]": "(out) channel C (PWM)",
        "uio[7]": "(out) AUDIO OUT master (PWM)"
      }
    },
    {
      "macro": "tt_um_rejunity_sn76489",
      "address": 487,
      "title": "Classic 8-bit era Programmable Sound Generator SN76489",
      "author": "ReJ aka Renaldas Zioma",
      "description": "The SN76489 Digital Complex Sound Generator (DCSG) is a programmable sound generator chip from Texas Instruments.",
      "clock_hz": 4000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tt05-psg-sn76489",
      "commit": "fa106e5a21aea935297af14a42cf967d13ab683a",
      "pinout": {
        "ui[0]": "D0 data bus",
        "ui[1]": "D1 data bus",
        "ui[2]": "D2 data bus",
        "ui[3]": "D3 data bus",
        "ui[4]": "D4 data bus",
        "ui[5]": "D5 data bus",
        "ui[6]": "D6 data bus",
        "ui[7]": "D7 data bus",
        "uo[0]": "digital audio LSB",
        "uo[1]": "digital audio",
        "uo[2]": "digital audio",
        "uo[3]": "digital audio",
        "uo[4]": "digital audio",
        "uo[5]": "digital audio",
        "uo[6]": "digital audio",
        "uo[7]": "digital audio MSB",
        "uio[0]": "(in)  **/WE** write enable",
        "uio[1]": "(in)  **SEL0** clock divider",
        "uio[2]": "(in)  **SEL1** clock divider",
        "uio[3]": "(out) channel 0 (PWM)",
        "uio[4]": "(out) channel 1 (PWM)",
        "uio[5]": "(out) channel 2 (PWM)",
        "uio[6]": "(out) channel 3 (PWM)",
        "uio[7]": "(out) AUDIO OUT master (PWM)"
      }
    },
    {
      "macro": "tt_um_rejunity_vga_logo",
      "address": 612,
      "title": "VGA Tiny Logo (1 tile)",
      "author": "Renaldas Zioma",
      "description": "Large 480x480 pixels Tiny Tapeout logo with bling and dithered colors crammed into 1 tile!",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tt08-huge-480x480-tiny-tapeout-logo-in-1-tile",
      "commit": "db62b6df93defbe2a3073f22904a545fbee7bc43",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_rejunity_vga_test01",
      "address": 295,
      "title": "VGA Drop (audio/visual demo)",
      "author": "ReJ aka Renaldas Zioma, eriQue aka Erik Hemming, Matthias Kampa",
      "description": "Tiny 8 part Megademo! TBL^Nesnausk^SonikClique",
      "clock_hz": 25200000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttihp0p2-demo-drop",
      "commit": "5b1dd0c0f4dcb6b1908a10ba890de24cb9ea375a",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSYNC",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSYNC",
        "uio[0]": "Audio (PWM)",
        "uio[1]": "Audio (PWM)",
        "uio[2]": "Audio (PWM)",
        "uio[3]": "Audio (PWM)",
        "uio[4]": "Audio (PWM)",
        "uio[5]": "Audio (PWM)",
        "uio[6]": "Audio (PWM)",
        "uio[7]": "Audio (PWM)"
      }
    },
    {
      "macro": "tt_um_rejunity_z80",
      "address": 171,
      "title": "Zilog Z80",
      "author": "ReJ aka Renaldas Zioma",
      "description": "Z80 open-source silicon. Goal is to become a silicon proven, pin compatible, open-source replacement for classic Z80.",
      "clock_hz": 16000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/z80-open-silicon",
      "commit": "b33b0730c30e628eb89b2cb427d7f87fff5e6c44",
      "pinout": {
        "ui[0]": "/WAIT",
        "ui[1]": "/INT",
        "ui[2]": "/NMI",
        "ui[3]": "/BUSRQ",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "/M1, A0, A8",
        "uo[1]": "/MREQ, A1, A9",
        "uo[2]": "/IORQ, A2, A10",
        "uo[3]": "/RD, A3, A11",
        "uo[4]": "/WR, A4, A12",
        "uo[5]": "/RFSH, A5, A13",
        "uo[6]": "/HALT, A6, A14",
        "uo[7]": "/BUSAK, A7, A15",
        "uio[0]": "D0",
        "uio[1]": "D1",
        "uio[2]": "D2",
        "uio[3]": "D3",
        "uio[4]": "D4",
        "uio[5]": "D5",
        "uio[6]": "D6",
        "uio[7]": "D7"
      }
    },
    {
      "macro": "tt_um_rtfb_collatz",
      "address": 361,
      "title": "Collatz conjecture brute-forcer",
      "author": "Vytautas \u0160altenis",
      "description": "Runs a Collatz sequence calculation for a given number",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/rtfb/ttihp-collatz-rev1",
      "commit": "2ae65ffb29c66afc288fef95840a583a2cf67520",
      "pinout": {
        "ui[0]": "input0",
        "ui[1]": "input1",
        "ui[2]": "input2",
        "ui[3]": "input3",
        "ui[4]": "input4",
        "ui[5]": "input5",
        "ui[6]": "input6",
        "ui[7]": "input7",
        "uo[0]": "output0",
        "uo[1]": "output1",
        "uo[2]": "output2",
        "uo[3]": "output3",
        "uo[4]": "output4",
        "uo[5]": "output5",
        "uo[6]": "output6",
        "uo[7]": "output7",
        "uio[0]": "address0",
        "uio[1]": "address1",
        "uio[2]": "address2",
        "uio[3]": "address3",
        "uio[4]": "address4",
        "uio[5]": "orbit/max select",
        "uio[6]": "start compute",
        "uio[7]": "write enable or compute busy indicator"
      }
    },
    {
      "macro": "tt_um_silice",
      "address": 297,
      "title": "Warp",
      "author": "sylefeb",
      "description": "Demo on TinyTapeout? Let's do something!",
      "clock_hz": 25000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttihp0p2-demo-warp",
      "commit": "064eb4f40a1e4e671b1e0d32f4309d44bf6f60d7",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VS",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HS",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Audio"
      }
    },
    {
      "macro": "tt_um_simon_cipher",
      "address": 128,
      "title": "simon_cipher",
      "author": "Simon Cipher",
      "description": "Bitserial implementation of Simon-128",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Secure-Embedded-Systems/ttihp-simon",
      "commit": "972310fa1ab86720a40bd0a3adcc9a5e1d949711",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_snow",
      "address": 608,
      "title": "Snow",
      "author": "sylefeb",
      "description": "Demo on TinyTapeout? Let's do something!",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/sylefeb/ttihp0p2-snow",
      "commit": "ab288f0073582f93fe2cf98794d4325de6ac5091",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VS",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HS",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Audio"
      }
    },
    {
      "macro": "tt_um_stochastic_addmultiply_CL123abc",
      "address": 481,
      "title": "Stochastic Multiplier, Adder and Self-Multiplier",
      "author": "Ciecen Lestari, Chih-Kuan Ho, David Parent",
      "description": "Multiplier, Adder and Self-Multiplier using stochastic computing",
      "clock_hz": 100,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/davidparent/tt_um_stochastic_math",
      "commit": "12112905431887cd30b8a5681e9011d1ae1a106d",
      "pinout": {
        "ui[0]": "serial_input_1",
        "ui[1]": "serial_input_2",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "serial_output_mul",
        "uo[1]": "serial_output_add",
        "uo[2]": "serial_output_smul",
        "uo[3]": "clk_counter_reset",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tinytapeout_logo_screensaver",
      "address": 130,
      "title": "VGA Screensaver with Tiny Tapeout Logo",
      "author": "Uri Shaked",
      "description": "Tiny Tapeout Logo bouncing around the screen (640x480, TinyVGA Pmod)",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/ttihp0p2-logo-screensaver",
      "commit": "4a90e2040d3ab06b9bdebd824c3d510af3fed60c",
      "pinout": {
        "ui[0]": "tile",
        "ui[1]": "solid_color",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_toivoh_demo_deluxe",
      "address": 258,
      "title": "Sequential Shadows Deluxe [TT08 demo competition]",
      "author": "Toivo Henningsson",
      "description": "My contribution to the TT08 demo competition, extended version",
      "clock_hz": 50400000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/toivoh/ttihp-tt08-demo-deluxe",
      "commit": "0fb38be2abb70267903b93a4195d1a1ab3456639",
      "pinout": {
        "ui[0]": "v_bass_off",
        "ui[1]": "v_drums_off",
        "ui[2]": "v_bass_low",
        "ui[3]": "pause",
        "ui[4]": "rgb444_mode",
        "ui[5]": "pmod_vga_pinout",
        "ui[6]": "logo_shadow_off",
        "ui[7]": "step_frame",
        "uo[0]": "t_R1 / p_R0",
        "uo[1]": "t_G1 / p_R1",
        "uo[2]": "t_B1 / p_R2",
        "uo[3]": "t_vsync / p_R3",
        "uo[4]": "t_R0 / p_B0",
        "uo[5]": "t_G0 / p_B1",
        "uo[6]": "t_B0 / p_B2",
        "uo[7]": "t_hsync / p_B3",
        "uio[0]": "p_G0",
        "uio[1]": "p_G1",
        "uio[2]": "p_G2",
        "uio[3]": "p_G3",
        "uio[4]": "p_hsync",
        "uio[5]": "p_vsync",
        "uio[6]": "audio_out_n",
        "uio[7]": "audio_out"
      }
    },
    {
      "macro": "tt_um_toivoh_retro_console",
      "address": 37,
      "title": "Retro Console",
      "author": "Toivo Henningsson",
      "description": "8\u00bd bit retro console with sprite and tile graphics + synth",
      "clock_hz": 50350000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/toivoh/ttihp-tt06-retro-console",
      "commit": "1759e0a31f8cf3c269ab51e4129ec76beb1a6bad",
      "pinout": {
        "ui[0]": "data_in[0]",
        "ui[1]": "data_in[1]",
        "ui[2]": "data_in[2]",
        "ui[3]": "data_in[3]",
        "ui[4]": "rx_alt_in[0]",
        "ui[5]": "rx_alt_in[1]",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "vsync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "hsync",
        "uio[0]": "addr_out[0]",
        "uio[1]": "addr_out[1]",
        "uio[2]": "addr_out[2]",
        "uio[3]": "addr_out[3]",
        "uio[4]": "tx_out[0]",
        "uio[5]": "tx_out[1]",
        "uio[6]": "rx_in[0] / Gm1_active_out",
        "uio[7]": "rx_in[1] / RBm1_pixelclk_out"
      }
    },
    {
      "macro": "tt_um_tomkeddie_a",
      "address": 425,
      "title": "VGA Experiments in Tennis",
      "author": "Tom Keddie",
      "description": "Simple Game",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TomKeddie/tinytapeout-2024-ihp0p2a",
      "commit": "39597f432830aece1c51aede95a596fb05b5aa38",
      "pinout": {
        "ui[0]": "left paddle up",
        "ui[1]": "left paddle down",
        "ui[2]": "right paddle up",
        "ui[3]": "right paddle down",
        "ui[4]": "score reset",
        "ui[5]": "Speed LSB",
        "ui[6]": "Speed MSB",
        "ui[7]": "pmod sel (high=mole99, low=digilent)",
        "uo[0]": "r1/r0 (mole99/digilent)",
        "uo[1]": "g1/r1 (mole99/digilent)",
        "uo[2]": "b1/r2 (mole99/digilent)",
        "uo[3]": "vsync/r3 (mole99/digilent)",
        "uo[4]": "r0/b0 (mole99/digilent)",
        "uo[5]": "g0/b1 (mole99/digilent)",
        "uo[6]": "b0/b2 (mole99/digilent)",
        "uo[7]": "hsync/b3 (mole99/digilent)",
        "uio[0]": "g0",
        "uio[1]": "g1",
        "uio[2]": "g2",
        "uio[3]": "g3",
        "uio[4]": "hsync",
        "uio[5]": "vsync",
        "uio[6]": "tied low",
        "uio[7]": "tied low"
      }
    },
    {
      "macro": "tt_um_tomkeddie_b",
      "address": 417,
      "title": "Transmit UART",
      "author": "Tom Keddie",
      "description": "Simple UART transmitting strings",
      "clock_hz": 115200,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TomKeddie/tinytapeout-2024-ihp0p2b",
      "commit": "94622e96dc520ef0bea1b7e028e6c09c5ef98e92",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "UART 0 output",
        "uo[1]": "UART 1 output",
        "uo[2]": "UART 2 output",
        "uo[3]": "UART 3 output",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tommythorn_maxbw",
      "address": 163,
      "title": "Asynchronous Multiplier",
      "author": "Tommy Thorn",
      "description": "An asynchronous multiplier",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/tommythorn/ttihp-tommythorn-async-mult",
      "commit": "085f0aa2c84dd2bf1e19782da27aa6483a3f4ed4",
      "pinout": {
        "ui[0]": "ack",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "req",
        "uo[1]": "result_0",
        "uo[2]": "result_1",
        "uo[3]": "result_2",
        "uo[4]": "result_3",
        "uo[5]": "result_4",
        "uo[6]": "result_5",
        "uo[7]": "result_6",
        "uio[0]": "result_7",
        "uio[1]": "result_8",
        "uio[2]": "result_9",
        "uio[3]": "result_10",
        "uio[4]": "result_11",
        "uio[5]": "result_12",
        "uio[6]": "result_13",
        "uio[7]": "result_14"
      }
    },
    {
      "macro": "tt_um_top_mole99",
      "address": 581,
      "title": "One Sprite Pony",
      "author": "Leo Moser",
      "description": "This SVGA design has exactly one trick up its sleeve: it displays a sprite!",
      "clock_hz": 40000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mole99/ttihp0p2-one-sprite-pony",
      "commit": "7862c2126b55668b1b08f6bce6912e4e43994081",
      "pinout": {
        "ui[0]": "SPI mode",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VS",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HS",
        "uio[0]": "CS",
        "uio[1]": "MOSI",
        "uio[2]": "MISO",
        "uio[3]": "SCK",
        "uio[4]": "Vertical Pulse",
        "uio[5]": "Horizontal Pulse",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_urish_giant_ringosc",
      "address": 548,
      "title": "Giant Ring Oscillator (3853 inverters)",
      "author": "Uri Shaked",
      "description": "Configurable ring oscillator with up to 3853 inverters",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/urish/ttihp-giant-ring-oscillator",
      "commit": "2eb7e1992fb35b64e762239e5fc34c3ec0a01d53",
      "pinout": {
        "ui[0]": "ring_in",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "len1",
        "uo[1]": "len3",
        "uo[2]": "len5",
        "uo[3]": "len7",
        "uo[4]": "len11",
        "uo[5]": "len21",
        "uo[6]": "len51",
        "uo[7]": "len101",
        "uio[0]": "len201",
        "uio[1]": "len501",
        "uio[2]": "len1001",
        "uio[3]": "len2001",
        "uio[4]": "len3001",
        "uio[5]": "len3853",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_urish_silife_max",
      "address": 454,
      "title": "Game of Life 8x32 (siLife)",
      "author": "Uri Shaked",
      "description": "Silicon implementation of Conway's Game of Life with LED Dot Matrix Output",
      "clock_hz": 10000000,
      "tiles": "4x2",
      "analog_pins": [],
      "repo": "https://github.com/urish/ttihp-silife-max",
      "commit": "5d6636ea04a7b7a5a0ec5919d2705f0b21690960",
      "pinout": {
        "ui[0]": "row_sel[0] / pattern_sel",
        "ui[1]": "row_sel[1]",
        "ui[2]": "rol_sel[2]",
        "ui[3]": "rol_sel[3]",
        "ui[4]": "rol_sel[4]",
        "ui[5]": "max7129_en",
        "ui[6]": "en",
        "ui[7]": "wr_en",
        "uo[0]": "cell_out[0] / max7129_cs",
        "uo[1]": "cell_out[1] / max7129_clk",
        "uo[2]": "cell_out[2] / max7129_din",
        "uo[3]": "cell_out[3]",
        "uo[4]": "cell_out[4]",
        "uo[5]": "cell_out[5]",
        "uo[6]": "cell_out[6]",
        "uo[7]": "cell_out[7]",
        "uio[0]": "cell_in[0]",
        "uio[1]": "cell_in[1]",
        "uio[2]": "cell_in[2]",
        "uio[3]": "cell_in[3]",
        "uio[4]": "cell_in[4]",
        "uio[5]": "cell_in[5]",
        "uio[6]": "cell_in[6]",
        "uio[7]": "cell_in[7]"
      }
    },
    {
      "macro": "tt_um_urish_simon",
      "address": 521,
      "title": "Simon Says memory game",
      "author": "Uri Shaked",
      "description": "Repeat the sequence of colors and sounds to win the game",
      "clock_hz": 50000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/urish/ttihp-simon-game",
      "commit": "d1e5b70c8a3f950ba4544e9a3a98e795b597a550",
      "pinout": {
        "ui[0]": "btn1",
        "ui[1]": "btn2",
        "ui[2]": "btn3",
        "ui[3]": "btn4",
        "ui[4]": "seginv",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "led1",
        "uo[1]": "led2",
        "uo[2]": "led3",
        "uo[3]": "led4",
        "uo[4]": "speaker",
        "uo[5]": "dig1",
        "uo[6]": "dig2",
        "uo[7]": "",
        "uio[0]": "seg_a",
        "uio[1]": "seg_b",
        "uio[2]": "seg_c",
        "uio[3]": "seg_d",
        "uio[4]": "seg_e",
        "uio[5]": "seg_f",
        "uio[6]": "seg_g",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_urish_spell",
      "address": 586,
      "title": "SPELL",
      "author": "Uri Shaked",
      "description": "SPELL is a minimal, cryptic, stack-based programming language crafted for The Skull CTF",
      "clock_hz": 10000000,
      "tiles": "6x2",
      "analog_pins": [],
      "repo": "https://github.com/urish/ttihp-spell",
      "commit": "f5d0e28026c7b9b4959c128c03d16d48d3b6350d",
      "pinout": {
        "ui[0]": "run",
        "ui[1]": "step",
        "ui[2]": "load",
        "ui[3]": "dump",
        "ui[4]": "shift_in",
        "ui[5]": "reg_sel[0]",
        "ui[6]": "reg_sel[1]",
        "ui[7]": "",
        "uo[0]": "sleep/porta[0]",
        "uo[1]": "stop/porta[1]",
        "uo[2]": "wait_delay/porta[2]",
        "uo[3]": "shift_out/porta[3]",
        "uo[4]": "porta[4]",
        "uo[5]": "porta[5]",
        "uo[6]": "porta[6]",
        "uo[7]": "porta[7]",
        "uio[0]": "portb[0]",
        "uio[1]": "portb[1]",
        "uio[2]": "portb[2]",
        "uio[3]": "portb[3]",
        "uio[4]": "portb[4]",
        "uio[5]": "portb[5]",
        "uio[6]": "portb[6]",
        "uio[7]": "portb[7]"
      }
    },
    {
      "macro": "tt_um_urish_sram_test",
      "address": 167,
      "title": "SRAM (1024x8) test",
      "author": "Uri Shaked",
      "description": "Tests the foundry provided SRAM macro",
      "clock_hz": 0,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/urish/ttihp-sram-test",
      "commit": "2632a9900f668e66340abd46a1452736d07a29c1",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "addr[4]",
        "ui[5]": "addr[5]",
        "ui[6]": "bank_sel",
        "ui[7]": "wen",
        "uo[0]": "dout[0]",
        "uo[1]": "dout[1]",
        "uo[2]": "dout[2]",
        "uo[3]": "dout[3]",
        "uo[4]": "dout[4]",
        "uo[5]": "dout[5]",
        "uo[6]": "dout[6]",
        "uo[7]": "dout[7]",
        "uio[0]": "din[0]/addr[6]",
        "uio[1]": "din[1]/addr[7]",
        "uio[2]": "din[2]/addr[8]",
        "uio[3]": "din[3]/addr[9]",
        "uio[4]": "din[4]",
        "uio[5]": "din[5]",
        "uio[6]": "din[6]",
        "uio[7]": "din[7]"
      }
    },
    {
      "macro": "tt_um_vc32_cpu",
      "address": 522,
      "title": "VC 16-bit CPU",
      "author": "Paul Campbell",
      "description": "VC 16-bit CPU - RISV-C cpu",
      "clock_hz": 0,
      "tiles": "6x2",
      "analog_pins": [],
      "repo": "https://github.com/MoonbaseOtago/ttihp-vc16",
      "commit": "3346242823b5e2a13688a709d8b8e0de9802acad",
      "pinout": {
        "ui[0]": "ReadData0",
        "ui[1]": "ReadData1",
        "ui[2]": "ReadData2",
        "ui[3]": "ReadData3",
        "ui[4]": "ReadData4",
        "ui[5]": "ReadData5",
        "ui[6]": "ReadData6",
        "ui[7]": "ReadData7",
        "uo[0]": "AddressData0",
        "uo[1]": "AddressData1",
        "uo[2]": "AddressData2",
        "uo[3]": "AddressData3",
        "uo[4]": "AddressData4",
        "uo[5]": "AddressData5",
        "uo[6]": "AddressData6",
        "uo[7]": "AddressData7",
        "uio[0]": "AddressLSB",
        "uio[1]": "WriteStrobe",
        "uio[2]": "AddressLatchHi",
        "uio[3]": "AddressLatchLo",
        "uio[4]": "unused4",
        "uio[5]": "unused5",
        "uio[6]": "unused6",
        "uio[7]": "InterruptIn"
      }
    },
    {
      "macro": "tt_um_vga_clock",
      "address": 513,
      "title": "VGA clock",
      "author": "Matt Venn",
      "description": "Shows the time on a VGA screen",
      "clock_hz": 31500000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/tt08-vga-clock",
      "commit": "26a486fb8f4e61ebe987e1ab5f80ba0bb44d7787",
      "pinout": {
        "ui[0]": "adjust hours",
        "ui[1]": "adjust minutes",
        "ui[2]": "adjust seconds",
        "ui[3]": "PMOD type select",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "hsync / R1",
        "uo[1]": "vsync / G1",
        "uo[2]": "B0 / B1",
        "uo[3]": "B1 / VS",
        "uo[4]": "G0 / R0",
        "uo[5]": "G1 / G0",
        "uo[6]": "R0 / B0",
        "uo[7]": "R1 / HS",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_vga_glyph_mode",
      "address": 547,
      "title": "Glyph Mode",
      "author": "James Ross",
      "description": "Submission for VGA Demoscene",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttihp0p2-demo-glyph",
      "commit": "772f8b40e954f46dfc94024abf724d9172cf021f",
      "pinout": {
        "ui[0]": "Palette 0",
        "ui[1]": "Palette 1",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_392873974467527681",
      "address": 421,
      "title": "PILIPINASLASALLE",
      "author": "Alexander Co Abad and Dino Dominic Ligutan",
      "description": "7-seg Display for PILIPINASLASALLE",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/alexandercoabad/PILIPINASLASALLE",
      "commit": "bb1f9cab25e9d5855a2616671c04473fc818b493",
      "pinout": {
        "ui[0]": "BCD Bit 3 (A)",
        "ui[1]": "BCD Bit 2 (A)",
        "ui[2]": "BCD Bit 1 (A)",
        "ui[3]": "BCD Bit 0 (A)",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "Manual Input Mode",
        "uo[0]": "segment a",
        "uo[1]": "segment b",
        "uo[2]": "segment c",
        "uo[3]": "segment d",
        "uo[4]": "segment e",
        "uo[5]": "segment f",
        "uo[6]": "segment g",
        "uo[7]": "segment dp",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_407306064811090945",
      "address": 550,
      "title": "DDR throughput and flop aperature test",
      "author": "Darryl Miles project from Eric Smith",
      "description": "Grab data on every edge of clock with varying pos pulse width",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dlmiles/ttihp0p2-ddr-throughput-test",
      "commit": "08759f2e61f44df21e0c51d635600d4774c612e5",
      "pinout": {
        "ui[0]": "pulse = 1 inv",
        "ui[1]": "pulse = 3 inv",
        "ui[2]": "pulse = 5 inv",
        "ui[3]": "pulse = 7 inv",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "q for pulse = 1 inv",
        "uo[1]": "q for pulse = 3 inv ",
        "uo[2]": "q for pulse = 5 inv",
        "uo[3]": "q for pulse = 7 inv",
        "uo[4]": "q for normal flop",
        "uo[5]": "1",
        "uo[6]": "1",
        "uo[7]": "clk",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_z2a_rgb_mixer",
      "address": 515,
      "title": "RGB Mixer demo",
      "author": "Matt Venn",
      "description": "Zero to ASIC demo project",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/tt08-rgb-mixer",
      "commit": "1d87ce74c936a2e8187c352aed0691495d526cbf",
      "pinout": {
        "ui[0]": "enc0 a",
        "ui[1]": "enc0 b",
        "ui[2]": "enc1 a",
        "ui[3]": "enc1 b",
        "ui[4]": "enc2 a",
        "ui[5]": "enc2 b",
        "ui[6]": "debug bit 0",
        "ui[7]": "debug bit 1",
        "uo[0]": "pwm0",
        "uo[1]": "pwm1",
        "uo[2]": "pwm2",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "encoder bit 0",
        "uio[1]": "encoder bit 1",
        "uio[2]": "encoder bit 2",
        "uio[3]": "encoder bit 3",
        "uio[4]": "encoder bit 4",
        "uio[5]": "encoder bit 5",
        "uio[6]": "encoder bit 6",
        "uio[7]": "encoder bit 7"
      }
    }
  ]
}