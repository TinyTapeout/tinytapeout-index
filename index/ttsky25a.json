{
  "version": 3,
  "id": "ttsky25a",
  "name": "Tiny Tapeout SKY 25a",
  "repo": "https://github.com/TinyTapeout/tinytapeout-sky-25a",
  "commit": "82845b1a51b80fb18d966b82626e4d6cafed1b62",
  "updated": "2025-09-16T08:26:50Z",
  "projects": [
    {
      "macro": "tt_um_10_vga_crossyroad",
      "address": 907,
      "title": "Crossyroad",
      "author": "Matt, Jovan, Ryan",
      "description": "Crossyroad game recreated on an ASIC",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mchen26/tt10-vga-crossyroad",
      "commit": "6580efb4dfa115e1648795e98d3a56df65ba5212",
      "pinout": {
        "ui[0]": "move_btn",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "red",
        "uo[1]": "green",
        "uo[2]": "blue",
        "uo[3]": "vsync",
        "uo[4]": "red",
        "uo[5]": "green",
        "uo[6]": "blue",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_13hihi31_tdc",
      "address": 513,
      "title": "Time to Digital Converter",
      "author": "Jeremiasz Hauck",
      "description": "Phase difference measuring circuit with digital output",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11
      ],
      "repo": "https://github.com/13hihi31/tt09-analog-tdc",
      "commit": "deefa7b3226d3419c4dee03fefa12a90d651935e",
      "pinout": {
        "ui[0]": "stop fine delay 0",
        "ui[1]": "stop fine delay 1",
        "ui[2]": "stop fine delay 2",
        "ui[3]": "stop fine delay 3",
        "ui[4]": "stop coarse delay 4",
        "ui[5]": "stop coarse delay 3",
        "ui[6]": "stop coarse delay 2",
        "ui[7]": "stop coarse delay 1",
        "uo[0]": "tdc bit 0",
        "uo[1]": "tdc bit 1",
        "uo[2]": "tdc bit 2",
        "uo[3]": "tdc bit 3",
        "uo[4]": "tdc bit 4",
        "uo[5]": "tdc bit 5",
        "uo[6]": "tdc bit 6",
        "uo[7]": "tdc bit 7",
        "uio[0]": "stop coarse delay 0",
        "uio[1]": "start fine delay 0",
        "uio[2]": "start fine delay 1",
        "uio[3]": "start fine delay 2",
        "uio[4]": "start fine delay 3",
        "uio[5]": "start enable",
        "uio[6]": "start",
        "uio[7]": "",
        "ua[0]": "analog delay",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_2048_vga_game",
      "address": 514,
      "title": "2048 sliding tile puzzle game (VGA)",
      "author": "Uri Shaked",
      "description": "Slide numbered tiles on a grid to combine them to create a tile with the number 2048.",
      "clock_hz": 25175000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt-2048-game",
      "commit": "5323a03310754ce15420a32ef991d9fd1353e51e",
      "pinout": {
        "ui[0]": "btn_up",
        "ui[1]": "btn_down",
        "ui[2]": "btn_left",
        "ui[3]": "btn_right",
        "ui[4]": "gamepad_latch",
        "ui[5]": "gamepad_clk",
        "ui[6]": "gamepad_data",
        "ui[7]": "debug_mode",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "debug_cmd",
        "uio[1]": "debug_cmd",
        "uio[2]": "debug_cmd",
        "uio[3]": "debug_cmd",
        "uio[4]": "debug_data",
        "uio[5]": "debug_data",
        "uio[6]": "debug_data",
        "uio[7]": "debug_data"
      }
    },
    {
      "macro": "tt_um_32_bit_fp_ALU_S_M",
      "address": 428,
      "title": "32-bit floating point ALU",
      "author": "Sean and Maxwell",
      "description": "Support 32-bit add and subtract",
      "clock_hz": 20000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/maxlou05/FP32-Adder",
      "commit": "669bdf38fe25aa5f6d323c21cef97f8aed1ffe74",
      "pinout": {
        "ui[0]": "input_byte[0]",
        "ui[1]": "input_byte[1]",
        "ui[2]": "input_byte[2]",
        "ui[3]": "input_byte[3]",
        "ui[4]": "input_byte[4]",
        "ui[5]": "input_byte[5]",
        "ui[6]": "input_byte[6]",
        "ui[7]": "input_byte[7]",
        "uo[0]": "output_byte[0]",
        "uo[1]": "output_byte[1]",
        "uo[2]": "output_byte[2]",
        "uo[3]": "output_byte[3]",
        "uo[4]": "output_byte[4]",
        "uo[5]": "output_byte[5]",
        "uo[6]": "output_byte[6]",
        "uo[7]": "output_byte[7]",
        "uio[0]": "(input)  op_code[0]",
        "uio[1]": "(input)  op_code[1]",
        "uio[2]": "(input)  start",
        "uio[3]": "(output) done",
        "uio[4]": "(output) state[0]",
        "uio[5]": "(output) state[1]",
        "uio[6]": "(output) state[2]",
        "uio[7]": "(output) state[3]"
      }
    },
    {
      "macro": "tt_um_3v_inverter_SiliconeGuide",
      "address": 523,
      "title": "Inverter_3v",
      "author": "Andrew Parra",
      "description": "An inverter but it can handle 3.3V",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        10,
        11
      ],
      "repo": "https://github.com/SiliconeGuide/tt_um_3v_inverter_SiliconeGuide",
      "commit": "d660cb26ab018a2ccaa5c0d534323434df67b68c",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "output",
        "ua[1]": "input",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_6502",
      "address": 332,
      "title": "Simplified 6502 Processor",
      "author": "Sanjay Jayaram, Sri Charan Tadepalli, Dennis Chen",
      "description": "A Simplified 6502 processor that does less than the original",
      "clock_hz": 40000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/sanjaycal/ECE298A-6502-SKY",
      "commit": "91f3f1aab34facaa37d85a8bc6b667f3ac09719a",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "addr 0/8",
        "uo[1]": "addr 1/9",
        "uo[2]": "addr 2/10",
        "uo[3]": "addr 3/11",
        "uo[4]": "addr 4/12",
        "uo[5]": "addr 5/13",
        "uo[6]": "addr 6/14",
        "uo[7]": "addr 7/15",
        "uio[0]": "data 0",
        "uio[1]": "data 1",
        "uio[2]": "data 2",
        "uio[3]": "data 3",
        "uio[4]": "data 4",
        "uio[5]": "data 5",
        "uio[6]": "data 6",
        "uio[7]": "data 7"
      }
    },
    {
      "macro": "tt_um_7FM_ShadyPong",
      "address": 674,
      "title": "ShadyPong",
      "author": "7FM",
      "description": "Shady Pong implementation",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/7FM/ShadyPongTinytapeout",
      "commit": "94860a4be423f5031f0fac72ae23139fbf3e1b3c",
      "pinout": {
        "ui[0]": "Player1Up",
        "ui[1]": "Player1Down",
        "ui[2]": "Player2Up",
        "ui[3]": "Player2Down",
        "ui[4]": "ForceFallbackSpeed",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "ballSpeed[0]",
        "uio[1]": "ballSpeed[1]",
        "uio[2]": "ballSpeed[2]",
        "uio[3]": "ballSpeed[3]",
        "uio[4]": "playerSpeed[0]",
        "uio[5]": "playerSpeed[1]",
        "uio[6]": "playerSpeed[2]",
        "uio[7]": "playerSpeed[3]"
      }
    },
    {
      "macro": "tt_um_8bitalu",
      "address": 165,
      "title": "8-bit Pipelined ALU",
      "author": "Pathan Rehman Ahmed Khan",
      "description": "A 8-bit fully pipelined ALU with multiply/divide, barrel shifter, and advanced flag/pipeline logic",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/pathanrehman/tt_um_8bitALU",
      "commit": "3fc01cab97c411d9dd6a9ff9ea7d93630932d61b",
      "pinout": {
        "ui[0]": "ALU_DATA_0",
        "ui[1]": "ALU_DATA_1",
        "ui[2]": "ALU_DATA_2",
        "ui[3]": "ALU_DATA_3",
        "ui[4]": "ALU_DATA_4",
        "ui[5]": "ALU_DATA_5",
        "ui[6]": "ALU_DATA_6",
        "ui[7]": "ALU_DATA_7",
        "uo[0]": "RESULT_0",
        "uo[1]": "RESULT_1",
        "uo[2]": "RESULT_2",
        "uo[3]": "RESULT_3",
        "uo[4]": "RESULT_4",
        "uo[5]": "RESULT_5",
        "uo[6]": "RESULT_6",
        "uo[7]": "RESULT_7",
        "uio[0]": "OPERAND_B_0",
        "uio[1]": "OPERAND_B_1",
        "uio[2]": "OPERAND_B_2",
        "uio[3]": "ALU_OP_0",
        "uio[4]": "ALU_OP_1",
        "uio[5]": "ALU_OP_2",
        "uio[6]": "FLAGS_OUT",
        "uio[7]": "PIPELINE_EN"
      }
    },
    {
      "macro": "tt_um_Alida_DutyCycleMeter",
      "address": 169,
      "title": "Duty Cycle Meter",
      "author": "Alida Bruka",
      "description": "This system checks for an input PWM signal and outputs its duty cycle from 0 to 127",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Elettronica-UnivAQ/ttsky_DutyCycleMeter",
      "commit": "fdf01b256806e698d233974b09dcb48a84035a12",
      "pinout": {
        "ui[0]": "sign in",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "duty_cycle[0]",
        "uo[1]": "duty_cycle[1]",
        "uo[2]": "duty_cycle[2]",
        "uo[3]": "duty_cycle[3]",
        "uo[4]": "duty_cycle[4]",
        "uo[5]": "duty_cycle[5]",
        "uo[6]": "duty_cycle[6]",
        "uo[7]": "valid",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_AriaMitraClock",
      "address": 160,
      "title": "12 Hour Clock (with AM and PM)",
      "author": "Aria Mitra",
      "description": "This is basically just a twelve hour clock with an AM/PM indicator.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/AriaMitra/ttsky_verilog-submission-12HRCLOCK",
      "commit": "04eeab13c5c9d182027438ab7c0c65ebb315479d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "ena (when the clock should increment - every second)",
        "ui[6]": "reset (whether or not to restart the clock)",
        "ui[7]": "clk",
        "uo[0]": "Hour",
        "uo[1]": "Hour",
        "uo[2]": "Hour",
        "uo[3]": "Hour",
        "uo[4]": "Hour",
        "uo[5]": "Hour",
        "uo[6]": "Hour",
        "uo[7]": "AM/PM",
        "uio[0]": "Minute",
        "uio[1]": "Minute",
        "uio[2]": "Minute",
        "uio[3]": "Minute",
        "uio[4]": "Minute",
        "uio[5]": "Minute",
        "uio[6]": "Minute",
        "uio[7]": "Minute"
      }
    },
    {
      "macro": "tt_um_AriaMitraGames",
      "address": 426,
      "title": "Games (Tic Tac Toe and Rock Paper Scissors)",
      "author": "Aria Mitra",
      "description": "This is a chip that can allow people to play one of two games: tic tac toe or rock paper scissors",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/AriaMitra/ttsky_verilog-submission-games",
      "commit": "a03a12d8941238f4b87966662ebcc9abfc4b3349",
      "pinout": {
        "ui[0]": "Game Type (0 is tic tactoe, 1 is rock paper scissors)",
        "ui[1]": "User Input for Rock Paper Scissors",
        "ui[2]": "User Input for Rock Paper Scissors",
        "ui[3]": "Move Position (index of spot)",
        "ui[4]": "Move Position (index of spot)",
        "ui[5]": "Move Position (index of spot)",
        "ui[6]": "Move Position (index of spot)",
        "ui[7]": "Move Valid",
        "uo[0]": "Rock Paper Scissors Winner",
        "uo[1]": "Rock Paper Scissors Winner",
        "uo[2]": "Current Player (TTT)",
        "uo[3]": "Current Player (TTT)",
        "uo[4]": "Tic Tac Toe Winner",
        "uo[5]": "Tic Tac Toe Winner",
        "uo[6]": "Tic Tac Toe Draw",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_BMSCE_T2",
      "address": 558,
      "title": "Choreo8",
      "author": "BMSCE_T2",
      "description": "A playful 8-LED choreographer \u2013 Knight Rider, waves, sparkles, and more.",
      "clock_hz": 5000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/R0h1th-1DD4E2/BMSCE_T02",
      "commit": "79d0b75b5f9cb9cf9a72ea97f1be5d631cefd5ad",
      "pinout": {
        "ui[0]": "pat_sel[0]",
        "ui[1]": "pat_sel[1]",
        "ui[2]": "pat_sel[2]",
        "ui[3]": "speed_sel",
        "ui[4]": "pause",
        "ui[5]": "en",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "led_out[0]",
        "uo[1]": "led_out[1]",
        "uo[2]": "led_out[2]",
        "uo[3]": "led_out[3]",
        "uo[4]": "led_out[4]",
        "uo[5]": "led_out[5]",
        "uo[6]": "led_out[6]",
        "uo[7]": "led_out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_BNN",
      "address": 416,
      "title": "8-bit Binary Neural Network",
      "author": "Vivi Huang",
      "description": "8-neuron BNN program with line feature recognization, supports serial weight loading",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Ctr-cv/ECE298A_BNN_2",
      "commit": "0ae3b06b3955c5c680240f925b2aa843d2f1465d",
      "pinout": {
        "ui[0]": "in_0",
        "ui[1]": "in_1",
        "ui[2]": "in_2",
        "ui[3]": "in_3",
        "ui[4]": "in_4",
        "ui[5]": "in_5",
        "ui[6]": "in_6",
        "ui[7]": "in_7",
        "uo[0]": "out_0",
        "uo[1]": "out_1",
        "uo[2]": "out_2",
        "uo[3]": "out_3",
        "uo[4]": "out_4",
        "uo[5]": "out_5",
        "uo[6]": "out_6",
        "uo[7]": "out_7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "bi_3",
        "uio[4]": "bi_4",
        "uio[5]": "bi_5",
        "uio[6]": "bi_6",
        "uio[7]": "bi_7"
      }
    },
    {
      "macro": "tt_um_BryanKuang_mac_peripheral",
      "address": 425,
      "title": "8-bit Multiply-Accumulate (MAC) with 2-Cycle Serial Interface",
      "author": "Bryan Kuang",
      "description": "An 8\u00d78\u219216-bit multiply-accumulate unit with 2-cycle 8-bit serial interface, supporting signed/unsigned operations with overflow detection and clear functionality",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Bryan-Kuang/ECE298A-sky130",
      "commit": "a67ef5fe8a08b0b50a697239661fac50869fca13",
      "pinout": {
        "ui[0]": "Data[7:0] - 8-bit data input (Cycle 1: Data A, Cycle 2: Data B)",
        "ui[1]": "Data[7:0] - 8-bit data input (Cycle 1: Data A, Cycle 2: Data B)",
        "ui[2]": "Data[7:0] - 8-bit data input (Cycle 1: Data A, Cycle 2: Data B)",
        "ui[3]": "Data[7:0] - 8-bit data input (Cycle 1: Data A, Cycle 2: Data B)",
        "ui[4]": "Data[7:0] - 8-bit data input (Cycle 1: Data A, Cycle 2: Data B)",
        "ui[5]": "Data[7:0] - 8-bit data input (Cycle 1: Data A, Cycle 2: Data B)",
        "ui[6]": "Data[7:0] - 8-bit data input (Cycle 1: Data A, Cycle 2: Data B)",
        "ui[7]": "Data[7:0] - 8-bit data input (Cycle 1: Data A, Cycle 2: Data B)",
        "uo[0]": "Result[7:0] - 8-bit data output (cycles between low/high bytes)",
        "uo[1]": "Result[7:0] - 8-bit data output (cycles between low/high bytes)",
        "uo[2]": "Result[7:0] - 8-bit data output (cycles between low/high bytes)",
        "uo[3]": "Result[7:0] - 8-bit data output (cycles between low/high bytes)",
        "uo[4]": "Result[7:0] - 8-bit data output (cycles between low/high bytes)",
        "uo[5]": "Result[7:0] - 8-bit data output (cycles between low/high bytes)",
        "uo[6]": "Result[7:0] - 8-bit data output (cycles between low/high bytes)",
        "uo[7]": "Result[7:0] - 8-bit data output (cycles between low/high bytes)",
        "uio[0]": "Clear_and_Mult (IN) / Overflow (OUT) - Control input or overflow flag output",
        "uio[1]": "Enable (IN) / Data_Ready (OUT) - Interface enable input or data ready output",
        "uio[2]": "Signed_Mode (IN) - Signed mode control (0=unsigned, 1=signed)",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_DAC1",
      "address": 774,
      "title": "tt_um_DAC1",
      "author": "cicciopanza&lorij",
      "description": "dac4bit",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        10
      ],
      "repo": "https://github.com/Elettronica-UnivAQ/DAC",
      "commit": "b333b2d5164c0e9f73db19a57ac0a5d84969fa77",
      "pinout": {
        "ui[0]": "D3",
        "ui[1]": "D2",
        "ui[2]": "D1",
        "ui[3]": "D0",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "OUT",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_DalinEM_asic_1",
      "address": 494,
      "title": "ASIC",
      "author": "Dalin",
      "description": "ASIC",
      "clock_hz": 0,
      "tiles": "2x2",
      "analog_pins": [
        5,
        0,
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/DalinEM-lab/tt_um_DalinEM_asic_1",
      "commit": "47da0cf17548619a964a990dd707b67a1f324d51",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "VGND",
        "uo[1]": "VGND",
        "uo[2]": "VGND",
        "uo[3]": "VGND",
        "uo[4]": "VGND",
        "uo[5]": "VGND",
        "uo[6]": "VGND",
        "uo[7]": "VGND",
        "uio[0]": "VGND",
        "uio[1]": "VGND",
        "uio[2]": "VGND",
        "uio[3]": "VGND",
        "uio[4]": "VGND",
        "uio[5]": "VGND",
        "uio[6]": "VGND",
        "uio[7]": "VGND",
        "ua[0]": "LED",
        "ua[1]": "vsen",
        "ua[2]": "Vled",
        "ua[3]": "S1",
        "ua[4]": "S0",
        "ua[5]": "S"
      }
    },
    {
      "macro": "tt_um_DelosReyesJordan_HDL",
      "address": 173,
      "title": "Reaction Time Test",
      "author": "Jordan Delos Reyes",
      "description": "Test to measure human reaction speed using an LED and button",
      "clock_hz": 25000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/DelosReyesJordan/tt_sky_DelosReyesJordan_ReactionTimeTest",
      "commit": "1c04b3fc373e16142bf9b5b3860fc5f63d0c1da2",
      "pinout": {
        "ui[0]": "start_btn",
        "ui[1]": "react_btn",
        "ui[2]": "reset_btn",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "led",
        "uo[1]": "seg[0]",
        "uo[2]": "seg[1]",
        "uo[3]": "seg[2]",
        "uo[4]": "seg[3]",
        "uo[5]": "seg[4]",
        "uo[6]": "seg[5]",
        "uo[7]": "seg[6]",
        "uio[0]": "an[0]",
        "uio[1]": "an[1]",
        "uio[2]": "an[2]",
        "uio[3]": "an[3]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_Enhanced_pll",
      "address": 292,
      "title": "Compact Phased Locked Loop for NextGen SOC",
      "author": "CUTM",
      "description": "4-channel fractional-N frequency synthesizer",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tapeoutcutm/Compact-Phased-Locked-Loop-for-NextGen-SOC-Final",
      "commit": "70f32ec5d3de7a707119feb189aac13e4ca6847f",
      "pinout": {
        "ui[0]": "csr_data_in[0]: Data input for PLL control registers",
        "ui[1]": "csr_data_in[1]: Data input for PLL control registers",
        "ui[2]": "csr_data_in[2]: Data input for PLL control registers",
        "ui[3]": "csr_data_in[3]: Data input for PLL control registers",
        "ui[4]": "csr_addr_in[0]: Address input for PLL control registers",
        "ui[5]": "csr_addr_in[1]: Address input for PLL control registers",
        "ui[6]": "csr_addr_in[2]: Address input for PLL control registers",
        "ui[7]": "csr_addr_in[3]: Address input for PLL control registers",
        "uo[0]": "clk_out[0]: Channel 0 PLL clock output",
        "uo[1]": "clk_out[1]: Channel 1 PLL clock output",
        "uo[2]": "clk_out[2]: Channel 2 PLL clock output",
        "uo[3]": "clk_out[3]: Channel 3 PLL clock output",
        "uo[4]": "adc_out: Channel 0 control voltage ADC output",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "clk_csr: Clock input for PLL control registers",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_FFT_engine",
      "address": 430,
      "title": "FFT Engine",
      "author": "Mariam ElSahhar, Hadi Zaidi",
      "description": "4 bit FFT engine",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mariamelsahharr/ece298a-fft-engine-SKY",
      "commit": "7c63b66712ba434b4d52d8ce840d53766e49380f",
      "pinout": {
        "ui[0]": "LOAD_BTN",
        "ui[1]": "OUTPUT_BTN",
        "ui[2]": "Unused",
        "ui[3]": "Unused",
        "ui[4]": "Unused",
        "ui[5]": "Unused",
        "ui[6]": "Unused",
        "ui[7]": "Unused",
        "uo[0]": "SEG_0",
        "uo[1]": "SEG_1",
        "uo[2]": "SEG_2",
        "uo[3]": "SEG_3",
        "uo[4]": "SEG_4",
        "uo[5]": "SEG_5",
        "uo[6]": "SEG_6",
        "uo[7]": "SEG_7",
        "uio[0]": "DATA_0 (sample input / FFT output) (bits 7:4 = real, bits 3:0 = imag for output)",
        "uio[1]": "DATA_1",
        "uio[2]": "DATA_2",
        "uio[3]": "DATA_3",
        "uio[4]": "DATA_4",
        "uio[5]": "DATA_5",
        "uio[6]": "DATA_6",
        "uio[7]": "DATA_7"
      }
    },
    {
      "macro": "tt_um_IZ_RG_22",
      "address": 714,
      "title": "IZ_RG_22",
      "author": "Torres",
      "description": "Modified Izhikevich Equation Implemented in 22-Bit for Capturing All Original Izhikevich Behaviors",
      "clock_hz": 10000000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/Bondrewd117/tt_um_IZ_RG_22",
      "commit": "2496bf2174eac98d11d620e4c8bd07be92c7c60d",
      "pinout": {
        "ui[0]": "select0",
        "ui[1]": "select1",
        "ui[2]": "select2",
        "ui[3]": "I0",
        "ui[4]": "I1",
        "ui[5]": "I2",
        "ui[6]": "I3",
        "ui[7]": "I4",
        "uo[0]": "V_out0",
        "uo[1]": "V_out1",
        "uo[2]": "V_out2",
        "uo[3]": "V_out3",
        "uo[4]": "V_out4",
        "uo[5]": "V_out5",
        "uo[6]": "V_out6",
        "uo[7]": "V_out7",
        "uio[0]": "U_out0",
        "uio[1]": "U_out1",
        "uio[2]": "U_out2",
        "uio[3]": "U_out3",
        "uio[4]": "U_out4",
        "uio[5]": "U_out5",
        "uio[6]": "U_out6",
        "uio[7]": "U_out7"
      }
    },
    {
      "macro": "tt_um_LIF_neuron",
      "address": 458,
      "title": "AFM_LIF",
      "author": "Haihang Xia",
      "description": "Hardware implementation of approximate computing based LIF neuron model",
      "clock_hz": 1000000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/Haihang-Xia/AFM_LIF_Tiny_Tapeout",
      "commit": "d69e9d8f1e99c738cd75f7c932bb12fd2c3afbc6",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_in[0],uio_out[0]",
        "uio[1]": "uio_in[1],uio_out[1]",
        "uio[2]": "uio_in[2],uio_out[2]",
        "uio[3]": "uio_in[3],uio_out[3]",
        "uio[4]": "uio_in[4],uio_out[4]",
        "uio[5]": "uio_in[5],uio_out[5]",
        "uio[6]": "uio_in[6],uio_out[6]",
        "uio[7]": "uio_in[7],uio_out[7]"
      }
    },
    {
      "macro": "tt_um_LPCAS_TP1",
      "address": 229,
      "title": " LPCAS_TP1 ",
      "author": "Nithin P, Kartikeya Tripathi, Madhav Pathak",
      "description": " This Project has been done by LPCAS@IIT Gandhinagar Lab under the supervision of Prof. Madhav Pathak",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        0,
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/Low-Power-Circuits-IoT-Systems-Group/LPCAS_TP1",
      "commit": "745846a9718420e1c0f8611591cdc4ba36bdd5c4",
      "pinout": {
        "ui[0]": "EN",
        "ui[1]": "EN_EXT",
        "ui[2]": "EN1",
        "ui[3]": "EN_EXT1",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "VDD",
        "ua[1]": "VOUT",
        "ua[2]": "VDD_STRP",
        "ua[3]": "VDD2",
        "ua[4]": "VOUT2",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_Maj_opamp",
      "address": 261,
      "title": "2-Stage OpAmp Design",
      "author": "Majid Sami",
      "description": "this project was designed by Majid Sami ALakl from TT08 shuttle, done by instructor Vipul Sharma",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        7,
        9,
        8
      ],
      "repo": "https://github.com/Eng-SaeedAlahmari/tt_um_Maj_opamp",
      "commit": "9479a983b06cb3f67142294765f80317a85fdd12",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "OUT_Maj",
        "ua[1]": "INN",
        "ua[2]": "INP",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_MichaelBell_hs_mul",
      "address": 876,
      "title": "8b10b decoder and multiplier",
      "author": "Mike Bell",
      "description": "Test for high speed cell library - 8b10b decoder and multiplier",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/tt09-8b10b-decoder",
      "commit": "54845edeb89e0ec492adfa0582742119fac0a64e",
      "pinout": {
        "ui[0]": "A 8b10b in",
        "ui[1]": "B 8b10b in",
        "ui[2]": "Decoder status",
        "ui[3]": "Multiply result",
        "ui[4]": "Multiply result (update gated)",
        "ui[5]": "Decoded values (registered)",
        "ui[6]": "Decoded values (unregistered)",
        "ui[7]": "Bidir output enable",
        "uo[0]": "Out 0",
        "uo[1]": "Out 1",
        "uo[2]": "Out 2",
        "uo[3]": "Out 3",
        "uo[4]": "Out 4",
        "uo[5]": "Out 5",
        "uo[6]": "Out 6",
        "uo[7]": "Out 7",
        "uio[0]": "Out 8",
        "uio[1]": "Out 9",
        "uio[2]": "Out 10",
        "uio[3]": "Out 11",
        "uio[4]": "Out 12",
        "uio[5]": "Out 13",
        "uio[6]": "Out 14",
        "uio[7]": "Out 15"
      }
    },
    {
      "macro": "tt_um_MichaelBell_mandelbrot",
      "address": 266,
      "title": "VGA Mandelbrot",
      "author": "Mike Bell",
      "description": "Mandelbrot on VGA, racing the beam",
      "clock_hz": 100000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/tt08-mandelbrot",
      "commit": "c1644c8feae6fdf4f0d76114e2a361654e785504",
      "pinout": {
        "ui[0]": "Ctrl 0",
        "ui[1]": "Ctrl 1",
        "ui[2]": "Ctrl 2",
        "ui[3]": "Input 0",
        "ui[4]": "Input 1",
        "ui[5]": "Input 2",
        "ui[6]": "Input 3",
        "ui[7]": "Input 4",
        "uo[0]": "R[1]",
        "uo[1]": "G[1]",
        "uo[2]": "B[1]",
        "uo[3]": "vsync",
        "uo[4]": "R[0]",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "Input 5",
        "uio[1]": "Input 6",
        "uio[2]": "Input 7",
        "uio[3]": "Input 8",
        "uio[4]": "Input 9",
        "uio[5]": "Input 10",
        "uio[6]": "Input 11",
        "uio[7]": "Input 12"
      }
    },
    {
      "macro": "tt_um_MichaelBell_rle_vga",
      "address": 973,
      "title": "RLE Video Player",
      "author": "Mike Bell",
      "description": "Reads run length encoded data from QSPI flash, displays on VGA",
      "clock_hz": 24000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/tt09-rle-vga",
      "commit": "f432bf60b6c9c29653fb6a307d741fc6c26792f1",
      "pinout": {
        "ui[0]": "SPI latency[0]",
        "ui[1]": "SPI latency[1]",
        "ui[2]": "SPI latency[2]",
        "ui[3]": "Select QSPI pinout",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R[1]",
        "uo[1]": "G[1]",
        "uo[2]": "B[1]",
        "uo[3]": "vsync",
        "uo[4]": "R[0]",
        "uo[5]": "G[0]",
        "uo[6]": "B[0]",
        "uo[7]": "hsync",
        "uio[0]": "CS",
        "uio[1]": "SD0 / SCK",
        "uio[2]": "SD1 / SD0",
        "uio[3]": "SCK / SD1",
        "uio[4]": "SD2",
        "uio[5]": "SD3",
        "uio[6]": "Unused CS",
        "uio[7]": "PWM audio"
      }
    },
    {
      "macro": "tt_um_NE567Mixer28",
      "address": 522,
      "title": "OTA folded cascode",
      "author": "Davide Ianni",
      "description": "1.8V OTA folded cascode",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        7,
        9,
        8
      ],
      "repo": "https://github.com/Elettronica-UnivAQ/tt10-OTA_FC",
      "commit": "13bb555c60f222155ff55ceb516e1d1df20644d4",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "OUT",
        "ua[1]": "INm",
        "ua[2]": "INp",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_Richard28277",
      "address": 556,
      "title": "4-bit ALU",
      "author": "CNMN-IPN ChipPractice 2025 IEEE-EDS",
      "description": "The 4-bit ALU is designed to perform basic arithmetic and logical operations on 4-bit binary numbers based on TT08 Richard Xu et al",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jedicomo/IPN_Abril_1",
      "commit": "6d967fdf8d82d35220b5fb072e88796a64ba4584",
      "pinout": {
        "ui[0]": "a[0]",
        "ui[1]": "a[1]",
        "ui[2]": "a[2]",
        "ui[3]": "a[3]",
        "ui[4]": "b[0]",
        "ui[5]": "b[1]",
        "ui[6]": "b[2]",
        "ui[7]": "b[3]",
        "uo[0]": "result[0]",
        "uo[1]": "result[1]",
        "uo[2]": "result[2]",
        "uo[3]": "result[3]",
        "uo[4]": "result[4]",
        "uo[5]": "result[5]",
        "uo[6]": "result[6]",
        "uo[7]": "result[7]",
        "uio[0]": "opcode[0]",
        "uio[1]": "opcode[1]",
        "uio[2]": "opcode[2]",
        "uio[3]": "opcode[3]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "carry_out",
        "uio[7]": "overflow"
      }
    },
    {
      "macro": "tt_um_RoyTr16",
      "address": 260,
      "title": "Tiny Connect Four",
      "author": "Roy Treves",
      "description": "A simple connect four game with VGA output",
      "clock_hz": 25000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/RoyTr16/tiny-connect-four",
      "commit": "74749460e1e17ec9b8cdadd7c99581264d5855c7",
      "pinout": {
        "ui[0]": "Key Drop Piece",
        "ui[1]": "Key Move Right",
        "ui[2]": "Key Move Left",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "Debug Mode",
        "uo[0]": "VGA red [1]",
        "uo[1]": "VGA green [1]",
        "uo[2]": "VGA blue [1]",
        "uo[3]": "VGA vsync",
        "uo[4]": "VGA red [0]",
        "uo[5]": "VGA green [0]",
        "uo[6]": "VGA blue [0]",
        "uo[7]": "VGA hsync",
        "uio[0]": "Debug pin / Buzzer",
        "uio[1]": "Debug pin",
        "uio[2]": "Debug pin",
        "uio[3]": "Debug pin",
        "uio[4]": "Debug pin",
        "uio[5]": "Debug pin",
        "uio[6]": "Debug pin",
        "uio[7]": "Debug pin"
      }
    },
    {
      "macro": "tt_um_SNPU",
      "address": 878,
      "title": "random_latch",
      "author": "Laurent Roro",
      "description": "A potentially working random number generator using the unstable state of a latch",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/lerobynetcool/ttsky-verilog-SNPU",
      "commit": "97cd118f2ced1bf2134adef8d1257f7784f92167",
      "pinout": {
        "ui[0]": "freeze",
        "ui[1]": "unused_1",
        "ui[2]": "unused_2",
        "ui[3]": "unused_3",
        "ui[4]": "unused_4",
        "ui[5]": "unused_5",
        "ui[6]": "unused_6",
        "ui[7]": "unused_7",
        "uo[0]": "pssshhh",
        "uo[1]": "randooom",
        "uo[2]": "BRRRRRR",
        "uo[3]": "often",
        "uo[4]": "lottery_winning_number",
        "uo[5]": "0or1",
        "uo[6]": "1or0",
        "uo[7]": "maybe",
        "uio[0]": "sometimes_true",
        "uio[1]": "no_yes_no_yes_no_yes",
        "uio[2]": "asdgfhdskaghk",
        "uio[3]": "error",
        "uio[4]": "defined_as_undefined",
        "uio[5]": "often_false",
        "uio[6]": "noise",
        "uio[7]": "trump_tarifs"
      }
    },
    {
      "macro": "tt_um_Scimia_oscillator_tester",
      "address": 302,
      "title": "Oscillator tester",
      "author": "Pietro Paolo Scimia",
      "description": "a simple frequency meter",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Elettronica-UnivAQ/ttsky_oscillator_tester",
      "commit": "5b2c04cc74714e7af8244182248a1c3bdc6b1769",
      "pinout": {
        "ui[0]": "osc",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "measure[0]",
        "uo[1]": "measure[1]",
        "uo[2]": "measure[2]",
        "uo[3]": "measure[3]",
        "uo[4]": "measure[4]",
        "uo[5]": "measure[5]",
        "uo[6]": "measure[6]",
        "uo[7]": "measure[7]",
        "uio[0]": "data_valid",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_SummerTT_HDL",
      "address": 192,
      "title": "SJSU Summer Project: Game of Life",
      "author": "Nicolas Ojeda",
      "description": "Simulating John Conway Game of Life purely through digital logic.",
      "clock_hz": 25175000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/Thnk189/tt_um_SummerTT_HDL",
      "commit": "463f7728fb619381e425742c7eb3c8ba171db0a9",
      "pinout": {
        "ui[0]": "running",
        "ui[1]": "randomize",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_TT06_pwm",
      "address": 1000,
      "title": "PWM Generator",
      "author": "pravinbaalaa91",
      "description": "PWM generator with duty cycle control via ui_in[6:0]",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/pravinbaalaa91/CF-2024-TT12-06",
      "commit": "8213ccba2e90a93811ea0b40a3536ebf3f5cc303",
      "pinout": {
        "ui[0]": "Duty cycle bit 0",
        "ui[1]": "Duty cycle bit 1",
        "ui[2]": "Duty cycle bit 2",
        "ui[3]": "Duty cycle bit 3",
        "ui[4]": "Duty cycle bit 4",
        "ui[5]": "Duty cycle bit 5",
        "ui[6]": "Duty cycle bit 6",
        "ui[7]": "Unused",
        "uo[0]": "PWM output",
        "uo[1]": "PWM output copy",
        "uo[2]": "Unused",
        "uo[3]": "Unused",
        "uo[4]": "Unused",
        "uo[5]": "Unused",
        "uo[6]": "Unused",
        "uo[7]": "Unused",
        "uio[0]": "Unused",
        "uio[1]": "Unused",
        "uio[2]": "Unused",
        "uio[3]": "Unused",
        "uio[4]": "Unused",
        "uio[5]": "Unused",
        "uio[6]": "Unused",
        "uio[7]": "Unused"
      }
    },
    {
      "macro": "tt_um_TT16",
      "address": 996,
      "title": "Asynchronous FIFO",
      "author": "Priyadharshan, Eshaanjana, Krishnashree, Vignesh ",
      "description": "write(input) and read(output) data at different clocks(wclk & rclk)",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dharsh1727/CF-2024-TT12-16",
      "commit": "abd72ff8dbb09fbd0023e548e9850a50de666f0a",
      "pinout": {
        "ui[0]": "wdata[0]",
        "ui[1]": "wdata[1]",
        "ui[2]": "wdata[2]",
        "ui[3]": "wdata[3]",
        "ui[4]": "winc",
        "ui[5]": "rinc",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "rdata[0]",
        "uo[1]": "rdata[1]",
        "uo[2]": "rdata[2]",
        "uo[3]": "rdata[3]",
        "uo[4]": "full",
        "uo[5]": "empty",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "wclk",
        "uio[1]": "rclk",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_TensorFlowE",
      "address": 138,
      "title": "TensorFlowE",
      "author": "Torres",
      "description": "Multplicador tpu",
      "clock_hz": 10000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/Bondrewd117/tt_um_TensorFlowE",
      "commit": "92bb50aa232266c35cc1d49e50042a39d77b2895",
      "pinout": {
        "ui[0]": "Datos_in_0",
        "ui[1]": "Datos_in_1",
        "ui[2]": "Datos_in_2",
        "ui[3]": "Datos_in_3",
        "ui[4]": "Datos_in_4",
        "ui[5]": "Datos_in_5",
        "ui[6]": "Datos_in_6",
        "ui[7]": "Datos_in_7",
        "uo[0]": "Datos_out_0",
        "uo[1]": "Datos_out_1",
        "uo[2]": "Datos_out_2",
        "uo[3]": "Datos_out_3",
        "uo[4]": "Datos_out_4",
        "uo[5]": "Datos_out_5",
        "uo[6]": "Datos_out_6",
        "uo[7]": "Datos_out_7",
        "uio[0]": "Ena_write",
        "uio[1]": "Ena_read",
        "uio[2]": "clear",
        "uio[3]": "enable_accu",
        "uio[4]": "Ena_out",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_Xgamer1999_LIF",
      "address": 741,
      "title": "Demonstration of Leaky integrate and Fire neuron SJSU",
      "author": "Andres Zuniga, Arsh Shergill",
      "description": "Digital simplification of biological neuron commonly used in Neural Networks",
      "clock_hz": 20000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Xgamer1999/TTSkyLIFNeuron2",
      "commit": "0845d841f2952fe96f1d7d0c1414cbdc3a05162f",
      "pinout": {
        "ui[0]": "ui1",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "uo1",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "uio1",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_acidonitroso_programmable_threshold_voltage_sensor",
      "address": 520,
      "title": "Programmable threshold voltage sensor",
      "author": "Andrea Possemato - Mattia A. Di Nicola",
      "description": "voltage sensor with 3 bit (8 voltage levels) threshold selector",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        7,
        9,
        8
      ],
      "repo": "https://github.com/Elettronica-UnivAQ/tt10-Programmable-threshold-voltage-sensor",
      "commit": "7099c726dada05830b3cd844ff6833df582aaded",
      "pinout": {
        "ui[0]": "in[0]",
        "ui[1]": "in[1]",
        "ui[2]": "in[2]",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "Vref",
        "ua[1]": "out",
        "ua[2]": "in0",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_adc_dac_tern_alu",
      "address": 516,
      "title": "adc_dac_BCT_addr_ALU_STI",
      "author": "Stven Bos, Timonas Juonys",
      "description": "adc, dac",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        6
      ],
      "repo": "https://github.com/aiunderstand/ttsky25a-ternary-alu-ff-dac-adc",
      "commit": "f04e6eaa575cd8f3d3f38d79726120dc0a1a6613",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "a0",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_adpll",
      "address": 941,
      "title": "all-digital pll",
      "author": "Shrikrishna Kaje",
      "description": "RTL design of a fully programmable all-digital pll",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Shrikris630/pll",
      "commit": "57f8bee37d8469a371655ad207e9e647cfdaf0c7",
      "pinout": {
        "ui[0]": "clk90",
        "ui[1]": "clk_ref",
        "ui[2]": "clr",
        "ui[3]": "program",
        "ui[4]": "out_sel",
        "ui[5]": "param_sel[0]",
        "ui[6]": "param_sel[1]",
        "ui[7]": "param_sel[2]",
        "uo[0]": "dout[0]",
        "uo[1]": "dout[1]",
        "uo[2]": "dout[2]",
        "uo[3]": "dout[3]",
        "uo[4]": "dout[4]",
        "uo[5]": "sign",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "fb_clk",
        "uio[1]": "dco_out",
        "uio[2]": "pgm_value[0]",
        "uio[3]": "pgm_value[1]",
        "uio[4]": "pgm_value[2]",
        "uio[5]": "pgm_value[3]",
        "uio[6]": "pgm_value[4]",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_ag_priority_encoder_parity_checker",
      "address": 300,
      "title": "Priority Encoder with Parity Checker",
      "author": "arun-goud",
      "description": "9-to-4 priority encoder with parity checker and 7-seg display output",
      "clock_hz": 66000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/arun-goud/tt_um_ag_priority_encoder_parity_checker",
      "commit": "675f61b11632a35077c2db8ee3a9a3ed56d3e652",
      "pinout": {
        "ui[0]": "in_a[0] / IN0",
        "ui[1]": "in_a[1] / IN1",
        "ui[2]": "in_a[2] / IN2",
        "ui[3]": "in_a[3] / IN3",
        "ui[4]": "in_a[4] / IN4",
        "ui[5]": "in_a[5] / IN5",
        "ui[6]": "in_a[6] / IN6",
        "ui[7]": "in_a[7] / IN7",
        "uo[0]": "output[0] / SEG_A",
        "uo[1]": "output[1] / SEG_B",
        "uo[2]": "output[2] / SEG_C",
        "uo[3]": "output[3] / SEG_D",
        "uo[4]": "output[4] / SEG_E",
        "uo[5]": "output[5] / SEG_F",
        "uo[6]": "output[6] / SEG_G",
        "uo[7]": "output[7] / SEG_DP",
        "uio[0]": "in_b[0] / IN8",
        "uio[1]": "in_b[1] / MSB_HIGHPRMODE_n",
        "uio[2]": "in_b[2] / EVENPARITY_MODE_n",
        "uio[3]": "out_b[3] / PARITY_OUT",
        "uio[4]": "out_b[4] / PRCODE[0]",
        "uio[5]": "out_b[5] / PRCODE[1]",
        "uio[6]": "out_b[6] / PRCODE[2]",
        "uio[7]": "out_b[7] / PRCODE[3]"
      }
    },
    {
      "macro": "tt_um_alexandercoabad_mixedsignal",
      "address": 527,
      "title": "mixedsignal",
      "author": "Alexander Co Abad; Isabelle Rose Sta Rita",
      "description": "Inverter Biased for Linear Mode Operation",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        10,
        11
      ],
      "repo": "https://github.com/alexandercoabad/mixedsignal",
      "commit": "fa771d2f8045a7d1f653d24be6f7206d00fd7184",
      "pinout": {
        "ui[0]": "MUX selector 1",
        "ui[1]": "MUX selector 2",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "analog output",
        "ua[1]": "analog input",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_algofoogle_vga_matrix_dac",
      "address": 524,
      "title": "Analog VGA CSDAC experiments",
      "author": "algofoogle (Anton Maurovic)",
      "description": "Current switching matrix DAC implementations for analog VGA displays",
      "clock_hz": 25175000,
      "tiles": "1x2",
      "analog_pins": [
        6,
        7,
        9,
        8
      ],
      "repo": "https://github.com/algofoogle/ttsky25a-vga-matrix-dac",
      "commit": "53cbc993b50161b1d6b5409915376c4f5b8db0fa",
      "pinout": {
        "ui[0]": "mode[0] / dac_in[0]",
        "ui[1]": "mode[1] / dac_in[1]",
        "ui[2]": "mode[2] / dac_in[2]",
        "ui[3]": "mode[3] / dac_in[3]",
        "ui[4]": "mode[4] / dac_in[4]",
        "ui[5]": "mode[5] / dac_in[5]",
        "ui[6]": "mode[6] / dac_in[6]",
        "ui[7]": "mode[7] / dac_in[7]",
        "uo[0]": "r7",
        "uo[1]": "g7",
        "uo[2]": "b7",
        "uo[3]": "vsync",
        "uo[4]": "r6",
        "uo[5]": "g6",
        "uo[6]": "b6",
        "uo[7]": "hsync",
        "uio[0]": "vblank_out",
        "uio[1]": "hblank_out",
        "uio[2]": "bias1_in",
        "uio[3]": "bias2_in",
        "uio[4]": "bias3_in",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "ra",
        "ua[1]": "ga",
        "ua[2]": "ba",
        "ua[3]": "atest",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_alu_4bit_wrapper",
      "address": 549,
      "title": "4-bit ALU with Flags",
      "author": "Emrys Leowhel Oling",
      "description": "4-bit ALU with Flags for Z2A project",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/emryscharcool/ttsky25a-alu-4bit",
      "commit": "6349c55bc97b455932ec66a1468a0b6fdaf3460e",
      "pinout": {
        "ui[0]": "A[0]",
        "ui[1]": "A[1]",
        "ui[2]": "A[2]",
        "ui[3]": "A[3]",
        "ui[4]": "B[0]",
        "ui[5]": "B[1]",
        "ui[6]": "B[2]",
        "ui[7]": "B[3]",
        "uo[0]": "ALU_out[0]",
        "uo[1]": "ALU_out[1]",
        "uo[2]": "ALU_out[2]",
        "uo[3]": "ALU_out[3]",
        "uo[4]": "Overflow_out",
        "uo[5]": "Negative_out",
        "uo[6]": "Zero_out",
        "uo[7]": "Carry_out",
        "uio[0]": "ALU_sel[0]",
        "uio[1]": "ALU_sel[1]",
        "uio[2]": "ALU_sel[2]",
        "uio[3]": "ALU_sel[3]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_analog_example",
      "address": 263,
      "title": "Digital OTA",
      "author": "UABC",
      "description": "Low voltage operational transconductance amplifier",
      "clock_hz": 10000,
      "tiles": "1x2",
      "analog_pins": [
        7,
        9,
        8
      ],
      "repo": "https://github.com/Kokko00/DigitalOTA",
      "commit": "e3af30b533f4774e74952c0f3c290a3dd6bd3d23",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "Vo",
        "ua[1]": "VA",
        "ua[2]": "VB",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_analog_factory_test",
      "address": 233,
      "title": "TT08 Analog Factory Test",
      "author": "Sylvain Munaut",
      "description": "Test structures for TT08 analog support",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        5,
        0,
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/smunaut/tt08-analog-factory-test",
      "commit": "cf8fcb7fa5bbbc0f4b617d6efa3f81f0f7df9ba7",
      "pinout": {
        "ui[0]": "ena_1v8_n",
        "ui[1]": "ena_3v3_n",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "uio_oe",
        "ui[7]": "digital_in",
        "uo[0]": "digital_out",
        "uo[1]": "digital_out",
        "uo[2]": "digital_out",
        "uo[3]": "digital_out",
        "uo[4]": "digital_out",
        "uo[5]": "digital_out",
        "uo[6]": "digital_out",
        "uo[7]": "digital_out",
        "uio[0]": "digital_out",
        "uio[1]": "digital_out",
        "uio[2]": "digital_out",
        "uio[3]": "digital_out",
        "uio[4]": "digital_out",
        "uio[5]": "digital_out",
        "uio[6]": "digital_out",
        "uio[7]": "digital_out",
        "ua[0]": "ibias",
        "ua[1]": "vapwr_sense",
        "ua[2]": "vgnd_sense",
        "ua[3]": "vdpwr_sense",
        "ua[4]": "loopback_a",
        "ua[5]": "loopback_b"
      }
    },
    {
      "macro": "tt_um_andyshor_demux",
      "address": 421,
      "title": "Demux",
      "author": "Andrey Shornikov",
      "description": "ASIC controls   ADG732 multiplexer chip switching its input to one of 25 output channels each second",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/AndyShor/ttsky-demux",
      "commit": "f3536063b7a84079544a75be660a764b9bba2230",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "demux_ena",
        "uo[1]": "wr",
        "uo[2]": "cs",
        "uo[3]": "set_ch[0]",
        "uo[4]": "set_ch[1]",
        "uo[5]": "set_ch[2]",
        "uo[6]": "set_ch[3]",
        "uo[7]": "set_ch[4]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_anweiteck_2stageCMOSOpAmp",
      "address": 526,
      "title": "2 Stage CMOS Op Amp",
      "author": "An Wei Teck",
      "description": "Simple 2 stage CMOS Op Amp with Miller compensation ",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        6,
        7,
        9,
        8
      ],
      "repo": "https://github.com/anweiteck/ttsky25a-2stageCMOSOpAmp",
      "commit": "f99a0acc79550b9a5e4769076ccae859c8fc3263",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "Vout",
        "ua[1]": "V+",
        "ua[2]": "V-",
        "ua[3]": "Ibias",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_assaify_mssf_pll",
      "address": 778,
      "title": "24 MHz MSSF PLL",
      "author": "Nahwan Faza Assaify",
      "description": "A 2.4 GHz MSSF Integer-N PLL with a divide-by-100 circuit at the output.",
      "clock_hz": 20000000,
      "tiles": "1x2",
      "analog_pins": [
        10,
        11
      ],
      "repo": "https://github.com/assaify/ttsky25a-mssf-pll",
      "commit": "7d94ed2d8f7d9de6f644a21078c9d9230db53803",
      "pinout": {
        "ui[0]": "CON_S0",
        "ui[1]": "CON_S1",
        "ui[2]": "CON_S2",
        "ui[3]": "CON_S3",
        "ui[4]": "CON_D0",
        "ui[5]": "CON_D1",
        "ui[6]": "CON_D2",
        "ui[7]": "CON_D3",
        "uo[0]": "DFOUT_HF",
        "uo[1]": "DFOUT_LF",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "FOUT",
        "ua[1]": "VCON",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_axi4lite_top",
      "address": 998,
      "title": "Axi4_Lite",
      "author": "Team_13",
      "description": "Communication Protocol",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Aravind040/CF-2025-TT12-13",
      "commit": "88994b26799cc9565c871a1f53c8eee01fbbc237",
      "pinout": {
        "ui[0]": "start_write",
        "ui[1]": "write_addr[0]",
        "ui[2]": "write_addr[1]",
        "ui[3]": "start_read",
        "ui[4]": "read_addr[0]",
        "ui[5]": "read_addr[1]",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "data_read[0]",
        "uo[1]": "data_read[1]",
        "uo[2]": "data_read[2]",
        "uo[3]": "data_read[3]",
        "uo[4]": "data_read[4]",
        "uo[5]": "data_read[5]",
        "uo[6]": "data_read[6]",
        "uo[7]": "data_read[7]",
        "uio[0]": "data_write[0]",
        "uio[1]": "data_write[1]",
        "uio[2]": "data_write[2]",
        "uio[3]": "data_write[3]",
        "uio[4]": "data_write[4]",
        "uio[5]": "data_write[5]",
        "uio[6]": "data_write[6]",
        "uio[7]": "data_write[7]"
      }
    },
    {
      "macro": "tt_um_betz_morse_keyer",
      "address": 136,
      "title": "Morse Code Keyer",
      "author": "Brady Etz",
      "description": "Convert a keyed CW input to morse tones and 7-segment character output",
      "clock_hz": 12000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/b-etz/tt08-morse-keyer",
      "commit": "f11954cbb987d9f11e7c93c730513f0058f9ccf4",
      "pinout": {
        "ui[0]": "Paddle Selection (1 = Iambic)",
        "ui[1]": "Iambic-A/B Type Selection (1 = B)",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "WPM Select [0] (LSB)",
        "ui[5]": "WPM Select [1]",
        "ui[6]": "WPM Select [2]",
        "ui[7]": "WPM Select [3] (MSB)",
        "uo[0]": "7-Seg. Display A",
        "uo[1]": "7-Seg. Display B",
        "uo[2]": "7-Seg. Display C",
        "uo[3]": "7-Seg. Display D",
        "uo[4]": "7-Seg. Display E",
        "uo[5]": "7-Seg. Display F",
        "uo[6]": "7-Seg. Display G",
        "uo[7]": "7-Seg. Display .",
        "uio[0]": "External Dit / Straight In (active-high)",
        "uio[1]": "External Dah In (active-high)",
        "uio[2]": "Aux. Dit Paddle Out (active-high)",
        "uio[3]": "Aux. Dah Paddle Out (active-high)",
        "uio[4]": "Aux. Morse Out (active-high)",
        "uio[5]": "Buzzer Tone Out",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_bit_serial_cpu_top",
      "address": 865,
      "title": "16-bit bit-serial CPU",
      "author": "Tim Gu, Andrew Wang",
      "description": "A bit-serial CPU and 16-bit instruction architecture",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ndrwng/SKY130-bit-serial-cpu",
      "commit": "6895a84ea2f6d691895f7c911a2932a0ed6615d4",
      "pinout": {
        "ui[0]": "INST_0",
        "ui[1]": "INST_1",
        "ui[2]": "INST_2",
        "ui[3]": "INST_3",
        "ui[4]": "INST_4",
        "ui[5]": "INST_5",
        "ui[6]": "INST_6",
        "ui[7]": "INST_7",
        "uo[0]": "LED_0",
        "uo[1]": "LED_1",
        "uo[2]": "LED_2",
        "uo[3]": "LED_3",
        "uo[4]": "LED_4",
        "uo[5]": "LED_5",
        "uo[6]": "LED_6",
        "uo[7]": "LED_7",
        "uio[0]": "PB_INST",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_bitty",
      "address": 204,
      "title": "Bitty",
      "author": "Moldir",
      "description": "16-bit simple processor",
      "clock_hz": 10,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/Molidier/bitty-tt-sky130",
      "commit": "4559fd1c23c3049c4c99ec7b60924d9a456e023f",
      "pinout": {
        "ui[0]": "rx_data_bit",
        "ui[1]": "sel_baude_rate[0]",
        "ui[2]": "sel_baude_rate[1]",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "tx_data_bit",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_bleeptrack_cc1",
      "address": 869,
      "title": "Cross stitch Creatures #1",
      "author": "bleeptrack",
      "description": "generative pattern creatures using silicon cross stitch",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/bleeptrack/crossstitching01",
      "commit": "ba1d7c8c6244c89a454b01833d56b12d25afddc0",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "dummy",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_bleeptrack_cc2",
      "address": 871,
      "title": "Cross stitch Creatures #2",
      "author": "bleeptrack",
      "description": "generative pattern creatures using silicon cross stitch",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/bleeptrack/crossstitching02",
      "commit": "db4b9d00f5ba21b84e31d369cec0a059e0cba035",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "dummy",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_bleeptrack_cc3",
      "address": 873,
      "title": "Cross stitch Creatures #3",
      "author": "bleeptrack",
      "description": "generative pattern creatures using silicon cross stitch",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/bleeptrack/crossstitching03",
      "commit": "189327cfc896fe90ce32c36a526c3b1df7dc186a",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "dummy",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_bleeptrack_cc4",
      "address": 875,
      "title": "Cross stitch Creatures #4",
      "author": "bleeptrack",
      "description": "generative pattern creatures using silicon cross stitch",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/bleeptrack/crosstitching04",
      "commit": "8c5529ea3c68698f239cd79ab9b721a349caf484",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "dummy",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_brandonramos_VGA_Pong_with_NES_Controllers",
      "address": 262,
      "title": "VGA Pong with NES Controllers",
      "author": "Brandon S. Ramos",
      "description": "Pong using 2 NES Controllers with a VGA display",
      "clock_hz": 25175000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/J0NTrollston/tt08-VGA-Pong-with-NES-Controllers",
      "commit": "795375f390b15bde51c68f6a9142dd638aef850f",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "h_sync",
        "uo[1]": "b",
        "uo[2]": "g",
        "uo[3]": "r",
        "uo[4]": "v_sync",
        "uo[5]": "b",
        "uo[6]": "g",
        "uo[7]": "r",
        "uio[0]": "NES_Controller_Left[0]",
        "uio[1]": "NES_Controller_Left[1]",
        "uio[2]": "NES_Controller_Left[2]",
        "uio[3]": "NES_Controller_Right[0]",
        "uio[4]": "NES_Controller_Right[1]",
        "uio[5]": "NES_Controller_Right[2]",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_brandonramos_opamp_ladder",
      "address": 519,
      "title": "2-bit Flash ADC",
      "author": "Brandon S. Ramos",
      "description": "Flash ADC that outputs 2-bit encoded data",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11
      ],
      "repo": "https://github.com/J0NTrollston/tt08-analog-adc",
      "commit": "afdac9e8c1c12ef6e0a0849d927fb280e171cca0",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "encoded_out_0",
        "uo[1]": "encoded_out_1",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "analog_pin_in",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_braun_mult",
      "address": 293,
      "title": "Low-Power 8\u00d78 Braun Array Multiplier for Fast Computing",
      "author": "Rakesh",
      "description": "An 8x8 unsigned Braun array multiplier that computes the product of two 8-bit numbers, producing a 16-bit result using a systematic array of full and half adders",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tapeoutcutm/Optimized-Braun-Array-Multiplier-Architecture-for-Digital-Systems",
      "commit": "00531401172a8bdcfccee53df83c2ad6ac412e9c",
      "pinout": {
        "ui[0]": "Multiplicand A[0] - Input A bit 0",
        "ui[1]": "Multiplicand A[1] - Input A bit 1",
        "ui[2]": "Multiplicand A[2] - Input A bit 2",
        "ui[3]": "Multiplicand A[3] - Input A bit 3",
        "ui[4]": "Multiplicand A[4] - Input A bit 4",
        "ui[5]": "Multiplicand A[5] - Input A bit 5",
        "ui[6]": "Multiplicand A[6] - Input A bit 6",
        "ui[7]": "Multiplicand A[7] - Input A bit 7",
        "uo[0]": "Product P[0] - Product bit 0 (LSB)",
        "uo[1]": "Product P[1] - Product bit 1",
        "uo[2]": "Product P[2] - Product bit 2",
        "uo[3]": "Product P[3] - Product bit 3",
        "uo[4]": "Product P[4] - Product bit 4",
        "uo[5]": "Product P[5] - Product bit 5",
        "uo[6]": "Product P[6] - Product bit 6",
        "uo[7]": "Product P[7] - Product bit 7",
        "uio[0]": "Multiplier B[0] / Product P[8] - Input B bit 0 / Output P bit 8",
        "uio[1]": "Multiplier B[1] / Product P[9] - Input B bit 1 / Output P bit 9",
        "uio[2]": "Multiplier B[2] / Product P[10] - Input B bit 2 / Output P bit 10",
        "uio[3]": "Multiplier B[3] / Product P[11] - Input B bit 3 / Output P bit 11",
        "uio[4]": "Multiplier B[4] / Product P[12] - Input B bit 4 / Output P bit 12",
        "uio[5]": "Multiplier B[5] / Product P[13] - Input B bit 5 / Output P bit 13",
        "uio[6]": "Multiplier B[6] / Product P[14] - Input B bit 6 / Output P bit 14",
        "uio[7]": "Multiplier B[7] / Product P[15] - Input B bit 7 / Output P bit 15 (MSB)"
      }
    },
    {
      "macro": "tt_um_brent_kung",
      "address": 676,
      "title": "brent-kung_4",
      "author": "jalcim",
      "description": "brent-kung 4 bit do in 15 minute with matt :)",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jalcim/tiny_brent_kung",
      "commit": "f1e3e22e64d5d840de6f4bd6586ee916a7e5022c",
      "pinout": {
        "ui[0]": "input_A[0]",
        "ui[1]": "input_A[1]",
        "ui[2]": "input_A[2]",
        "ui[3]": "input_A[3]",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "input_B[0]",
        "uio[1]": "input_B[1]",
        "uio[2]": "input_B[2]",
        "uio[3]": "input_B[3]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_cache_controller",
      "address": 1006,
      "title": "Simple Cache Controller",
      "author": "TT12-01",
      "description": "A small direct-mapped cache memory controller",
      "clock_hz": 1000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/stephen3011g/cacheMemoryController",
      "commit": "a61f955e8b5d6bf8012783ef09f9994af0302bf4",
      "pinout": {
        "ui[0]": "Address bit 0",
        "ui[1]": "Address bit 1",
        "ui[2]": "Address bit 2",
        "ui[3]": "Address bit 3",
        "ui[4]": "Address bit 4",
        "ui[5]": "Address bit 5",
        "ui[6]": "Address bit 6",
        "ui[7]": "Read/Write flag (MSB of address)",
        "uo[0]": "Data output bit 0",
        "uo[1]": "Data output bit 1",
        "uo[2]": "Data output bit 2",
        "uo[3]": "Data output bit 3",
        "uo[4]": "Data output bit 4",
        "uo[5]": "Data output bit 5",
        "uo[6]": "Data output bit 6",
        "uo[7]": "Data output bit 7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_chip_rom",
      "address": 0,
      "title": "Chip ROM",
      "author": "Uri Shaked",
      "description": "ROM with information about the chip",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt-chip-rom",
      "commit": "bb743722e70e5313617c15b7d6f487745634a0fa",
      "pinout": {
        "ui[0]": "addr[0]",
        "ui[1]": "addr[1]",
        "ui[2]": "addr[2]",
        "ui[3]": "addr[3]",
        "ui[4]": "addr[4]",
        "ui[5]": "addr[5]",
        "ui[6]": "addr[6]",
        "ui[7]": "addr[7]",
        "uo[0]": "data[0]",
        "uo[1]": "data[1]",
        "uo[2]": "data[2]",
        "uo[3]": "data[3]",
        "uo[4]": "data[4]",
        "uo[5]": "data[5]",
        "uo[6]": "data[6]",
        "uo[7]": "data[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_chrishtet_LIF",
      "address": 551,
      "title": "Leaky Integrate and Fire Neuron",
      "author": "Chris Htet",
      "description": "Fixed-point accumulator with leak and a comparator to fire a spike when voltage is greater than threshold",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ChrisHtet/tt_um_chrishtet_LIF",
      "commit": "b7cb9c70d909b40b94e6a6fc4ee2385750db46ec",
      "pinout": {
        "ui[0]": "I_q4_4[0] (LSB)",
        "ui[1]": "I_q4_4[1]",
        "ui[2]": "I_q4_4[2]",
        "ui[3]": "I_q4_4[3]",
        "ui[4]": "I_q4_4[4]",
        "ui[5]": "I_q4_4[5]",
        "ui[6]": "I_q4_4[6]",
        "ui[7]": "I_q4_4[7] (MSB)",
        "uo[0]": "spike (1-cycle pulse)",
        "uo[1]": "refractory (active-high)",
        "uo[2]": "V_dbg[0] = V[4] (Q4.4)",
        "uo[3]": "V_dbg[1] = V[5] (Q4.4)",
        "uo[4]": "V_dbg[2] = V[6] (Q4.4)",
        "uo[5]": "V_dbg[3] = V[7] (MSB, Q4.4)",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_combo_haz",
      "address": 866,
      "title": "Combinational Logic Based RISC-V Pipeline Hazard Resolver",
      "author": "Harsh Kumar, Pushkar R Kulkarni, Darsh Khanna, Vatsala B M, Shylashree N, RV College of Engineering, Bengaluru",
      "description": "Design of combinational logic based Pipeline Hazard Resolution Unit for RISC-V Processor",
      "clock_hz": 10,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE/TTSKY25a-COMBINATIONAL-HAZARD-RESOLVER",
      "commit": "2bdf04d213d86c1936dbefc6906c57d0101b8961",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "ui_in[[2]",
        "ui[3]": "ui_in[[3]",
        "ui[4]": "ui_in[[4]",
        "ui[5]": "ui_in[[5]",
        "ui[6]": "ui_in[[6]",
        "ui[7]": "ui_in[[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_customalu",
      "address": 749,
      "title": "Custom ALU",
      "author": "Venkatesh A Nayak, Sathyan E N,Prathap C, Sahana M S , Keerthana V,Shylashree N, RV College of Engineering, Bengaluru",
      "description": "A Custom ALU/NPU  supporting arithmetic, logic, and neural-inspired operations including rotation, priority encoding, gray code, majority, parity error detection and weighted computations ",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE/TTSKY25A_CustomALU",
      "commit": "6337ed0beecfaaa5decffaf45c33a49038532764",
      "pinout": {
        "ui[0]": "a[0]",
        "ui[1]": "a[1]",
        "ui[2]": "a[2]",
        "ui[3]": "a[3]",
        "ui[4]": "b[0]",
        "ui[5]": "b[1]",
        "ui[6]": "b[2]",
        "ui[7]": "b[3]",
        "uo[0]": "result[0]",
        "uo[1]": "result[1]",
        "uo[2]": "result[2]",
        "uo[3]": "result[3]",
        "uo[4]": "Error flag",
        "uo[5]": "Sign flag",
        "uo[6]": "Carry flag",
        "uo[7]": "Zero flag",
        "uio[0]": "opcode[0]",
        "uio[1]": "opcode[1]",
        "uio[2]": "opcode[2]",
        "uio[3]": "opcode[3]",
        "uio[4]": "Mode bit for ALU/NPU",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_cw_vref",
      "address": 271,
      "title": "Current-Mode Bandgap Reference",
      "author": "Christoph Weiser",
      "description": "PVT stable reference voltage and current.",
      "clock_hz": 0,
      "tiles": "2x2",
      "analog_pins": [
        6,
        7,
        9
      ],
      "repo": "https://github.com/christoph-weiser/tt10-vref",
      "commit": "11bb63a1716202caa8afe019d487a16852e46d45",
      "pinout": {
        "ui[0]": "trim 7",
        "ui[1]": "trim 6",
        "ui[2]": "trim 5",
        "ui[3]": "trim 4",
        "ui[4]": "trim 3",
        "ui[5]": "trim 2",
        "ui[6]": "trim 1",
        "ui[7]": "trim 0",
        "uo[0]": "muxout 0",
        "uo[1]": "muxout 1",
        "uo[2]": "muxout 2",
        "uo[3]": "muxout 3",
        "uo[4]": "muxout 4",
        "uo[5]": "muxout 5",
        "uo[6]": "muxout 6",
        "uo[7]": "muxout 7",
        "uio[0]": "Select Vext or Vbg",
        "uio[1]": "Select Vbuf or Iout",
        "uio[2]": "Enable bandgap core",
        "uio[3]": "mosi",
        "uio[4]": "miso",
        "uio[5]": "cs",
        "uio[6]": "sclk",
        "uio[7]": "",
        "ua[0]": "Buffered output voltage or reference current",
        "ua[1]": "External test input voltage",
        "ua[2]": "Testbuffer bias current (~5uA)",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_dac12",
      "address": 743,
      "title": "12 bit DAC",
      "author": "KEVIN ZHOU",
      "description": "converts digital input to analog pwm output with 12 bit resolution",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/gamenewbie/tt_um_dac12",
      "commit": "451c42f61da354bc429a735c64e9af97619af0a9",
      "pinout": {
        "ui[0]": "GPIO4",
        "ui[1]": "GPIO5",
        "ui[2]": "GPIO6",
        "ui[3]": "GPIO7",
        "ui[4]": "GPIO8",
        "ui[5]": "GPIO9",
        "ui[6]": "GPIO10",
        "ui[7]": "GPIO11",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "GPIO12",
        "uio[1]": "GPIO13",
        "uio[2]": "GPIO14",
        "uio[3]": "GPIO15",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_dac_test3v3",
      "address": 772,
      "title": "Design and Implementation of R-2R Ladder DAC",
      "author": "CUTM",
      "description": "A simple 8 bit DAC with a sine waveform driver and 3.3v output",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        10
      ],
      "repo": "https://github.com/tapeoutcutm/Design-and-Implementation-of-R-2R-Ladder-DAC-",
      "commit": "13bfb1eaab1bd16a66a6dfcd4db345804ccb1bcd",
      "pinout": {
        "ui[0]": "bit 0",
        "ui[1]": "bit 1",
        "ui[2]": "bit 2",
        "ui[3]": "bit 3",
        "ui[4]": "bit 4",
        "ui[5]": "bit 5",
        "ui[6]": "bit 6",
        "ui[7]": "bit 7",
        "uo[0]": "count zero",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "external data",
        "uio[1]": "load divider",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "DAC output",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_dco",
      "address": 167,
      "title": "Digitally Controlled Oscillator",
      "author": "Rohan K Loni, Shrinidhi Udupa, Sudha Kumaran, Aditya Manjunatha and Shylashree N, RV College of Engineering",
      "description": "The digitally controlled oscillator (DCO) generates a frequency-adjustable clock signal based on an 8-bit control input.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE/TT_UM_DCO",
      "commit": "03a080e9a9052d8b17bea5fdbdcbd5a2d04ccf2c",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_delaychain",
      "address": 326,
      "title": "Delay Chain",
      "author": "pschaumont",
      "description": "Delay Path Circuit for Glitching Experiments",
      "clock_hz": 1000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/Secure-Embedded-Systems/ttsky-delaychain",
      "commit": "0f4cadc46f8114d1bae583f7556e3918d2b5c56c",
      "pinout": {
        "ui[0]": "chain0_i",
        "ui[1]": "chain1_i",
        "ui[2]": "chain2_i",
        "ui[3]": "chain3_i",
        "ui[4]": "chain4_i",
        "ui[5]": "chain5_i",
        "ui[6]": "chain6_i",
        "ui[7]": "chain7_i",
        "uo[0]": "chain0_o",
        "uo[1]": "chain1_o",
        "uo[2]": "chain2_o",
        "uo[3]": "chain3_o",
        "uo[4]": "chain4_o",
        "uo[5]": "chain5_o",
        "uo[6]": "chain6_o",
        "uo[7]": "chain7_o",
        "uio[0]": "test_i",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_diff",
      "address": 231,
      "title": "ttsky25_EpitaXC",
      "author": "Lohan Atapattu",
      "description": "Fully differential operational amplifier",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        5,
        0,
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/LohanAtapattu/ttsky25_EpitaXC",
      "commit": "06e1c79b4103b1e2ebadc818eba4712529251665",
      "pinout": {
        "ui[0]": "en_1",
        "ui[1]": "en_2",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "Vcm",
        "ua[1]": "Vin+",
        "ua[2]": "Vin-",
        "ua[3]": "Rgm",
        "ua[4]": "Vout+",
        "ua[5]": "Vout-"
      }
    },
    {
      "macro": "tt_um_digital_playground",
      "address": 419,
      "title": "Sky130 Digital Playground",
      "author": "Eduardo Holguin",
      "description": "Select and test eight classic digital blocks (gates, 8-bit counter, PWM, 7-seg, 4-bit ALU, FDC, 16\u00d74 RAM, and turn signals) on a single TinyTapeout Sky130 tile.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/EduHolg/sky130-digital-playground",
      "commit": "1337ed7452a3c1d205f4dafe81932446b4a85a21",
      "pinout": {
        "ui[0]": "MODE_SEL0",
        "ui[1]": "MODE_SEL1",
        "ui[2]": "MODE_SEL2",
        "ui[3]": "AUX0 / CNT_EN / RAM_A0 / ALU_OP0 / DIR0",
        "ui[4]": "AUX1 / RAM_A1 / ALU_OP1 / DIR1",
        "ui[5]": "AUX2 / RAM_A2 / ALU_OP2",
        "ui[6]": "AUX3 / RAM_A3",
        "ui[7]": "RAM_WE",
        "uo[0]": "OUT0 (mode-dep: GATES_AND | CNT_Q0 | PWM_OUT | HEX7_SEG_G | ALU_Y0 | FDC_D0 | RAM_Q0 | DIR_IZQ0)",
        "uo[1]": "OUT1 (mode-dep: GATES_OR  | CNT_Q1 | PWM_DUTY1 | HEX7_SEG_F | ALU_Y1 | FDC_D1 | RAM_Q1 | DIR_IZQ1)",
        "uo[2]": "OUT2 (mode-dep: GATES_XOR | CNT_Q2 | PWM_DUTY2 | HEX7_SEG_E | ALU_Y2 | FDC_D2 | RAM_Q2 | DIR_IZQ2)",
        "uo[3]": "OUT3 (mode-dep: GATES_NAND| CNT_Q3 | PWM_DUTY3 | HEX7_SEG_D | ALU_Y3 | FDC_D3)",
        "uo[4]": "OUT4 (mode-dep: GATES_NOR | CNT_Q4 | PWM_DUTY4 | HEX7_SEG_C | ALU_FLAG | FDC_D4 | DIR_DER0)",
        "uo[5]": "OUT5 (mode-dep: GATES_NOT_A | CNT_Q5 | PWM_DUTY5 | HEX7_SEG_B | DIR_DER1)",
        "uo[6]": "OUT6 (mode-dep: CNT_Q6 | PWM_DUTY6 | HEX7_SEG_A | DIR_DER2)",
        "uo[7]": "OUT7 (mode-dep: CNT_Q7 | PWM_DUTY7)",
        "uio[0]": "GEN0: GATES_A / FDC_VCO / PWM_DUTY0 / HEX_X0 / ALU_A0",
        "uio[1]": "GEN1: GATES_B / PWM_DUTY1 / HEX_X1 / ALU_A1",
        "uio[2]": "GEN2: PWM_DUTY2 / HEX_X2 / ALU_A2",
        "uio[3]": "GEN3: PWM_DUTY3 / HEX_X3 / ALU_A3",
        "uio[4]": "GEN4: PWM_DUTY4 / ALU_B0",
        "uio[5]": "GEN5: PWM_DUTY5 / ALU_B1",
        "uio[6]": "GEN6: PWM_DUTY6 / ALU_B2",
        "uio[7]": "GEN7: PWM_DUTY7 / ALU_B3"
      }
    },
    {
      "macro": "tt_um_dlmiles_tqvph_i2c",
      "address": 134,
      "title": "TinyQV I2C Controller Device",
      "author": "Darryl Miles",
      "description": "Standalone TinyQV I2C Controller Device",
      "clock_hz": 64000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/dlmiles/tinyqv-full-i2c",
      "commit": "01c3d11cc426e746a276ab670d8536042a0be60c",
      "pinout": {
        "ui[0]": "See REG_CMUX",
        "ui[1]": "See REG_CMUX",
        "ui[2]": "See REG_CMUX",
        "ui[3]": "See REG_CMUX",
        "ui[4]": "See REG_CMUX",
        "ui[5]": "See REG_CMUX",
        "ui[6]": "See REG_CMUX",
        "ui[7]": "See REG_CMUX",
        "uo[0]": "See REG_CMUX",
        "uo[1]": "See REG_CMUX",
        "uo[2]": "See REG_CMUX",
        "uo[3]": "See REG_CMUX",
        "uo[4]": "See REG_CMUX",
        "uo[5]": "See REG_CMUX",
        "uo[6]": "See REG_CMUX",
        "uo[7]": "See REG_CMUX",
        "uio[0]": "user_interrupt",
        "uio[1]": "data_ready",
        "uio[2]": "",
        "uio[3]": "spi_miso",
        "uio[4]": "spi_cs_n",
        "uio[5]": "spi_clk",
        "uio[6]": "spi_mosi",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_dma",
      "address": 739,
      "title": "DMA controller",
      "author": "Yogith Reddy M, Aditya Menon, Vignesh Udupi, Shylashree N, RV College of Engineering, Bengaluru",
      "description": "Design of a Tiny DMA controller for memory to memory copy",
      "clock_hz": 10,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE/TTSKY25a-DMA-CONTROLLER",
      "commit": "aea63e24b8444929446141ede5b33bdc20ae25c0",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_dpmunit",
      "address": 43,
      "title": "DPM_Unit",
      "author": "Sanjay Kumar M, Shylashree N, Ravish Aradhya H V, RV College Of Engineering, Neha R V, PES University",
      "description": "Design and Implementation of Dynamic Power management unit",
      "clock_hz": 100,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE-Shylashree/TT8-DPMU",
      "commit": "ee9c8ae44e1cba03c5315015d6c293d8f2386969",
      "pinout": {
        "ui[0]": "ui_in[[0]",
        "ui[1]": "ui_in[[1]",
        "ui[2]": "ui_in[[2]",
        "ui[3]": "ui_in[[3]",
        "ui[4]": "ui_in[[4]",
        "ui[5]": "ui_in[[5]",
        "ui[6]": "ui_in[[6]",
        "ui[7]": "ui_in[[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_out[0]",
        "uio[1]": "uio_out[1]",
        "uio[2]": "uio_out[2]",
        "uio[3]": "uio_out[3]",
        "uio[4]": "uio_out[4]",
        "uio[5]": "uio_out[5]",
        "uio[6]": "uio_out[6]",
        "uio[7]": "uio_out[7]"
      }
    },
    {
      "macro": "tt_um_dteal_awg",
      "address": 872,
      "title": "Arbitrary Waveform Generator",
      "author": "Daniel Teal",
      "description": "Streams waveforms. Needs external R-2R ladder.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/dteal/ttsky-awg",
      "commit": "31999308f98b9fcfb9b960c6713f0dceb7252b58",
      "pinout": {
        "ui[0]": "sclk",
        "ui[1]": "mosi",
        "ui[2]": "load",
        "ui[3]": "enable",
        "ui[4]": "div_2",
        "ui[5]": "div_4",
        "ui[6]": "div_16",
        "ui[7]": "div_256",
        "uo[0]": "wave out 0",
        "uo[1]": "wave out 1",
        "uo[2]": "wave out 2",
        "uo[3]": "wave out 3",
        "uo[4]": "wave out 4",
        "uo[5]": "wave out 5",
        "uo[6]": "wave out 6",
        "uo[7]": "wave out 7",
        "uio[0]": "n/c",
        "uio[1]": "n/c",
        "uio[2]": "n/c",
        "uio[3]": "n/c",
        "uio[4]": "n/c",
        "uio[5]": "n/c",
        "uio[6]": "n/c",
        "uio[7]": "n/c"
      }
    },
    {
      "macro": "tt_um_ece298a_8_bit_cpu_top",
      "address": 34,
      "title": "8-Bit CPU",
      "author": "University of Waterloo - Fall 2024 ECE 298A",
      "description": "A basic 8-bit CPU design building off the SAP-1",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/gjrchen/8-Bit-CPU-top",
      "commit": "730b2f8b61c1c0592e8e529c32150931fae74475",
      "pinout": {
        "ui[0]": "prog_in_0",
        "ui[1]": "prog_in_1",
        "ui[2]": "prog_in_2",
        "ui[3]": "prog_in_3",
        "ui[4]": "prog_in_4",
        "ui[5]": "prog_in_5",
        "ui[6]": "prog_in_6",
        "ui[7]": "prog_in_7",
        "uo[0]": "output_register_0",
        "uo[1]": "output_register_1",
        "uo[2]": "output_register_2",
        "uo[3]": "output_register_3",
        "uo[4]": "output_register_4",
        "uo[5]": "output_register_5",
        "uo[6]": "output_register_6",
        "uo[7]": "output_register_7",
        "uio[0]": "in_programming",
        "uio[1]": "out_ready_for_ui",
        "uio[2]": "out_done_load",
        "uio[3]": "out_CF",
        "uio[4]": "out_ZF",
        "uio[5]": "out_HF",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_edwintorok",
      "address": 256,
      "title": "Rounding error",
      "author": "Edwin T\u00f6r\u00f6k",
      "description": "Competition entry",
      "clock_hz": 25250000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/edwintorok/roundingerror",
      "commit": "7d05a52d0489350d10fb097430baee2be9d5b625",
      "pinout": {
        "ui[0]": "test mode (0=no, 1=yes)",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "r1",
        "uo[1]": "g1",
        "uo[2]": "b1",
        "uo[3]": "vsync",
        "uo[4]": "r0",
        "uo[5]": "g0",
        "uo[6]": "b0",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "PWM output"
      }
    },
    {
      "macro": "tt_um_emmersonv_tiq_adc",
      "address": 770,
      "title": "3 Bit TIQ ADC",
      "author": "Emmerson Velazquez",
      "description": "Converts a 0V - 1.8V analog signal from analog pin 0 to a 3 bit digital signal to digital outputs 0, 1, and 2.",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        10
      ],
      "repo": "https://github.com/emmersonv/sky25a-TIQ_ADC",
      "commit": "3933e19d7ba92b9905055af3be5e1c267704abea",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "bit 0",
        "uo[1]": "bit 1",
        "uo[2]": "bit 2",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "ADC input",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_ev_motor_control",
      "address": 290,
      "title": "PLC Based Electric Vehicle Motor Control System",
      "author": "Laya",
      "description": "A comprehensive PLC-based motor control system for electric vehicles with PWM speed control, safety features, and dual PLC/HMI operation modes",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tapeoutcutm/PLC-HMI-based-EV-Motor-Control-System-using-VERILOG",
      "commit": "11dcd3fa2a56f04580642300ec323096217526a1",
      "pinout": {
        "ui[0]": "operation_select[0]",
        "ui[1]": "operation_select[1]",
        "ui[2]": "operation_select[2]",
        "ui[3]": "power_on_plc",
        "ui[4]": "power_on_hmi",
        "ui[5]": "mode_select",
        "ui[6]": "headlight_plc",
        "ui[7]": "headlight_hmi",
        "uo[0]": "power_status",
        "uo[1]": "headlight_out",
        "uo[2]": "horn_out",
        "uo[3]": "right_indicator",
        "uo[4]": "motor_pwm",
        "uo[5]": "overheat_warning",
        "uo[6]": "status_led[0]",
        "uo[7]": "status_led[1]",
        "uio[0]": "horn_plc (input)",
        "uio[1]": "horn_hmi (input)",
        "uio[2]": "right_ind_plc (input)",
        "uio[3]": "right_ind_hmi (input)",
        "uio[4]": "motor_speed[0] (output)",
        "uio[5]": "motor_speed[1] (output)",
        "uio[6]": "motor_speed[2] (output)",
        "uio[7]": "motor_speed[3] (output)"
      }
    },
    {
      "macro": "tt_um_factory_test",
      "address": 1,
      "title": "Tiny Tapeout Factory Test",
      "author": "Tiny Tapeout",
      "description": "Factory test module",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/ttsky25a-factory-test",
      "commit": "68d72f20c3d5b2c0fbf6891335eea3c1ce4aca95",
      "pinout": {
        "ui[0]": "sel / in_a[0]",
        "ui[1]": "in_a[1]",
        "ui[2]": "in_a[2]",
        "ui[3]": "in_a[3]",
        "ui[4]": "in_a[4]",
        "ui[5]": "in_a[5]",
        "ui[6]": "in_a[6]",
        "ui[7]": "in_a[7]",
        "uo[0]": "output[0] / counter[0]",
        "uo[1]": "output[1] / counter[1]",
        "uo[2]": "output[2] / counter[2]",
        "uo[3]": "output[3] / counter[3]",
        "uo[4]": "output[4] / counter[4]",
        "uo[5]": "output[5] / counter[5]",
        "uo[6]": "output[6] / counter[6]",
        "uo[7]": "output[7] / counter[7]",
        "uio[0]": "in_b[0] / counter[0]",
        "uio[1]": "in_b[1] / counter[1]",
        "uio[2]": "in_b[2] / counter[2]",
        "uio[3]": "in_b[3] / counter[3]",
        "uio[4]": "in_b[4] / counter[4]",
        "uio[5]": "in_b[5] / counter[5]",
        "uio[6]": "in_b[6] / counter[6]",
        "uio[7]": "in_b[7] / counter[7]"
      }
    },
    {
      "macro": "tt_um_fifo",
      "address": 994,
      "title": "ASYNCHRONOUS FIFO",
      "author": "VAGESH AND SAABIQ",
      "description": "A FIFO DESIGN",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/vagesh007/CF-2024-TT12-11",
      "commit": "27600174ac2220e0d4cfc482a163cf21b36c98ce",
      "pinout": {
        "ui[0]": "wdata[0]",
        "ui[1]": "wdata[1]",
        "ui[2]": "wdata[2]",
        "ui[3]": "wdata[3]",
        "ui[4]": "wdata[4]",
        "ui[5]": "wdata[5]",
        "ui[6]": "wdata[6]",
        "ui[7]": "wdata[7]",
        "uo[0]": "rdata[0]",
        "uo[1]": "rdata[1]",
        "uo[2]": "rdata[2]",
        "uo[3]": "rdata[3]",
        "uo[4]": "rdata[4]",
        "uo[5]": "rdata[5]",
        "uo[6]": "rdata[6]",
        "uo[7]": "rdata[7]",
        "uio[0]": "rempty",
        "uio[1]": "wfull",
        "uio[2]": "",
        "uio[3]": "rrst_n",
        "uio[4]": "wrst_n",
        "uio[5]": "",
        "uio[6]": "rinc",
        "uio[7]": "winc"
      }
    },
    {
      "macro": "tt_um_flash_raid_controller",
      "address": 142,
      "title": "SPI flash raid controller",
      "author": "Kobi Moneh",
      "description": "A simple SPI flash controller that allow 2 hosts to control 2 flashes with address based routing",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/kobimoneh/ttsky-flash-raid-controller",
      "commit": "066f612e217cacaa433d4ab6b468a62542648483",
      "pinout": {
        "ui[0]": "main_host_sclk",
        "ui[1]": "main_host_cs_n",
        "ui[2]": "main_host_mosi",
        "ui[3]": "secondary_host_sclk",
        "ui[4]": "secondary_host_cs_n",
        "ui[5]": "secondary_host_mosi",
        "ui[6]": "mgmt_sclk",
        "ui[7]": "mgmt_cs_n",
        "uo[0]": "main_host_miso",
        "uo[1]": "secondary_host_miso",
        "uo[2]": "mgmt_miso",
        "uo[3]": "main_flash_sclk",
        "uo[4]": "main_flash_cs_n",
        "uo[5]": "main_flash_mosi",
        "uo[6]": "secondary_flash_sclk",
        "uo[7]": "secondary_flash_cs_n",
        "uio[0]": "mgmt_mosi",
        "uio[1]": "main_flash_miso",
        "uio[2]": "secondary_flash_miso",
        "uio[3]": "secondary_flash_mosi",
        "uio[4]": "secondary_flash_wp_n",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_flummer_ltc",
      "address": 547,
      "title": "Linear Timecode (LTC) generator",
      "author": "Thomas Flummer",
      "description": "Timecode generator for audio video syncronization",
      "clock_hz": 12000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/flummer/tt-um-flummer-ltc",
      "commit": "6546f15ba42056f24ad729e4055a2d9796be65f9",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "FRAMERATE_0",
        "ui[3]": "FRAMERATE_1",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "LTC_OUT"
      }
    },
    {
      "macro": "tt_um_frequency_counter",
      "address": 40,
      "title": "Frequency counter",
      "author": "Matt Venn",
      "description": "measured frequency of a signal on pin 0 and displays on the 7 segment display",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/ttsky25a-frequency-counter",
      "commit": "d0b031ba013e4323994d2f47d25e9c4fbc20c1e0",
      "pinout": {
        "ui[0]": "signal",
        "ui[1]": "debug mode (on will put debug signals on bidirectional outputs)",
        "ui[2]": "load new period. toggle this to register the value in the bidirectional inputs",
        "ui[3]": "none",
        "ui[4]": "count period bit 11",
        "ui[5]": "count period bit 10",
        "ui[6]": "count period bit 09",
        "ui[7]": "count period bit 08",
        "uo[0]": "a",
        "uo[1]": "b",
        "uo[2]": "c",
        "uo[3]": "d",
        "uo[4]": "e",
        "uo[5]": "f",
        "uo[6]": "g",
        "uo[7]": "digit select",
        "uio[0]": "count period bit 07 or debug edge  bit 2",
        "uio[1]": "count period bit 06 or debug edge  bit 1",
        "uio[2]": "count period bit 05 or debug edge  bit 0",
        "uio[3]": "count period bit 04 or debug clock bit 2",
        "uio[4]": "count period bit 03 or debug clock bit 1",
        "uio[5]": "count period bit 02 or debug clock bit 0",
        "uio[6]": "count period bit 01 or debug state bit 1",
        "uio[7]": "count period bit 00 or debug state bit 0"
      }
    },
    {
      "macro": "tt_um_fsm_haz",
      "address": 737,
      "title": "FSM based RISC-V Pipeline Hazard Resolver",
      "author": "Pushkar R Kulkarni, Harsh Kumar, Manaswi, Dhruv Miraskar, Shyalshree N, RV College of Engineering, Bengaluru",
      "description": "Design of Finite State Machine based Pipeline Hazard Resolution Unit for RISCV Processor",
      "clock_hz": 20,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE/TTSKY25a-FSM-HAZARD-RESOLVER",
      "commit": "9f9882c8912f8294a3791fbca2f5b65366f0260e",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_galaguna_PostSys",
      "address": 708,
      "title": "Post's Machine CPU Based",
      "author": "Gerardo Laguna-Sanchez",
      "description": "A simple RISC CPU, based on machine of Emil L. Post, supported by SPI communication and RAM for both code and data spaces",
      "clock_hz": 1562500,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/galaguna/PostCPU4TinyTapeout",
      "commit": "ae6983ec3ecfcde8be4dc72abc49aae67c343cf3",
      "pinout": {
        "ui[0]": "OUT_CTRL0",
        "ui[1]": "OUT_CTRL1",
        "ui[2]": "OUT_CTRL2",
        "ui[3]": "SPI_SCK",
        "ui[4]": "SPI_MOSI",
        "ui[5]": "SPI_CS",
        "ui[6]": "RUN",
        "ui[7]": "MODE",
        "uo[0]": "OUT8B0",
        "uo[1]": "OUT8B1",
        "uo[2]": "OUT8B2",
        "uo[3]": "OUT8B3",
        "uo[4]": "OUT8B4",
        "uo[5]": "OUT8B5",
        "uo[6]": "OUT8B6",
        "uo[7]": "OUT8B7",
        "uio[0]": "STATE0",
        "uio[1]": "STATE1",
        "uio[2]": "STATE2",
        "uio[3]": "STATE3",
        "uio[4]": "OUT3B0",
        "uio[5]": "OUT3B1",
        "uio[6]": "OUT3B2",
        "uio[7]": "SPI_MISO"
      }
    },
    {
      "macro": "tt_um_gamepad_pmod_demo",
      "address": 967,
      "title": "Gamepad Pmod Demo",
      "author": "Uri Shaked",
      "description": "Gamepad Pmod + Tiny VGA demo from VGA Playground",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt10-gamepad-pmod-demo",
      "commit": "416ad7e62bab0f01e933616bcc96f5553fad3019",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "gamepad_latch",
        "ui[5]": "gamepad_clk",
        "ui[6]": "gamepad_data",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_gray_sobel",
      "address": 200,
      "title": "Gray scale and Sobel filter for Edge Detection",
      "author": "Diana Natali Maldonado Ramirez",
      "description": "Grayscale and Sobel filter.",
      "clock_hz": 100000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/DianaNatali/ttsky_grayscale_sobel",
      "commit": "3c29d596feb5e6b8462c912d18a972457346aa74",
      "pinout": {
        "ui[0]": "spi_cs_i",
        "ui[1]": "spi_sck_i",
        "ui[2]": "spi_sdi_i",
        "ui[3]": "select_process_i[0]",
        "ui[4]": "select_process_i[1]",
        "ui[5]": "start_sobel_i",
        "ui[6]": "sa_en_i",
        "ui[7]": "frame_done_i",
        "uo[0]": "select_process_i[0]",
        "uo[1]": "select_process_i[1]",
        "uo[2]": "ena",
        "uo[3]": "spi_sdo_o",
        "uo[4]": "lfsr_done",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "LFSR_enable_i",
        "uio[1]": "seed_stop_i",
        "uio[2]": "lfsr_en_i",
        "uio[3]": "lfsr_mode_sel_i",
        "uio[4]": "sa_clear_i",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_hack_cpu",
      "address": 1002,
      "title": "HACK CPU",
      "author": "Dantong LUO, Nour MHANNA, Charbel SAAD",
      "description": "A 16-bit CPU based on the HACK architecture",
      "clock_hz": 12500000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/bugavix/hack_cpu",
      "commit": "ff632ff47b41f91d35cf008cfb1e32c23d3f50ea",
      "pinout": {
        "ui[0]": "external halt signal (to use when debugging)",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "GPIO21 - RAM CS",
        "uio[1]": "GPIO22 - RAM MOSI",
        "uio[2]": "GPIO23 - RAM MISO",
        "uio[3]": "GPIO24 - RAM SCK",
        "uio[4]": "DEBUG CS",
        "uio[5]": "DEBUG MOSI",
        "uio[6]": "DEBUG MISO",
        "uio[7]": "DEBUG SCK"
      }
    },
    {
      "macro": "tt_um_htfab_split_flops",
      "address": 194,
      "title": "Split Flops",
      "author": "htfab",
      "description": "Experiment with two-phase nonoverlapping clocks",
      "clock_hz": 50000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/htfab/ttsky25a-split-flops",
      "commit": "43baec6c3367d2f46030309e7e9003435af8fe16",
      "pinout": {
        "ui[0]": "red button",
        "ui[1]": "green button",
        "ui[2]": "blue button",
        "ui[3]": "yellow button",
        "ui[4]": "display polarity",
        "ui[5]": "clock phase 2",
        "ui[6]": "scan chain enable",
        "ui[7]": "scan chain input",
        "uo[0]": "red led",
        "uo[1]": "green led",
        "uo[2]": "yellow led",
        "uo[3]": "blue led",
        "uo[4]": "speaker",
        "uo[5]": "digit 1",
        "uo[6]": "digit 2",
        "uo[7]": "scan chain output",
        "uio[0]": "segment A",
        "uio[1]": "segment B",
        "uio[2]": "segment C",
        "uio[3]": "segment D",
        "uio[4]": "segment E",
        "uio[5]": "segment F",
        "uio[6]": "segment G",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_jamesrosssharp_1bitam",
      "address": 484,
      "title": "1bit_am_sdr",
      "author": "James Sharp",
      "description": "1bit AM software defined radio",
      "clock_hz": 50000000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/jamesrosssharp/tt09-am-sdr",
      "commit": "d874fc4a6fee59b6a94ad066af7c555eb5fb678a",
      "pinout": {
        "ui[0]": "COMP_IN",
        "ui[1]": "SPI_MOSI",
        "ui[2]": "SPI_SCK",
        "ui[3]": "SPI_CSb",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "COMP_OUT",
        "uo[1]": "PWM",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_jamesrosssharp_tiny1bitam",
      "address": 268,
      "title": "Tiny 1-bit AM Radio",
      "author": "James Ross Sharp",
      "description": "Syntehsizable 1-bit AM radio core",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/jamesrosssharp/tt09-smaller-am-sdr",
      "commit": "e2d975204fe41cb3593c174cf813f4e71cd76de6",
      "pinout": {
        "ui[0]": "COMP_IN",
        "ui[1]": "SPI_MOSI",
        "ui[2]": "SPI_SCK",
        "ui[3]": "SPI_CSb",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "COMP_OUT",
        "uo[1]": "PWM",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_javibajocero_top",
      "address": 161,
      "title": "MarcoPolo",
      "author": "Javier Munoz Saez",
      "description": "when this UART receives 'MARCO' answers '\n\rPOLO!\n\r'",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/javiBajoCero/ttsky-verilog-template",
      "commit": "8c6e4170ce1f82030b36783cadcb41df45e6b8b4",
      "pinout": {
        "ui[0]": "uartRX",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "uartTX",
        "uo[1]": "baud_tick_rx",
        "uo[2]": "baud_tick_tx",
        "uo[3]": "trigger_send",
        "uo[4]": "uartTxbusy",
        "uo[5]": "led_data_out",
        "uo[6]": "0",
        "uo[7]": "0",
        "uio[0]": "unused",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_jnw_wulffern",
      "address": 258,
      "title": "JNW-TEMP",
      "author": "Carsten Wulff",
      "description": "Two Temperature Sensors from NTNU students",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/wulffern/jnw-tt-2025",
      "commit": "5f225c7996d41a3be8f74cb84a86565e1319ede8",
      "pinout": {
        "ui[0]": "ResetTemp06",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Pwm07",
        "uo[1]": "Out06",
        "uo[2]": "Pwm06",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_jonathan_thing_vga",
      "address": 431,
      "title": "VGA-Video-Player",
      "author": "Jonathan Cai, Isaac Chan",
      "description": "VGA video and audio player",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/JonathanThing/ECE-298A-VGA-Video-Player",
      "commit": "d342537ec4ba034f5df846fbac5852d9e69786fe",
      "pinout": {
        "ui[0]": "IO_2",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "IO_1",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R_1",
        "uo[1]": "G_0",
        "uo[2]": "G_2",
        "uo[3]": "B_1",
        "uo[4]": "R_0",
        "uo[5]": "R_2",
        "uo[6]": "G_1",
        "uo[7]": "B_0",
        "uio[0]": "VSYNC",
        "uio[1]": "PWM",
        "uio[2]": "SCLK",
        "uio[3]": "IO_0",
        "uio[4]": "HSYNC",
        "uio[5]": "",
        "uio[6]": "IO_3",
        "uio[7]": "nCS"
      }
    },
    {
      "macro": "tt_um_jonnor_pdm_microphone",
      "address": 140,
      "title": "PDM microphone",
      "author": "Jon Nordby & Martin Stensg\u00e5rd",
      "description": "PDM microphone",
      "clock_hz": 64000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/jonnor/ttsky25a-pdm-microphone",
      "commit": "fc0f1ffcbcef72c35a22759b0bd3328df996d52f",
      "pinout": {
        "ui[0]": "PDM clock",
        "ui[1]": "PDM data",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_jyblue1001_pll",
      "address": 525,
      "title": "Analog PLL",
      "author": "Jae Young Yoon",
      "description": "2.4GHz targeted frequency synthesizer PLL",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        10,
        11
      ],
      "repo": "https://github.com/jyblue1001/ttsky-analog-PLL",
      "commit": "d77f5233a19eea522c2e7934fe2de25bac496c49",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "REF_FREQ",
        "ua[1]": "OUT_FREQ",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_kb2ghz_xalu",
      "address": 420,
      "title": "4-bit minicomputer ALU",
      "author": "Mike McCann",
      "description": "this design provides basic arithmetic and logic functions",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/kb2ghz/tt_um_kb2ghz_xalu",
      "commit": "1d0c010477281da459c8c436475d07fe613d76dc",
      "pinout": {
        "ui[0]": "da0",
        "ui[1]": "da1",
        "ui[2]": "da2",
        "ui[3]": "da3",
        "ui[4]": "db0",
        "ui[5]": "db1",
        "ui[6]": "db2",
        "ui[7]": "db3",
        "uo[0]": "d0",
        "uo[1]": "d1",
        "uo[2]": "d2",
        "uo[3]": "d3",
        "uo[4]": "co_left",
        "uo[5]": "co_right",
        "uo[6]": "EQU",
        "uo[7]": "ZERO",
        "uio[0]": "NEG_ZERO",
        "uio[1]": "ci_left",
        "uio[2]": "ci_right",
        "uio[3]": "COM",
        "uio[4]": "F0",
        "uio[5]": "F1",
        "uio[6]": "F2",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_kianV_rv32ima_uLinux_SoC",
      "address": 846,
      "title": "KianV uLinux SoC",
      "author": "Hirosh Dabui",
      "description": "A RISC-V ASIC that can boot \u03bcLinux.",
      "clock_hz": 0,
      "tiles": "8x2",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/KianV-RV32IMA-RISC-V-uLinux-SoC",
      "commit": "2878bee2545d2ee02f16e4b0f17d784585b475af",
      "pinout": {
        "ui[0]": "gpio[0]",
        "ui[1]": "gpio[1]",
        "ui[2]": "spi_sio1_so_miso0",
        "ui[3]": "uart_rx",
        "ui[4]": "gpio[4]",
        "ui[5]": "gpio[5]",
        "ui[6]": "gpio[6]",
        "ui[7]": "gpio[7]",
        "uo[0]": "spi_cen0",
        "uo[1]": "spi_sclk0",
        "uo[2]": "spi_sio0_si_mosi0",
        "uo[3]": "gpio[3]",
        "uo[4]": "uart_tx",
        "uo[5]": "gpio[5]",
        "uo[6]": "gpio[6]",
        "uo[7]": "gpio[7]",
        "uio[0]": "ce0 flash",
        "uio[1]": "sio0",
        "uio[2]": "sio1",
        "uio[3]": "sck",
        "uio[4]": "sd2",
        "uio[5]": "sd3",
        "uio[6]": "cs1 psram",
        "uio[7]": "cs2 psram"
      }
    },
    {
      "macro": "tt_um_kishorenetheti_tt16_mips",
      "address": 303,
      "title": "8-bit MIPS Single Cycle Processor",
      "author": "Kishore Netheti",
      "description": "A complete 8-bit MIPS single-cycle processor with 8 instruction types including arithmetic, logical, memory, and jump operations",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tapeoutcutm/Single-Cycle-8-bit-MIPS-Processor-Design-in-Verilog",
      "commit": "f8846410180522df6ea9ddddc204a6e0bf1eff0d",
      "pinout": {
        "ui[0]": "Unused Input",
        "ui[1]": "Unused Input",
        "ui[2]": "Unused Input",
        "ui[3]": "Unused Input",
        "ui[4]": "Unused Input",
        "ui[5]": "Unused Input",
        "ui[6]": "Unused Input",
        "ui[7]": "Unused Input",
        "uo[0]": "ALU_out[0] - ALU Output Bit 0",
        "uo[1]": "ALU_out[1] - ALU Output Bit 1",
        "uo[2]": "ALU_out[2] - ALU Output Bit 2",
        "uo[3]": "ALU_out[3] - ALU Output Bit 3",
        "uo[4]": "ALU_out[4] - ALU Output Bit 4",
        "uo[5]": "ALU_out[5] - ALU Output Bit 5",
        "uo[6]": "ALU_out[6] - ALU Output Bit 6",
        "uo[7]": "ALU_out[7] - ALU Output Bit 7",
        "uio[0]": "PC[0] - Program Counter Bit 0",
        "uio[1]": "PC[1] - Program Counter Bit 1",
        "uio[2]": "PC[2] - Program Counter Bit 2",
        "uio[3]": "PC[3] - Program Counter Bit 3",
        "uio[4]": "Unused Output (tied to 0)",
        "uio[5]": "Unused Output (tied to 0)",
        "uio[6]": "Unused Output (tied to 0)",
        "uio[7]": "Unused Output (tied to 0)"
      }
    },
    {
      "macro": "tt_um_krisjdev_manchester_baby",
      "address": 686,
      "title": "Manchester Baby",
      "author": "Kristaps Jurkans",
      "description": "Modern Manchester Baby computer implementation",
      "clock_hz": 1000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/diy-ic/tt-manchester-baby",
      "commit": "27d3080ae1f5abfe9c1785c32e0ef47fc211485c",
      "pinout": {
        "ui[0]": "data_in[0]",
        "ui[1]": "data_in[1]",
        "ui[2]": "data_in[2]",
        "ui[3]": "data_in[3]",
        "ui[4]": "data_in[4]",
        "ui[5]": "data_in[5]",
        "ui[6]": "data_in[6]",
        "ui[7]": "data_in[7]",
        "uo[0]": "data_out[0]",
        "uo[1]": "data_out[1]",
        "uo[2]": "data_out[2]",
        "uo[3]": "data_out[3]",
        "uo[4]": "data_out[4]",
        "uo[5]": "data_out[5]",
        "uo[6]": "data_out[6]",
        "uo[7]": "data_out[7]",
        "uio[0]": "(in) PTP A control signal",
        "uio[1]": "(in) PTP B control signal",
        "uio[2]": "(in) PTP reset_n",
        "uio[3]": "(in) Force debug values on PTP A",
        "uio[4]": "(in) PTP serialise data",
        "uio[5]": "",
        "uio[6]": "(out) Stop Lamp",
        "uio[7]": "(out) Baby RAM read/write signal"
      }
    },
    {
      "macro": "tt_um_lcd_controller_Andres078",
      "address": 553,
      "title": "LCD_controller",
      "author": "Andres",
      "description": "Controls a lCD display 16x2 in order to show a funny message",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Andres078/ttsky-verilog-template",
      "commit": "bd4917ae3308053f4681a6f9136a84422cf55f34",
      "pinout": {
        "ui[0]": "clk",
        "ui[1]": "reset",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "rs",
        "uo[1]": "en",
        "uo[2]": "data_0",
        "uo[3]": "data_1",
        "uo[4]": "data_2",
        "uo[5]": "data_3",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_led_matrix_driver",
      "address": 47,
      "title": "SPI LED Matrix Driver",
      "author": "Daniel Theunissen",
      "description": "SPI device that drives a matrix (or strip) of WS2812B LEDs",
      "clock_hz": 12000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/daniel-theunissen/tt-sky25a-led-matrix-driver",
      "commit": "513509a9d6478dca52b037fbd93689780417ff73",
      "pinout": {
        "ui[0]": "SCK",
        "ui[1]": "SDI",
        "ui[2]": "CS",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "DIN",
        "uo[1]": "LED1",
        "uo[2]": "LED2",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_lfsr_stevej",
      "address": 289,
      "title": "Linear Feedback Shift Register",
      "author": "Steve Jenson <stevej@gmail.com>",
      "description": "An implementation of a Linear Feedback Shift Register for TT09",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/stevej/tt09-lfsr-stevej",
      "commit": "22d9e245718e103e16b4f39ba240b06fe2009a68",
      "pinout": {
        "ui[0]": "Seed Bit 1",
        "ui[1]": "Seed Bit 2",
        "ui[2]": "Seed Bit 3",
        "ui[3]": "Seed Bit 4",
        "ui[4]": "Seed Bit 5",
        "ui[5]": "Seed Bit 6",
        "ui[6]": "Seed Bit 7",
        "ui[7]": "Seed Bit 8",
        "uo[0]": "LFSR Bit 1",
        "uo[1]": "LFSR Bit 2",
        "uo[2]": "LFSR Bit 3",
        "uo[3]": "LFSR Bit 4",
        "uo[4]": "LFSR Bit 5",
        "uo[5]": "LFSR Bit 6",
        "uo[6]": "LFSR Bit 7",
        "uo[7]": "LFSR Bit 8",
        "uio[0]": "Write Enable",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_librelane3_test",
      "address": 909,
      "title": "Tiny Tapeout LibreLane 3 Test",
      "author": "Tiny Tapeout",
      "description": "Factory test module, hardened with LibreLane 3.0.0.dev38",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/ttsky25a-librelane3-test",
      "commit": "933ff7be292f08c54a187836092d434078a1c9f7",
      "pinout": {
        "ui[0]": "sel / in_a[0]",
        "ui[1]": "in_a[1]",
        "ui[2]": "in_a[2]",
        "ui[3]": "in_a[3]",
        "ui[4]": "in_a[4]",
        "ui[5]": "in_a[5]",
        "ui[6]": "in_a[6]",
        "ui[7]": "in_a[7]",
        "uo[0]": "output[0] / counter[0]",
        "uo[1]": "output[1] / counter[1]",
        "uo[2]": "output[2] / counter[2]",
        "uo[3]": "output[3] / counter[3]",
        "uo[4]": "output[4] / counter[4]",
        "uo[5]": "output[5] / counter[5]",
        "uo[6]": "output[6] / counter[6]",
        "uo[7]": "output[7] / counter[7]",
        "uio[0]": "in_b[0] / counter[0]",
        "uio[1]": "in_b[1] / counter[1]",
        "uio[2]": "in_b[2] / counter[2]",
        "uio[3]": "in_b[3] / counter[3]",
        "uio[4]": "in_b[4] / counter[4]",
        "uio[5]": "in_b[5] / counter[5]",
        "uio[6]": "in_b[6] / counter[6]",
        "uio[7]": "in_b[7] / counter[7]"
      }
    },
    {
      "macro": "tt_um_limpix31_r0",
      "address": 170,
      "title": "VGA Human Reaction Meter",
      "author": "Danil Karpenko",
      "description": "Ultra-precise human reaction meter",
      "clock_hz": 40000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/LIMPIX31/tt-r0",
      "commit": "a12b25e1be5506dc51c00a7b98ebfe3813c73462",
      "pinout": {
        "ui[0]": "btn_n",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "vsync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "hsync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_log_afpm",
      "address": 36,
      "title": "16-bit Logarithmic Approximate Floating Point Multiplier",
      "author": "Anwesh Rao, B S Gurucharan, Shreyas M Iliger, Tushar M, Shylashree N, RV College of Engineering",
      "description": "A 16-bit floating-point multiplier utilizing logarithmic approximation to achieve fast and power-efficient floating-point multiplication with reduced hardware.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE-Shylashree/TT10_LogAFPM-16",
      "commit": "77e613cf8b75eccd71cb9875876d41c77cfd6126",
      "pinout": {
        "ui[0]": "A[0]/A[8]",
        "ui[1]": "A[1]/A[9]",
        "ui[2]": "A[2]/A[10]",
        "ui[3]": "A[3]/A[11]",
        "ui[4]": "A[4]/A[12]",
        "ui[5]": "A[5]/A[13]",
        "ui[6]": "A[6]/A[14]",
        "ui[7]": "A[7]/A[15]",
        "uo[0]": "P[0]/P[8]",
        "uo[1]": "P[1]/P[9]",
        "uo[2]": "P[2]/P[10]",
        "uo[3]": "P[3]/P[11]",
        "uo[4]": "P[4]/P[12]",
        "uo[5]": "P[5]/P[13]",
        "uo[6]": "P[6]/P[14]",
        "uo[7]": "P[7]/P[15]",
        "uio[0]": "B[0]/B[8]",
        "uio[1]": "B[1]/B[9]",
        "uio[2]": "B[2]/B[10]",
        "uio[3]": "B[3]/B[11]",
        "uio[4]": "B[4]/B[12]",
        "uio[5]": "B[5]/B[13]",
        "uio[6]": "B[6]/B[14]",
        "uio[7]": "B[7]/B[15]"
      }
    },
    {
      "macro": "tt_um_mac",
      "address": 45,
      "title": "MAC",
      "author": "Mahaa Santeep G, Shylashree N, Ravish Aradhya H V, RV College Of Engineering, Sneha R V, PES University",
      "description": "Design and Implementation of MAC Unit Using Dadda Multiplier and Kogge-Stone Adder",
      "clock_hz": 100,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE/TT8-MAC",
      "commit": "f90a883b02084299de0579ecadd1ef1d24e1a9fb",
      "pinout": {
        "ui[0]": "ui_in[[0]",
        "ui[1]": "ui_in[[1]",
        "ui[2]": "ui_in[[2]",
        "ui[3]": "ui_in[[3]",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_in[0]",
        "uio[1]": "uio_in[1]",
        "uio[2]": "uio_in[2]",
        "uio[3]": "uio_in[3]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_mac_spst_tiny",
      "address": 422,
      "title": "Low Power and Enhanced Speed Multiplier, Accumulator with SPST Adder",
      "author": "tinytapeout cutm",
      "description": "Multiply-accumulate unit with tri-state upper byte IO for Tiny Tapeout",
      "clock_hz": 100000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tapeoutcutm/array_multiplier",
      "commit": "9c4b2feb0a60007fdbee38653f904b94aace478e",
      "pinout": {
        "ui[0]": "in_a[0]",
        "ui[1]": "in_a[1]",
        "ui[2]": "in_a[2]",
        "ui[3]": "in_a[3]",
        "ui[4]": "in_a[4]",
        "ui[5]": "in_a[5]",
        "ui[6]": "in_a[6]",
        "ui[7]": "in_a[7]",
        "uo[0]": "out_low[0]",
        "uo[1]": "out_low[1]",
        "uo[2]": "out_low[2]",
        "uo[3]": "out_low[3]",
        "uo[4]": "out_low[4]",
        "uo[5]": "out_low[5]",
        "uo[6]": "out_low[6]",
        "uo[7]": "out_low[7]",
        "uio[0]": "io_high[0]",
        "uio[1]": "io_high[1]",
        "uio[2]": "io_high[2]",
        "uio[3]": "io_high[3]",
        "uio[4]": "io_high[4]",
        "uio[5]": "io_high[5]",
        "uio[6]": "io_high[6]",
        "uio[7]": "io_high[7]"
      }
    },
    {
      "macro": "tt_um_markgarnold_pdp8",
      "address": 546,
      "title": "Serial PDP8",
      "author": "Mark G. Arnold",
      "description": "Bit-serial PDP8 adapted from Verilog Digital Computer Design; one-hot states generated by vito",
      "clock_hz": 50,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/markgarnold/spdp7",
      "commit": "97e2938754f08a648f96391e711851f876695de1",
      "pinout": {
        "ui[0]": "membus",
        "ui[1]": "contin",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "ma[0]",
        "uo[1]": "ma[1]",
        "uo[2]": "ma[2]",
        "uo[3]": "ma[3]",
        "uo[4]": "ma[4]",
        "uo[5]": "ma[5]",
        "uo[6]": "ma[6]",
        "uo[7]": "halt",
        "uio[0]": "ba[0]",
        "uio[1]": "ba[1]",
        "uio[2]": "ba[2]",
        "uio[3]": "ba[3]",
        "uio[4]": "mb",
        "uio[5]": "write",
        "uio[6]": "unused",
        "uio[7]": "unused"
      }
    },
    {
      "macro": "tt_um_marxkar_jtag",
      "address": 1004,
      "title": "JTAG CONTROLLER",
      "author": "Sakthi and Shailendher",
      "description": "Circuit tester",
      "clock_hz": 5,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Marxkar/ttsky-verilog-temp",
      "commit": "d0a463503932b2e81e0d293c42c44a6fd2fe05df",
      "pinout": {
        "ui[0]": "TDI",
        "ui[1]": "TMS",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "TDO",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_matrag_chirp_top",
      "address": 320,
      "title": "Tiny Tapeout Chirp Modulator",
      "author": "M. R.",
      "description": "This digital circuit will accept a UART input Byte and produce a parallel bus output with a chirp waveform for that Byte",
      "clock_hz": 10000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/Elettronica-UnivAQ/ttsky-verilog-tt-chirp",
      "commit": "dc092af7c0342703101469570683196508397f3b",
      "pinout": {
        "ui[0]": "UART RX",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "o_data_0(LSB)",
        "uo[1]": "o_data_1",
        "uo[2]": "o_data_2",
        "uo[3]": "o_data_3",
        "uo[4]": "o_data_4",
        "uo[5]": "o_data_5",
        "uo[6]": "o_data_6",
        "uo[7]": "o_data_7(MSB)",
        "uio[0]": "o_done(Chirp Done)",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_mattvenn_analog_ring_osc",
      "address": 782,
      "title": "Ring Oscillators",
      "author": "Matt Venn",
      "description": "Ring Oscillators using analog output pins",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        10,
        11
      ],
      "repo": "https://github.com/mattvenn/tt08-analog-ring-osc",
      "commit": "f636dbb3f6512dc0eed800df496370051279ab51",
      "pinout": {
        "ui[0]": "Enable ring 1",
        "ui[1]": "Enable ring 2",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "ring_oscillator1",
        "uo[1]": "ring_oscillator2",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "ring0",
        "ua[1]": "ring1",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_mattvenn_r2r_dac_3v3",
      "address": 776,
      "title": "Analog 8 bit 3.3v R2R DAC",
      "author": "Matt Venn",
      "description": "A simple 8 bit DAC with a sine waveform driver and 3.3v output",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        10
      ],
      "repo": "https://github.com/mattvenn/tt08-analog-r2r-dac-3v3",
      "commit": "523b41b04e391aa33845a56d9ff48911973ecad8",
      "pinout": {
        "ui[0]": "bit 0",
        "ui[1]": "bit 1",
        "ui[2]": "bit 2",
        "ui[3]": "bit 3",
        "ui[4]": "bit 4",
        "ui[5]": "bit 5",
        "ui[6]": "bit 6",
        "ui[7]": "bit 7",
        "uo[0]": "count zero",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "external data",
        "uio[1]": "load divider",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "DAC output",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_mattvenn_spi_test",
      "address": 4,
      "title": "SPI test",
      "author": "Matt Venn",
      "description": "SPI test design",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/tt10-spi-test",
      "commit": "e52fe56d07e68f0d35c7e447f90507977fe706db",
      "pinout": {
        "ui[0]": "cpol",
        "ui[1]": "cpha",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "7seg",
        "uo[1]": "7seg",
        "uo[2]": "7seg",
        "uo[3]": "7seg",
        "uo[4]": "7seg",
        "uo[5]": "7seg",
        "uo[6]": "7seg",
        "uo[7]": "7seg",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "spi_miso",
        "uio[4]": "spi_cs_n",
        "uio[5]": "spi_clk",
        "uio[6]": "spi_mosi",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_mbikovitsky_audio_player",
      "address": 780,
      "title": "Simple audio player",
      "author": "Michael Bikovitsky",
      "description": "Plays audio from an SPI flash chip",
      "clock_hz": 1536000,
      "tiles": "1x2",
      "analog_pins": [
        10,
        11
      ],
      "repo": "https://github.com/mbikovitsky/tt10-analog",
      "commit": "469aaa2282f218e37463c42f723411c14dac67ec",
      "pinout": {
        "ui[0]": "Play/pause (DAC passthrough / SPI address)",
        "ui[1]": "(DAC passthrough / SPI address)",
        "ui[2]": "(DAC passthrough / SPI address)",
        "ui[3]": "(DAC passthrough / SPI address)",
        "ui[4]": "(DAC passthrough / SPI address)",
        "ui[5]": "(DAC passthrough / SPI address)",
        "ui[6]": "(DAC passthrough / SPI address)",
        "ui[7]": "(DAC passthrough / SPI address)",
        "uo[0]": "Channel passthrough (SPI data output)",
        "uo[1]": "Channel passthrough (SPI data output)",
        "uo[2]": "Channel passthrough (SPI data output)",
        "uo[3]": "Channel passthrough (SPI data output)",
        "uo[4]": "Channel passthrough (SPI data output)",
        "uo[5]": "Channel passthrough (SPI data output)",
        "uo[6]": "Channel passthrough (SPI data output)",
        "uo[7]": "Channel passthrough (SPI data output)",
        "uio[0]": "CS#",
        "uio[1]": "IO0",
        "uio[2]": "IO1",
        "uio[3]": "SCLK",
        "uio[4]": "IO2 / Playback indication (SPI data valid)",
        "uio[5]": "IO3 (SPI read enable)",
        "uio[6]": "Mode select [0]",
        "uio[7]": "Mode select [1]",
        "ua[0]": "Right channel",
        "ua[1]": "Left channel",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_mbist",
      "address": 37,
      "title": "Design of SRAM BIST",
      "author": "Surabhi A S, Gokul Krishnan V, G R Deepakkumar, Bhoomika K M, Vedashree B S, Shylashree N, RV College of Engineering, Bengaluru",
      "description": "Design of SRAM BIST",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE/TT10_MBIST",
      "commit": "7490e2a65530585e0debf3a4ca5cf52f5fd87bf2",
      "pinout": {
        "ui[0]": "DATA_IN[0]",
        "ui[1]": "DATA_IN[1]",
        "ui[2]": "DATA_IN[2]",
        "ui[3]": "DATA_IN[3]",
        "ui[4]": "MODE[0]",
        "ui[5]": "MODE[1]",
        "ui[6]": "WRITE_EN",
        "ui[7]": "START",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "FAIL",
        "uo[7]": "DONE",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_mcs4_cpu",
      "address": 39,
      "title": "MCS-4 4004 CPU",
      "author": "Munetomo Maruyama",
      "description": "MCS-4 4004 CPU",
      "clock_hz": 750000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/munetomo-maruyama/ttsky25a_MCS4_CPU",
      "commit": "107eb923c46b7aca6b81936c5a5c375ce94d9a18",
      "pinout": {
        "ui[0]": "TEST",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "SYNC_N",
        "uo[1]": "CM_ROM_N",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "CM_RAM_N[0]",
        "uo[5]": "CM_RAM_N[1]",
        "uo[6]": "CM_RAM_N[2]",
        "uo[7]": "CM_RAM_N[3]",
        "uio[0]": "DATA[0]",
        "uio[1]": "DATA[1]",
        "uio[2]": "DATA[2]",
        "uio[3]": "DATA[3]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_micro_tiles_container",
      "address": 969,
      "title": "Micro tile container",
      "author": "Uri Shaked",
      "description": "Experimental microtile container",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt-micro-tiles-container",
      "commit": "7c865eb47a529603950695ac1a6f41f6c73bf004",
      "pinout": {
        "ui[0]": "in[0]",
        "ui[1]": "in[1]",
        "ui[2]": "in[2]",
        "ui[3]": "in[3]",
        "ui[4]": "in[4]",
        "ui[5]": "in[5]",
        "ui[6]": "in[6]",
        "ui[7]": "in[7]",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "sel[0]",
        "uio[1]": "sel[1]",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_micro_tiles_container_group2",
      "address": 44,
      "title": "Micro tile container (group 2)",
      "author": "Uri Shaked",
      "description": "Experimental microtile container",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt08-micro-tiles-container-group2",
      "commit": "94dc894a789e7e3273e5077a11b4ea235b98b7aa",
      "pinout": {
        "ui[0]": "in[0]",
        "ui[1]": "in[1]",
        "ui[2]": "in[2]",
        "ui[3]": "in[3]",
        "ui[4]": "in[4]",
        "ui[5]": "in[5]",
        "ui[6]": "in[6]",
        "ui[7]": "in[7]",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "sel[0]",
        "uio[1]": "sel[1]",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_mikael",
      "address": 678,
      "title": "TinyTestOut",
      "author": "Mikael Henriksson",
      "description": "A TT test run",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/miklhh/TTSKY25a",
      "commit": "de04b109fb8f399dee660f671b64acc8d18e0345",
      "pinout": {
        "ui[0]": "in0",
        "ui[1]": "in1",
        "ui[2]": "in2",
        "ui[3]": "in3",
        "ui[4]": "in4",
        "ui[5]": "in5",
        "ui[6]": "in6",
        "ui[7]": "in7",
        "uo[0]": "out0",
        "uo[1]": "out1",
        "uo[2]": "out2",
        "uo[3]": "out3",
        "uo[4]": "out4",
        "uo[5]": "out5",
        "uo[6]": "out6",
        "uo[7]": "out7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_minirisc",
      "address": 557,
      "title": "MiniRISC-FSM",
      "author": "AGhani - Emirates Chips Competence - Design1",
      "description": "Minimal RISC-style FSM core with LOAD, ADD, SUB, and STORE instructions",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/arfanghani/ttsky25a_RAK_verilog_design2",
      "commit": "8aa48274ddef21f2fe6f1837862d5170ac54d500",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "uio_out[0]",
        "uio[1]": "uio_out[1]",
        "uio[2]": "uio_out[2]",
        "uio[3]": "uio_out[3]",
        "uio[4]": "uio_out[4]",
        "uio[5]": "uio_out[5]",
        "uio[6]": "uio_out[6]",
        "uio[7]": "uio_out[7]"
      }
    },
    {
      "macro": "tt_um_mod6_counter",
      "address": 417,
      "title": "Mod-6 Counter",
      "author": "BMSCE_T06",
      "description": "A 3-bit Mod-6 synchronous counter",
      "clock_hz": 100,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/abhi63246/BMSCE_Team6",
      "commit": "36eae8ff1eaa5d2d7d6748bcfbddf07cec6c5270",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Counter Bit 0 (LSB)",
        "uo[1]": "Counter Bit 1",
        "uo[2]": "Counter Bit 2 (MSB)",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_mosbius",
      "address": 490,
      "title": "mini mosbius",
      "author": "andrew kang",
      "description": "a mosbius style chip in a 3x2 tt slot",
      "clock_hz": 0,
      "tiles": "3x2",
      "analog_pins": [
        5,
        0,
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/andrewkkang/ttsky25a-minimosbius",
      "commit": "cfccc0edef23d26abc23f99665dc7c0686fa4ccd",
      "pinout": {
        "ui[0]": "dat_in",
        "ui[1]": "enable",
        "ui[2]": "rst_n",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "dat_out",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "bus1",
        "ua[1]": "bus2",
        "ua[2]": "bus3",
        "ua[3]": "bus4",
        "ua[4]": "bus5",
        "ua[5]": "ibias"
      }
    },
    {
      "macro": "tt_um_murmann_group",
      "address": 975,
      "title": "Decimation Filter for Incremental and Regular Delta-Sigma Modulators",
      "author": "Andrea Murillo Martinez & Jaeden Chang",
      "description": "Decimation filter that efficiently reduces oversampled data from incremental and regular delta-sigma modulators, while preserving signal accuaracy.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/andreamurillomtz/tt09-decimation_filter",
      "commit": "4c66874d5ef8f453b6230577342f08ba2466f0f1",
      "pinout": {
        "ui[0]": "X",
        "ui[1]": "type_dec",
        "ui[2]": "global_reset",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "decimation_output[8]",
        "uo[1]": "decimation_output[9]",
        "uo[2]": "decimation_output[10]",
        "uo[3]": "decimation_output[11]",
        "uo[4]": "decimation_output[12]",
        "uo[5]": "decimation_output[13]",
        "uo[6]": "decimation_output[14]",
        "uo[7]": "decimation_output[15]",
        "uio[0]": "decimation_output[0]",
        "uio[1]": "decimation_output[1]",
        "uio[2]": "decimation_output[2]",
        "uio[3]": "decimation_output[3]",
        "uio[4]": "decimation_output[4]",
        "uio[5]": "decimation_output[5]",
        "uio[6]": "decimation_output[6]",
        "uio[7]": "decimation_output[7]"
      }
    },
    {
      "macro": "tt_um_myprocessor",
      "address": 299,
      "title": "8-bit Custom Processor",
      "author": "Sandeep Panigrahi",
      "description": "Processor with PC, ALU, register file and control unit",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tapeoutcutm/8-bit-General-purpose-processor-with-ISA-Design-in-Verilog",
      "commit": "2e9bf1f93bd2fe2f0dc859ef646e738c2d7a4724",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "ALU OUT[0]",
        "uo[1]": "ALU OUT[1]",
        "uo[2]": "ALU OUT[2]",
        "uo[3]": "ALU OUT[3]",
        "uo[4]": "ALU OUT[4]",
        "uo[5]": "ALU OUT[5]",
        "uo[6]": "ALU OUT[6]",
        "uo[7]": "ALU OUT[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_nitelich_conway",
      "address": 227,
      "title": "Conway's GoL",
      "author": "nitelich",
      "description": "Conway's Game of Life with VGA out and GPIO field manip/randomize",
      "clock_hz": 25175000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/nitelich/ttsky-conway",
      "commit": "886de7d83006e675550566be9cbc08ac7e9aa3e3",
      "pinout": {
        "ui[0]": "Foreground Next (on rising edge)",
        "ui[1]": "Background Next (on rising edge)",
        "ui[2]": "Free-run Divisor[0]",
        "ui[3]": "Free-run Divisor[1]",
        "ui[4]": "Free-run Divisor[2]",
        "ui[5]": "Free-run Divisor[3]",
        "ui[6]": "External Hold",
        "ui[7]": "External Step (on rising edge)",
        "uo[0]": "VGA R[1]",
        "uo[1]": "VGA G[1]",
        "uo[2]": "VGA B[1]",
        "uo[3]": "VGA VSync",
        "uo[4]": "VGA R[0]",
        "uo[5]": "VGA G[0]",
        "uo[6]": "VGA B[0]",
        "uo[7]": "VGA HSync",
        "uio[0]": "Selection Up (Input, on rising edge)",
        "uio[1]": "Selection Down (Input, on rising edge)",
        "uio[2]": "Selection Left (Input, on rising edge)",
        "uio[3]": "Selection Right (Input, on rising edge)",
        "uio[4]": "Target State (Input)",
        "uio[5]": "Selection to Target State (Input, on rising edge)",
        "uio[6]": "Randomize All (Input, on rising edge)",
        "uio[7]": "Selection to Origin (Input, on rising edge)"
      }
    },
    {
      "macro": "tt_um_nitelich_riscyjr",
      "address": 259,
      "title": "RISCY Jr.",
      "author": "nitelich",
      "description": "An original, scratch-built 8-bit MCU design",
      "clock_hz": 9216000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/nitelich/ttsky-riscy-jr",
      "commit": "2adbbdbff9dc8d0d7ce49d097b753240f3d5cde7",
      "pinout": {
        "ui[0]": "GPI 0/EXT 0",
        "ui[1]": "GPI 1/EXT 1",
        "ui[2]": "GPI 2",
        "ui[3]": "GPI 3",
        "ui[4]": "SPI Clock to CPU Clock Divider LSB",
        "ui[5]": "SPI Clock to CPU Clock Divider MSB",
        "ui[6]": "External Hold",
        "ui[7]": "External Step",
        "uo[0]": "GPO 0",
        "uo[1]": "GPO 1",
        "uo[2]": "GPO 2",
        "uo[3]": "GPO 3",
        "uo[4]": "PWM 0",
        "uo[5]": "PWM 1",
        "uo[6]": "PSRNG",
        "uo[7]": "CPU Activity Indicator",
        "uio[0]": "SPI RAM CS (output to RP2040 GPIO21)",
        "uio[1]": "SPI RAM COPI (output to RP2040 GPIO22)",
        "uio[2]": "SPI RAM CIPO (input from RP2040 GPIO23)",
        "uio[3]": "SPI RAM SCK (output to RP2040 GPIO24)",
        "uio[4]": "UART CTS (input)",
        "uio[5]": "UART TxD (output)",
        "uio[6]": "UART RxD (input)",
        "uio[7]": "UART RTS (output)"
      }
    },
    {
      "macro": "tt_um_nvious_graphics",
      "address": 682,
      "title": "nVious Graphics",
      "author": "James Ross",
      "description": "Submission for VGA Demoscene",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jar/ttsky25a_nvious_graphics",
      "commit": "3eea5b9f2e77b8f0997246c7d440d8d9b006b3ea",
      "pinout": {
        "ui[0]": "Segment A",
        "ui[1]": "Segment B",
        "ui[2]": "Segment C",
        "ui[3]": "Segment D",
        "ui[4]": "Segment E",
        "ui[5]": "Segment F",
        "ui[6]": "Segment G",
        "ui[7]": "Segment H",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_openfpga22",
      "address": 580,
      "title": "Open FGPA 2x2 design",
      "author": "Zhenyuan Liu",
      "description": "A small 2x2 CLB fpga",
      "clock_hz": 1000000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/Secure-Embedded-Systems/ttsky-openfpga22",
      "commit": "a0bbd27ad750bc09a7b3d5da26028e70a05df1ce",
      "pinout": {
        "ui[0]": "gfpga_pad_GPIO_PAD_fm[35]",
        "ui[1]": "gfpga_pad_GPIO_PAD_fm[41]",
        "ui[2]": "gfpga_pad_GPIO_PAD_fm[34]",
        "ui[3]": "gfpga_pad_GPIO_PAD_fm[42]",
        "ui[4]": "gfpga_pad_GPIO_PAD_fm[28]",
        "ui[5]": "gfpga_pad_GPIO_PAD_fm[55]",
        "ui[6]": "gfpga_pad_GPIO_PAD_fm[33]",
        "ui[7]": "gfpga_pad_GPIO_PAD_fm[40]",
        "uo[0]": "gfpga_pad_GPIO_PAD_fm[48]",
        "uo[1]": "gfpga_pad_GPIO_PAD_fm[26]",
        "uo[2]": "ccff_tail_fm",
        "uo[3]": "gfpga_pad_GPIO_PAD_fm[11]",
        "uo[4]": "gfpga_pad_GPIO_PAD_fm[22]",
        "uo[5]": "gfpga_pad_GPIO_PAD_fm[36]",
        "uo[6]": "gfpga_pad_GPIO_PAD_fm[45]",
        "uo[7]": "gfpga_pad_GPIO_PAD_fm[63]",
        "uio[0]": "gfpga_pad_GPIO_PAD_fm[47]",
        "uio[1]": "gfpga_pad_GPIO_PAD_fm[31]",
        "uio[2]": "ccff_head_fm",
        "uio[3]": "prog_clk_fm",
        "uio[4]": "set_fm",
        "uio[5]": "gfpga_pad_GPIO_PAD_fm[0]",
        "uio[6]": "gfpga_pad_GPIO_PAD_fm[30]",
        "uio[7]": "gfpga_pad_GPIO_PAD_fm[50]"
      }
    },
    {
      "macro": "tt_um_openram_top",
      "address": 454,
      "title": "Single Port OpenRAM Testchip",
      "author": "Jesse Cirimelli-Low",
      "description": "Testchip of single port SRAM macro using two phase clocking",
      "clock_hz": 250000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/VLSIDA/tt25a_openram_testchip",
      "commit": "7007af7609a1e968139bfbe533cfc74969936d59",
      "pinout": {
        "ui[0]": "scan_in",
        "ui[1]": "scan_enable",
        "ui[2]": "scan_mode",
        "ui[3]": "sclka",
        "ui[4]": "sclkb",
        "ui[5]": "csb",
        "ui[6]": "web",
        "ui[7]": "spare_wen",
        "uo[0]": "scan_reg[0]",
        "uo[1]": "scan_reg[SCAN_WIDTH-1]",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "wmask[0]",
        "uio[1]": "wmask[1]",
        "uio[2]": "wmask[2]",
        "uio[3]": "wmask[3]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_oscillating_bones",
      "address": 265,
      "title": "Oscillating Bones",
      "author": "Uri Shaked",
      "description": "A stylish ring oscillator built from SkullFET transistors",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        8
      ],
      "repo": "https://github.com/urish/tt10-oscillating-bones",
      "commit": "499eaa8468025fa895ecd0dda295c4adee04909d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "osc_out",
        "uo[1]": "osc_div_2",
        "uo[2]": "osc_div_4",
        "uo[3]": "osc_div_8",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "osc_out_3v3",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_pchri03_levenshtein",
      "address": 162,
      "title": "Fuzzy Search Engine",
      "author": "Peter N\u00f8rlund",
      "description": "A levenshtein based fuzzy search engine",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/peter-noerlund/sky25a-levenshtein",
      "commit": "e07c0387b1743408bf55b507fd677a78b53470d6",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "SPI SS#",
        "ui[5]": "SPI SCK",
        "ui[6]": "SPI MOSI",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "SPI MISO",
        "uio[0]": "SRAM QSPI CS",
        "uio[1]": "SRAM QSPI SIO0/MOSI",
        "uio[2]": "SRAM QSPI SIO1/MISO",
        "uio[3]": "SRAM QSPI SCK",
        "uio[4]": "SRAM QSPI SIO2",
        "uio[5]": "SRAM QSPI SIO3",
        "uio[6]": "SRAM QSPI CS2",
        "uio[7]": "SRAM QSPI CS3"
      }
    },
    {
      "macro": "tt_um_pe_simonbju",
      "address": 680,
      "title": "pe",
      "author": "simonbju",
      "description": "Simple PE",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/simonbju/tiny-tapeout-orconf-25-vhdl",
      "commit": "8551792c61fc27e69855bd1d2227fc4229743de0",
      "pinout": {
        "ui[0]": "a[0]",
        "ui[1]": "a[1]",
        "ui[2]": "a[2]",
        "ui[3]": "a[3]",
        "ui[4]": "b[0]",
        "ui[5]": "b[1]",
        "ui[6]": "b[2]",
        "ui[7]": "b[3]",
        "uo[0]": "r[0]",
        "uo[1]": "r[1]",
        "uo[2]": "r[2]",
        "uo[3]": "r[3]",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "op[0]",
        "uio[1]": "op[1]",
        "uio[2]": "op[2]",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_plc_prg",
      "address": 288,
      "title": "PLC-PRG",
      "author": "Shruthi Rekhana",
      "description": "Implements a simple PLC-style programmable logic controller in Verilog.",
      "clock_hz": 1000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tapeoutcutm/Smart-Retrofit-Sollution-for-Manual-Lathe-Operation",
      "commit": "95aa868dbb4910f45403c179276d9b14992b02ba",
      "pinout": {
        "ui[0]": "IN0",
        "ui[1]": "IN1",
        "ui[2]": "IN2",
        "ui[3]": "IN3",
        "ui[4]": "IN4",
        "ui[5]": "IN5",
        "ui[6]": "IN6",
        "ui[7]": "IN7",
        "uo[0]": "OUT0",
        "uo[1]": "OUT1",
        "uo[2]": "OUT2",
        "uo[3]": "OUT3",
        "uo[4]": "OUT4",
        "uo[5]": "OUT5",
        "uo[6]": "OUT6",
        "uo[7]": "OUT7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_program_counter_top_level",
      "address": 298,
      "title": "Test Design 1",
      "author": "Evan Armoogan",
      "description": "Test design, not sure what it does yet",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Evan-Armoogan/8BitCpuPC",
      "commit": "9f5bec3ffd028c36469f9db187899a9d6ba06053",
      "pinout": {
        "ui[0]": "in_0",
        "ui[1]": "in_1",
        "ui[2]": "in_2",
        "ui[3]": "in_3",
        "ui[4]": "in_4",
        "ui[5]": "in_5",
        "ui[6]": "in_6",
        "ui[7]": "in_7",
        "uo[0]": "out_0",
        "uo[1]": "out_1",
        "uo[2]": "out_2",
        "uo[3]": "out_3",
        "uo[4]": "out_4",
        "uo[5]": "out_5",
        "uo[6]": "out_6",
        "uo[7]": "out_7",
        "uio[0]": "bidir_0",
        "uio[1]": "bidir_1",
        "uio[2]": "bidir_2",
        "uio[3]": "bidir_3",
        "uio[4]": "bidir_4",
        "uio[5]": "bidir_5",
        "uio[6]": "bidir_6",
        "uio[7]": "bidir_7"
      }
    },
    {
      "macro": "tt_um_pwen",
      "address": 41,
      "title": "Pulse Width Encoder",
      "author": "Chandan N,Gurudatt B M,Akshay Pattar,Amogh Y N,Revanna J T, Shylashree N, RV College of Engineering, Bengaluru",
      "description": "Design of Pulse Width Encoder",
      "clock_hz": 100,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE/TT10_PWEN",
      "commit": "3207687c0e5e8cba20267b6fa2d8e71cf9eba969",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_quarren42_demoscene_top",
      "address": 2,
      "title": "asic design is my passion",
      "author": "Nicholas Junker",
      "description": "baby's first asic - cheeky little text meme",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Quarren42/tt08_Quarren42_demoscene",
      "commit": "9c22f1b8e28ea984c139c0b1b73615e6966ec7cc",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_r2r_dac",
      "address": 515,
      "title": "4-bit R2R DAC",
      "author": "David Parent",
      "description": "Converts a 4-bit wide signal to an analog signal",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11
      ],
      "repo": "https://github.com/davidparent/tt09-r2r-dac",
      "commit": "fa929cd6432f6419ce9037446da12f684bbff478",
      "pinout": {
        "ui[0]": "A3",
        "ui[1]": "A2",
        "ui[2]": "A1",
        "ui[3]": "A0",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Out",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "DACOUT",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_rburt16_bias_generator",
      "address": 521,
      "title": "Bias Generator",
      "author": "Rod Burt",
      "description": "A test chip for a simple CMOS beta multiplier current source.",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11
      ],
      "repo": "https://github.com/rburt16/tt08-analog-bias-generator",
      "commit": "6d206be231e3b49c2a3b12a8af7e44fb898bc75f",
      "pinout": {
        "ui[0]": "disable 0",
        "ui[1]": "disable 1",
        "ui[2]": "disable 2",
        "ui[3]": "disable 3",
        "ui[4]": "disable 4",
        "ui[5]": "disable 5",
        "ui[6]": "disable 6",
        "ui[7]": "disable 7",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "disable 8",
        "uio[1]": "disable 9",
        "uio[2]": "disable 10",
        "uio[3]": "disable 11",
        "uio[4]": "disable 12",
        "uio[5]": "disable 13",
        "uio[6]": "disable 14",
        "uio[7]": "disable 15",
        "ua[0]": "i out",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_rburt16_opamp_3stage",
      "address": 267,
      "title": "OpAmp 3stage",
      "author": "Rod Burt",
      "description": "3stage PMOS OpAmp",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        7,
        9,
        8
      ],
      "repo": "https://github.com/rburt16/tt09-analog-opamp-3stage",
      "commit": "df3bb6ac84c52f175f521de68a4a437ee782b6c0",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "out",
        "ua[1]": "in-",
        "ua[2]": "in+",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_rebeccargb_colorbars",
      "address": 963,
      "title": "Color Bars",
      "author": "Rebecca G. Bettencourt",
      "description": "VGA demo resembling NTSC color bars",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/tt-colorbars",
      "commit": "52d014fac6a8adcda31c0b60fd66db328f62dcaf",
      "pinout": {
        "ui[0]": "show_id",
        "ui[1]": "custom_id",
        "ui[2]": "scroll_id",
        "ui[3]": "scroll_bars",
        "ui[4]": "D3 (custom id)",
        "ui[5]": "D2 (custom id)",
        "ui[6]": "D1 (custom id)",
        "ui[7]": "D0 (custom id)",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "A0 (custom id)",
        "uio[1]": "A1 (custom id)",
        "uio[2]": "A2 (custom id)",
        "uio[3]": "A3 (custom id)",
        "uio[4]": "A4 (custom id)",
        "uio[5]": "A5 (custom id)",
        "uio[6]": "A6 (custom id)",
        "uio[7]": "A7 (custom id)"
      }
    },
    {
      "macro": "tt_um_rebeccargb_dipped",
      "address": 899,
      "title": "Densely Packed Decimal",
      "author": "Rebecca G. Bettencourt",
      "description": "Convert between binary, BCD, and DPD (Densely Packed Decimal) formats for values from 0 to 999.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/tt-dipped",
      "commit": "0beeb6aa333bd8e5be4d0f79bfac8b5c24234621",
      "pinout": {
        "ui[0]": "D8",
        "ui[1]": "D9",
        "ui[2]": "D10",
        "ui[3]": "D11",
        "ui[4]": "BCD mode",
        "ui[5]": "DPD mode",
        "ui[6]": "/OE (output enable)",
        "ui[7]": "/WE (write enable)",
        "uo[0]": "Q8",
        "uo[1]": "Q9",
        "uo[2]": "Q10",
        "uo[3]": "Q11",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "BCD overflow",
        "uio[0]": "D0/Q0",
        "uio[1]": "D1/Q1",
        "uio[2]": "D2/Q2",
        "uio[3]": "D3/Q3",
        "uio[4]": "D4/Q4",
        "uio[5]": "D5/Q5",
        "uio[6]": "D6/Q6",
        "uio[7]": "D7/Q7"
      }
    },
    {
      "macro": "tt_um_rebeccargb_hardware_utf8",
      "address": 903,
      "title": "Hardware UTF Encoder/Decoder",
      "author": "Rebecca G. Bettencourt",
      "description": "Converts Unicode code points between UTF-8, UTF-16, and UTF-32.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/hardware-utf8",
      "commit": "0a7e41657e19578f721fabfe8e0ad33aa04ba197",
      "pinout": {
        "ui[0]": "/ROUT",
        "ui[1]": "ERRS, /PROPS",
        "ui[2]": "CHK",
        "ui[3]": "CBE, /CLE",
        "ui[4]": "READ, /WRITE",
        "ui[5]": "/CIO",
        "ui[6]": "/UIO",
        "ui[7]": "/BIO",
        "uo[0]": "READY; NORMAL",
        "uo[1]": "RETRY; CONTROL",
        "uo[2]": "INVALID; SURROGATE",
        "uo[3]": "OVERLONG; HIGHCHAR",
        "uo[4]": "NONUNI; PRIVATE",
        "uo[5]": "ERROR; NONCHAR",
        "uo[6]": "UEOF",
        "uo[7]": "BEOF",
        "uio[0]": "I/O LSB",
        "uio[1]": "I/O",
        "uio[2]": "I/O",
        "uio[3]": "I/O",
        "uio[4]": "I/O",
        "uio[5]": "I/O",
        "uio[6]": "I/O",
        "uio[7]": "I/O MSB"
      }
    },
    {
      "macro": "tt_um_rebeccargb_intercal_alu",
      "address": 901,
      "title": "INTERCAL ALU",
      "author": "Rebecca G. Bettencourt",
      "description": "An ALU for the five operators of the INTERCAL programming language.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/intercal-alu",
      "commit": "3fd33e7264dd2578f2b7bad0527cf3fbaea301da",
      "pinout": {
        "ui[0]": "A0 (address)",
        "ui[1]": "A1 (address)",
        "ui[2]": "S0 (selector)",
        "ui[3]": "S1 (selector)",
        "ui[4]": "S2 (selector)",
        "ui[5]": "S3 (selector)",
        "ui[6]": "/OE (output enable)",
        "ui[7]": "/WE (write enable)",
        "uo[0]": "D0",
        "uo[1]": "D1",
        "uo[2]": "D2",
        "uo[3]": "D3",
        "uo[4]": "D4",
        "uo[5]": "D5",
        "uo[6]": "D6",
        "uo[7]": "D7",
        "uio[0]": "D0",
        "uio[1]": "D1",
        "uio[2]": "D2",
        "uio[3]": "D3",
        "uio[4]": "D4",
        "uio[5]": "D5",
        "uio[6]": "D6",
        "uio[7]": "D7"
      }
    },
    {
      "macro": "tt_um_rebeccargb_styler",
      "address": 897,
      "title": "Styler",
      "author": "Rebecca G. Bettencourt",
      "description": "16x16 bitmap manipulation based on text mode attributes.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/styler",
      "commit": "6f3e7a0e68477df6ccf2f0e9dd426492d7a1319c",
      "pinout": {
        "ui[0]": "A0 (address)",
        "ui[1]": "A1 (address)",
        "ui[2]": "A2 (address)",
        "ui[3]": "faint text polarity",
        "ui[4]": "blink phase",
        "ui[5]": "cursor enable",
        "ui[6]": "/OE (output enable)",
        "ui[7]": "/WE (write enable)",
        "uo[0]": "D0",
        "uo[1]": "D1",
        "uo[2]": "D2",
        "uo[3]": "D3",
        "uo[4]": "D4",
        "uo[5]": "D5",
        "uo[6]": "D6",
        "uo[7]": "D7",
        "uio[0]": "D0",
        "uio[1]": "D1",
        "uio[2]": "D2",
        "uio[3]": "D3",
        "uio[4]": "D4",
        "uio[5]": "D5",
        "uio[6]": "D6",
        "uio[7]": "D7"
      }
    },
    {
      "macro": "tt_um_rebeccargb_tt09ball_gdsart",
      "address": 9,
      "title": "TT09Ball GDS Art",
      "author": "Rebecca G. Bettencourt",
      "description": "THE STRONGEST ROM and GDS art",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/tt09ball-gdsart",
      "commit": "5ff9bb2298af8ee6fe7bba4b555e00aaed982313",
      "pinout": {
        "ui[0]": "A0",
        "ui[1]": "A1",
        "ui[2]": "A2",
        "ui[3]": "address mode",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "a",
        "uo[1]": "b",
        "uo[2]": "c",
        "uo[3]": "d",
        "uo[4]": "e",
        "uo[5]": "f",
        "uo[6]": "g",
        "uo[7]": "dp",
        "uio[0]": "D0",
        "uio[1]": "D1",
        "uio[2]": "D2",
        "uio[3]": "D3",
        "uio[4]": "D4",
        "uio[5]": "D5",
        "uio[6]": "D6",
        "uio[7]": "D7"
      }
    },
    {
      "macro": "tt_um_rebeccargb_tt09ball_screensaver",
      "address": 423,
      "title": "TT09Ball VGA Screensaver",
      "author": "Rebecca G. Bettencourt; Uri Shaked",
      "description": "THE STRONGEST DVD style screen saver (640x480, TinyVGA Pmod)",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/tt09ball-screensaver",
      "commit": "d6a97e63566e301ac3cea0e0ffac508c80c612f4",
      "pinout": {
        "ui[0]": "tile",
        "ui[1]": "solid_color",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "gamepad_latch",
        "ui[5]": "gamepad_clk",
        "ui[6]": "gamepad_data",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_rebeccargb_universal_decoder",
      "address": 905,
      "title": "Universal Binary to Segment Decoder",
      "author": "Rebecca G. Bettencourt",
      "description": "Decodes various binary codes to various segmented displays.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/ubcd",
      "commit": "ff5a08a05c9ad7565cebfea13a5e0190026af3aa",
      "pinout": {
        "ui[0]": "A; D0; A1; A",
        "ui[1]": "B; D1; B1; B",
        "ui[2]": "C; D2; C1; C",
        "ui[3]": "D; D3; D1; D",
        "ui[4]": "V0; D4; A2; E",
        "ui[5]": "V1; D5; B2; -",
        "ui[6]": "V2; D6; C2; /VBI",
        "ui[7]": "/RBI; LC; D2; /RBI",
        "uo[0]": "Segment a; U1; a",
        "uo[1]": "Segment b; U2; b",
        "uo[2]": "Segment c; V1; c",
        "uo[3]": "Segment d; V2; d",
        "uo[4]": "Segment e; W1; e",
        "uo[5]": "Segment f; W2; f",
        "uo[6]": "Segment g; X1; g",
        "uo[7]": "/RBO; /LTR; X2; /RBO",
        "uio[0]": "X6; X6; Y1; h",
        "uio[1]": "X7; X7; Y2; V",
        "uio[2]": "X9; X9; /LT1; -",
        "uio[3]": "/LT; FS; /LT2; /LT",
        "uio[4]": "/BI (blanking input)",
        "uio[5]": "/AL (active low)",
        "uio[6]": "M0 (mode select)",
        "uio[7]": "M1 (mode select)"
      }
    },
    {
      "macro": "tt_um_rebeccargb_vga_pride",
      "address": 270,
      "title": "VGA Pride",
      "author": "Rebecca G. Bettencourt",
      "description": "A VGA demo for showing pride flags",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/tt-vga-pride",
      "commit": "87eb6b45113de53b177130ed3f7e7404040eec5d",
      "pinout": {
        "ui[0]": "address mode",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "set",
        "ui[5]": "prev",
        "ui[6]": "next",
        "ui[7]": "reset",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "A0",
        "uio[1]": "A1",
        "uio[2]": "A2",
        "uio[3]": "A3",
        "uio[4]": "A4",
        "uio[5]": "A5",
        "uio[6]": "A6",
        "uio[7]": "A7"
      }
    },
    {
      "macro": "tt_um_rebeccargb_vga_timing_experiments",
      "address": 961,
      "title": "VGA Timing Experiments",
      "author": "Rebecca G. Bettencourt",
      "description": "Configurable VGA signal generator for experimentation purposes.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RebeccaRGB/vga-timing-experiments",
      "commit": "d4e2bfbf27cb9e52eef816fb32a226e0ea1417c9",
      "pinout": {
        "ui[0]": "A0",
        "ui[1]": "A1",
        "ui[2]": "A2",
        "ui[3]": "A3",
        "ui[4]": "D8",
        "ui[5]": "D9",
        "ui[6]": "D10",
        "ui[7]": "WE",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "D0",
        "uio[1]": "D1",
        "uio[2]": "D2",
        "uio[3]": "D3",
        "uio[4]": "D4",
        "uio[5]": "D5",
        "uio[6]": "D6",
        "uio[7]": "D7"
      }
    },
    {
      "macro": "tt_um_rebelmike_incrementer",
      "address": 5,
      "title": "Incrementer",
      "author": "Mike Bell",
      "description": "A 16-bit counter using a custom half adder cell",
      "clock_hz": 10,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/ttsky25a-incrementer",
      "commit": "a1ce47c9a4725a9522d2981266b478a80af3a040",
      "pinout": {
        "ui[0]": "Increment enable",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Out 0",
        "uo[1]": "Out 1",
        "uo[2]": "Out 2",
        "uo[3]": "Out 3",
        "uo[4]": "Out 4",
        "uo[5]": "Out 5",
        "uo[6]": "Out 6",
        "uo[7]": "Out 7",
        "uio[0]": "Out 8",
        "uio[1]": "Out 9",
        "uio[2]": "Out 10",
        "uio[3]": "Out 11",
        "uio[4]": "Out 12",
        "uio[5]": "Out 13",
        "uio[6]": "Out 14",
        "uio[7]": "Out 15"
      }
    },
    {
      "macro": "tt_um_rebelmike_register",
      "address": 874,
      "title": "Circulating register test",
      "author": "Mike Bell",
      "description": "Test of a manually placed circulating register suitable for TinyQV's register file",
      "clock_hz": 10,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MichaelBell/ttsky25a-registers",
      "commit": "9b09d4f327d31a10fea546a22b605bfa2ede88bd",
      "pinout": {
        "ui[0]": "Addr read port A",
        "ui[1]": "",
        "ui[2]": "Addr read port B",
        "ui[3]": "",
        "ui[4]": "Data 0",
        "ui[5]": "Data 1",
        "ui[6]": "Data 2",
        "ui[7]": "Data 3",
        "uo[0]": "Data 0 port A",
        "uo[1]": "Data 1 port A",
        "uo[2]": "Data 2 port A",
        "uo[3]": "Data 3 port A",
        "uo[4]": "Data 0 port B",
        "uo[5]": "Data 1 port B",
        "uo[6]": "Data 2 port B",
        "uo[7]": "Data 3 port B",
        "uio[0]": "Write enable reg 0",
        "uio[1]": "Write enable reg 1",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_regfield",
      "address": 324,
      "title": "Register Field",
      "author": "pschaumont",
      "description": "Delay Path Circuit for Glitching Experiments",
      "clock_hz": 1000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/Secure-Embedded-Systems/ttsky-regfield",
      "commit": "b442bf98380ab86581bf73425d78ad7d0487bafc",
      "pinout": {
        "ui[0]": "chain0_i",
        "ui[1]": "chain1_i",
        "ui[2]": "chain2_i",
        "ui[3]": "chain3_i",
        "ui[4]": "chain4_i",
        "ui[5]": "chain5_i",
        "ui[6]": "chain6_i",
        "ui[7]": "chain7_i",
        "uo[0]": "chain0_o",
        "uo[1]": "chain1_o",
        "uo[2]": "chain2_o",
        "uo[3]": "chain3_o",
        "uo[4]": "chain4_o",
        "uo[5]": "chain5_o",
        "uo[6]": "chain6_o",
        "uo[7]": "chain7_o",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_rejunity_atari2600",
      "address": 974,
      "title": "Atari 2600",
      "author": "Renaldas Zioma",
      "description": "Replica of Atari 2600",
      "clock_hz": 25175000,
      "tiles": "8x2",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tiny-atari-2600",
      "commit": "a43c6adba7c8101f97dd768c78155161c991622f",
      "pinout": {
        "ui[0]": "UP       / Difficulty Switch P1",
        "ui[1]": "DOWN     / Difficulty Switch P2",
        "ui[2]": "LEFT     / Monochrome Switch",
        "ui[3]": "RIGHT",
        "ui[4]": "FIRE     / Gamepad LATCH",
        "ui[5]": "SELECT   / Gamepad CLK",
        "ui[6]": "Switches / Gamepad DATA",
        "ui[7]": "START",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "QSPI CS",
        "uio[1]": "QSPI SD0",
        "uio[2]": "QSPI SD1",
        "uio[3]": "QSPI SCK",
        "uio[4]": "QSPI SD2",
        "uio[5]": "QSPI SD3",
        "uio[6]": "",
        "uio[7]": "Audio (PWM)"
      }
    },
    {
      "macro": "tt_um_rejunity_lgn_mnist",
      "address": 72,
      "title": "LGN hand-written digit classifier (MNIST, 16x16 pixels)",
      "author": "Renaldas Zioma, Jogundas Armaitis",
      "description": "Experiment with Deep Differential Logic Networks",
      "clock_hz": 1000000,
      "tiles": "5x4",
      "analog_pins": [],
      "repo": "https://github.com/rejunity/tt10-lgn-mnist",
      "commit": "515888dcad02545bdc7951bb7bf5b2bd5fa8b641",
      "pinout": {
        "ui[0]": "Shift-in 8-bit input packet (LSB)",
        "ui[1]": "Shift-in 8-bit input packet",
        "ui[2]": "Shift-in 8-bit input packet",
        "ui[3]": "Shift-in 8-bit input packet",
        "ui[4]": "Shift-in 8-bit input packet",
        "ui[5]": "Shift-in 8-bit input packet",
        "ui[6]": "Shift-in 8-bit input packet",
        "ui[7]": "Shift-in 8-bit input packet (MSB)",
        "uo[0]": "Digit (LSB)",
        "uo[1]": "Digit",
        "uo[2]": "Digit",
        "uo[3]": "Digit (MSB)",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "(out) Confidence score (LSB)",
        "uio[1]": "(out) Confidence score",
        "uio[2]": "(out) Confidence score",
        "uio[3]": "(out) Confidence score",
        "uio[4]": "(out) Confidence score",
        "uio[5]": "(out) Confidence score",
        "uio[6]": "(out) Confidence score (MSB)",
        "uio[7]": "(in) /WE - Pause input"
      }
    },
    {
      "macro": "tt_um_resfuzzy",
      "address": 163,
      "title": "resfuzzy",
      "author": "roshan",
      "description": "calculation",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ROSHAN0120/tt08-verilog-resfuzzy",
      "commit": "8f09e58f65c021f73005e12280ab0e5460616953",
      "pinout": {
        "ui[0]": "Input data from the sensors",
        "ui[1]": "Input data from the sensors",
        "ui[2]": "Input data from the sensors",
        "ui[3]": "Input data from the sensors",
        "ui[4]": "Input data from the sensors",
        "ui[5]": "Input data from the sensors",
        "ui[6]": "Input data from the sensors",
        "ui[7]": "Input data from the sensors",
        "uo[0]": "risk value",
        "uo[1]": "risk value",
        "uo[2]": "risk value",
        "uo[3]": "risk value",
        "uo[4]": "risk value",
        "uo[5]": "risk value",
        "uo[6]": "risk value",
        "uo[7]": "risk value",
        "uio[0]": "sensor select",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_richardgonzalez_ped_traff_light",
      "address": 10,
      "title": "Pedestrian Traffic Light",
      "author": "Richard Gonzalez",
      "description": "Simulation of pedestrian crossing light",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RichardGAnthology/nyu-ped-traff-light",
      "commit": "0118e964fbb30256fc917440768c24e27137ac7d",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "green_light",
        "uo[1]": "red_light",
        "uo[2]": "countdown[0]",
        "uo[3]": "countdown[1]",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_robot_controller_top_module",
      "address": 910,
      "title": "AR Chip",
      "author": "S. GONEN, D. GOKCEN, K. INCIKLI, Y. YAREN, F. ALYANAK",
      "description": "An experimental design for  AR.",
      "clock_hz": 50000000,
      "tiles": "8x2",
      "analog_pins": [],
      "repo": "https://github.com/mnslaboratory/tt_ar_chip",
      "commit": "576d262e2b1c9104489fcbf3ed15c3efe401bd94",
      "pinout": {
        "ui[0]": "Enable",
        "ui[1]": "A1",
        "ui[2]": "B1",
        "ui[3]": "echo_rx",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "uart_rx",
        "uo[0]": "uart_tx",
        "uo[1]": "scl_master",
        "uo[2]": "trig_tx",
        "uo[3]": "mux_sensor_select[0]",
        "uo[4]": "mux_sensor_select[1]",
        "uo[5]": "mux_sensor_select[2]",
        "uo[6]": "mux_sensor_select[3]",
        "uo[7]": "target_reached",
        "uio[0]": "sda_master",
        "uio[1]": "motor_driver_STBY",
        "uio[2]": "pwm_out_rightmotor",
        "uio[3]": "pwm_out_leftmotor",
        "uio[4]": "direction_rightmotor_1",
        "uio[5]": "direction_rightmotor_2",
        "uio[6]": "direction_leftmotor_1",
        "uio[7]": "direction_leftmotor_2"
      }
    },
    {
      "macro": "tt_um_rom_vga_screensaver",
      "address": 202,
      "title": "VGA Screensaver with embedded bitmap ROM",
      "author": "Uri Shaked",
      "description": "64x64x6bpp Tiny Tapeout Logo bouncing around the screen (640x480, TinyVGA Pmod)",
      "clock_hz": 25175000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt-rom-vga-screensaver",
      "commit": "e9f1128deea32a8cd85ed0153086243eb804afd0",
      "pinout": {
        "ui[0]": "tile",
        "ui[1]": "double",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "gamepad_latch",
        "ui[5]": "gamepad_clk",
        "ui[6]": "gamepad_data",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_romless_cordic_engine",
      "address": 590,
      "title": "ROM-less Cordic Engine",
      "author": "Rohan Sundar, Rohan Verma and Jyotinder Singh",
      "description": "A ROM-less cordic engine that utilizes SPI-slave interface to receive four 16-bit inputs (atan\u2080, alpha, x, y) and returns three 16-bit outputs (alpha, cos\u03b8, sin\u03b8).",
      "clock_hz": 50000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/rohanverma94/ttsky-romless-cordic-engine",
      "commit": "abbc6c905eb201c258e49a85ea954b89d9633170",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "uo_out[0]",
        "uo[1]": "uo_out[1]",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_sc_bipolar_qif_neuron",
      "address": 424,
      "title": "Stochastic Computing based QIF model neuron",
      "author": "Ciecen Lestari, Ze-An Chen and David Parent",
      "description": "Models a QIF neuron using Stochastic Computing (probability based values) in bipolar format",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/CL-123-abc/tt_um_sc_bipolar_qif_neuron",
      "commit": "55fcf9d1ed5d3ed12d6ed570fb7e699e0bf3e51b",
      "pinout": {
        "ui[0]": "b_input[0]",
        "ui[1]": "b_input[1]",
        "ui[2]": "b_input[2]",
        "ui[3]": "b_input[3]",
        "ui[4]": "b_input[4]",
        "ui[5]": "b_input[5]",
        "ui[6]": "b_input[6]",
        "ui[7]": "b_input[7]",
        "uo[0]": "out_count[0]",
        "uo[1]": "out_count[1]",
        "uo[2]": "out_count[2]",
        "uo[3]": "out_count[3]",
        "uo[4]": "out_count[4]",
        "uo[5]": "out_count[5]",
        "uo[6]": "out_count[6]",
        "uo[7]": "out_count[7]",
        "uio[0]": "b_input[8]",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "out_count[8]"
      }
    },
    {
      "macro": "tt_um_semaforo",
      "address": 867,
      "title": "semaforo",
      "author": "Naomi",
      "description": "SD-2025-1",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/naldea/ttsky-verilog-template",
      "commit": "f2025c7f8a96e5f7c20ff60dae686e0cd5963a06",
      "pinout": {
        "ui[0]": "clk",
        "ui[1]": "rst",
        "ui[2]": "TA",
        "ui[3]": "TB",
        "ui[4]": "P",
        "ui[5]": "R",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "LA_0",
        "uo[1]": "LA_1",
        "uo[2]": "LB_0",
        "uo[3]": "LB_1",
        "uo[4]": "on",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_serdes",
      "address": 172,
      "title": "Secure SERDES with Integrated FIR Filtering",
      "author": "Yugasni S, Peketi Reshma, Chirukuri Uttam, Kiran Kumar J P, Sree Vidya J, Shylashree N of RV College of Engineering, Banglore",
      "description": "Efficient Lightweight Encryption Architecture with FIR Filter and SERDES-Based Serial Communication",
      "clock_hz": 100000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE/TT10_SERDES",
      "commit": "f80c2a4acd7b39498b86a98129d9f77e3076d2c5",
      "pinout": {
        "ui[0]": "serial_in (1-bit serial input data, LSB-first)",
        "ui[1]": "ena (enable the pipeline)",
        "ui[2]": "clk (system clock)",
        "ui[3]": "rst_n (active-low reset)",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "serial_out (1-bit encrypted + FIR-filtered data, MSB-first)",
        "uo[1]": "done (1-cycle pulse after each filtered/encrypted byte is transmitted)",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "parallel_out[0] (LSB of filtered/encrypted parallel byte)",
        "uio[1]": "parallel_out[1]",
        "uio[2]": "parallel_out[2]",
        "uio[3]": "parallel_out[3]",
        "uio[4]": "parallel_out[4]",
        "uio[5]": "parallel_out[5]",
        "uio[6]": "parallel_out[6]",
        "uio[7]": "parallel_out[7] (MSB of filtered/encrypted parallel byte)"
      }
    },
    {
      "macro": "tt_um_sha256_processor_dvirdc",
      "address": 934,
      "title": "SHA-256 Processor",
      "author": "Dvir Cohen",
      "description": "SHA-256 Processor",
      "clock_hz": 50000000,
      "tiles": "4x2",
      "analog_pins": [],
      "repo": "https://github.com/dvirdc/ttsky-verilog-sha256-processor",
      "commit": "dedcf80d1d4c361828c822ed54c8388efa3d772b",
      "pinout": {
        "ui[0]": "DATA_IN[0]",
        "ui[1]": "DATA_IN[1]",
        "ui[2]": "DATA_IN[2]",
        "ui[3]": "DATA_IN[3]",
        "ui[4]": "DATA_IN[4]",
        "ui[5]": "DATA_IN[5]",
        "ui[6]": "DATA_IN[6]",
        "ui[7]": "DATA_IN[7]",
        "uo[0]": "DATA_OUT[0]",
        "uo[1]": "DATA_OUT[1]",
        "uo[2]": "DATA_OUT[2]",
        "uo[3]": "DATA_OUT[3]",
        "uo[4]": "DATA_OUT[4]",
        "uo[5]": "DATA_OUT[5]",
        "uo[6]": "DATA_OUT[6]",
        "uo[7]": "DATA_OUT[7]",
        "uio[0]": "VALID_IN",
        "uio[1]": "LAST_IN",
        "uio[2]": "DVALID_OUT",
        "uio[3]": "BUSY_OUT",
        "uio[4]": "READY_OUT",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_shuangyu_top",
      "address": 554,
      "title": "Calculator",
      "author": "CNMN IPN",
      "description": "A calculator do basic calculation",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jedicomo/IPN_Abril_2",
      "commit": "930a72495447cd7bb50e53e9fbc2d8b8560145ce",
      "pinout": {
        "ui[0]": "ROW_1",
        "ui[1]": "ROW_2",
        "ui[2]": "ROW_3",
        "ui[3]": "ROW_4",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "sseg_A",
        "uo[1]": "sseg_B",
        "uo[2]": "sseg_C",
        "uo[3]": "sseg_D",
        "uo[4]": "sseg_E",
        "uo[5]": "sseg_F",
        "uo[6]": "sseg_G",
        "uo[7]": "sseg_dp",
        "uio[0]": "0",
        "uio[1]": "E_1",
        "uio[2]": "E_2",
        "uio[3]": "E_3",
        "uio[4]": "COL_1",
        "uio[5]": "COL_2",
        "uio[6]": "COL_3",
        "uio[7]": "COL_4"
      }
    },
    {
      "macro": "tt_um_simonsays",
      "address": 418,
      "title": "Simon Says",
      "author": "Noah Hu and Michelle Chen",
      "description": "Simon Says Game",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/MicheC28/ECE298A_SimonSays",
      "commit": "b78bbbdf6ac006dd6a4c5b5e8d923d5b6c09b4b9",
      "pinout": {
        "ui[0]": "input_0",
        "ui[1]": "input_1",
        "ui[2]": "input_2",
        "ui[3]": "input_3",
        "ui[4]": "input_4",
        "ui[5]": "input_5",
        "ui[6]": "input_6",
        "ui[7]": "input_7",
        "uo[0]": "output_0",
        "uo[1]": "output_1",
        "uo[2]": "output_2",
        "uo[3]": "output_3",
        "uo[4]": "output_4",
        "uo[5]": "output_5",
        "uo[6]": "output_6",
        "uo[7]": "output_7",
        "uio[0]": "bidir_0",
        "uio[1]": "bidir_1",
        "uio[2]": "bidir_2",
        "uio[3]": "bidir_3",
        "uio[4]": "bidir_4",
        "uio[5]": "bidir_5",
        "uio[6]": "bidir_6",
        "uio[7]": "bidir_7"
      }
    },
    {
      "macro": "tt_um_sjsu",
      "address": 297,
      "title": "SJSU vga  demo",
      "author": "Swaroop",
      "description": "SJSU VGA demo using bitmaps",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/swrp97/tt-vga-sjsu-bouncing",
      "commit": "82b3276c14f10db6c0b615fd6ca0c1f090835160",
      "pinout": {
        "ui[0]": "Color inversion control (1=invert colors, 0=normal)",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "Red MSB (R[1])",
        "uo[1]": "Green MSB (G[1])",
        "uo[2]": "Blue MSB (B[1])",
        "uo[3]": "Vertical sync (VSYNC)",
        "uo[4]": "Red LSB (R[0])",
        "uo[5]": "Green LSB (G[0])",
        "uo[6]": "Blue LSB (B[0])",
        "uo[7]": "Horizontal sync (HSYNC)",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_sjsu_vga_music",
      "address": 672,
      "title": "SJSU Fight Song",
      "author": "Andrea Cortez",
      "description": "VGA Code of SJSU Fight SOng",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/andreaklcortez/tt_um_sjsu_vga_music",
      "commit": "a7f979cf6d934e00a3fc52069237140967d2c673",
      "pinout": {
        "ui[0]": "A",
        "ui[1]": "B",
        "ui[2]": "Cin",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "S",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "Cout",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_sky1",
      "address": 992,
      "title": "GD Sky Processor",
      "author": "Goutham",
      "description": "8-bit basic ALU unit with 8-bit instructions",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/DivyaDarshan09/tt-sky-05",
      "commit": "e0738d3c679ef5e4f44a25011930942d538815d7",
      "pinout": {
        "ui[0]": "instr_addr[0]",
        "ui[1]": "instr_addr[1]",
        "ui[2]": "instr_addr[2]",
        "ui[3]": "instr_addr[3]",
        "ui[4]": "instr_addr[4]",
        "ui[5]": "instr_addr[5]",
        "ui[6]": "instr_addr[6]",
        "ui[7]": "we",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "instr_in[0]",
        "uio[1]": "instr_in[1]",
        "uio[2]": "instr_in[2]",
        "uio[3]": "instr_in[3]",
        "uio[4]": "instr_in[4]",
        "uio[5]": "instr_in[5]",
        "uio[6]": "instr_in[6]",
        "uio[7]": "instr_in[7]"
      }
    },
    {
      "macro": "tt_um_sleepwell",
      "address": 130,
      "title": "Sleep Well",
      "author": "Lam Pham",
      "description": "Putting You Asleep",
      "clock_hz": 25200000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/ngoclamph/tt_sjsu_vga_sleepwell",
      "commit": "88435518daf917068f46e9bd472b3d669a32b6c5",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSYNC",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSYNC",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_snn",
      "address": 164,
      "title": "Reward implemented Spiking Neural Network",
      "author": "Amon Suzuki",
      "description": "SNN learn by STDP and Rewards",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Amonsuzuki/Reward-implemented-Spiking-Neural-Network",
      "commit": "df17005dc8778143a8cdce2bafecf2096054681b",
      "pinout": {
        "ui[0]": "input1-0",
        "ui[1]": "input1-1",
        "ui[2]": "input1-2",
        "ui[3]": "input1-3",
        "ui[4]": "input2-0",
        "ui[5]": "input2-1",
        "ui[6]": "input2-2",
        "ui[7]": "input2-3",
        "uo[0]": "output1-0",
        "uo[1]": "output1-1",
        "uo[2]": "output1-2",
        "uo[3]": "output1-3",
        "uo[4]": "output1-4",
        "uo[5]": "output1-5",
        "uo[6]": "output1-6",
        "uo[7]": "output1-7",
        "uio[0]": "input3-0",
        "uio[1]": "input3-1",
        "uio[2]": "input3-2",
        "uio[3]": "input3-3",
        "uio[4]": "input4-0",
        "uio[5]": "input4-1",
        "uio[6]": "input4-2",
        "uio[7]": "input4-3"
      }
    },
    {
      "macro": "tt_um_snn_core",
      "address": 301,
      "title": "Adaptive Leaky Integrate-and-Fire spiking neuron core for edge AI",
      "author": "CUTM",
      "description": "Hardware implementation of an adaptive leaky integrate-and-fire spiking neuron for edge AI",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tapeoutcutm/lif-neuron-accelerator",
      "commit": "a9c87d02a7e126fc024e8679a23eb70986734c0e",
      "pinout": {
        "ui[0]": "Input current bit [0]",
        "ui[1]": "Input current bit [1]",
        "ui[2]": "Input current bit [2]",
        "ui[3]": "Input current bit [3]",
        "ui[4]": "Input current bit [4]",
        "ui[5]": "Input current bit [5]",
        "ui[6]": "Input current bit [6]",
        "ui[7]": "Input current bit [7]",
        "uo[0]": "State variable bit [0]",
        "uo[1]": "State variable bit [1]",
        "uo[2]": "State variable bit [2]",
        "uo[3]": "State variable bit [3]",
        "uo[4]": "State variable bit [4]",
        "uo[5]": "State variable bit [5]",
        "uo[6]": "State variable bit [6]",
        "uo[7]": "State variable bit [7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "Spike bit [7]"
      }
    },
    {
      "macro": "tt_um_sortaALUAriaMitra",
      "address": 174,
      "title": "Sorta 4-Bit ALU",
      "author": "Aria Mitra",
      "description": "This is a kind of ALU that can do 4 bit addition, subtraction, multiplication, and bitwise operators like AND, OR, and XOR.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/AriaMitra/ttsky-verilog-submission-ALUish",
      "commit": "7ef27311500149c5c9b7106fcdc11b30159df332",
      "pinout": {
        "ui[0]": "fourth bit of second number (B)",
        "ui[1]": "third bit of second number (B)",
        "ui[2]": "second bit of second number (B)",
        "ui[3]": "first bit of second number (B)",
        "ui[4]": "fourth bit of first number (A)",
        "ui[5]": "third bit of first number (A)",
        "ui[6]": "second bit of first number (A)",
        "ui[7]": "first bit of first number (A)",
        "uo[0]": "0 (unless doing multiplication - then it is part of output)",
        "uo[1]": "0 (unless doing multiplication - then it is part of output)",
        "uo[2]": "0 (unless doing multiplication - then it is part of output)",
        "uo[3]": "0 (unless doing multiplication - then it is part of output)",
        "uo[4]": "result/output",
        "uo[5]": "result/output",
        "uo[6]": "result/output",
        "uo[7]": "result/output (number)",
        "uio[0]": "XOR",
        "uio[1]": "OR",
        "uio[2]": "AND",
        "uio[3]": "Multiplication",
        "uio[4]": "Subtraction",
        "uio[5]": "Negative of B(second number)",
        "uio[6]": "Negative of A(first number)",
        "uio[7]": "Addition"
      }
    },
    {
      "macro": "tt_um_spacewar",
      "address": 294,
      "title": "Spacewar",
      "author": "Nicklaus Thompson",
      "description": "A scaled-down Spacewar game with VGA and scope XY mode.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/FangameEmpire/ttsky25a_spacewar",
      "commit": "4e16eb7e4886c6113dfadb6e437eef11823a4f6b",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "gamepad_latch",
        "ui[5]": "gamepad_clk",
        "ui[6]": "gamepad_data",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "PWM Output"
      }
    },
    {
      "macro": "tt_um_spi2ws2811x16",
      "address": 877,
      "title": "spi2ws2811x8",
      "author": "Maxime Borges <contact@maximeborg.es>",
      "description": "Translate SPI to 8x WS2811 LED strips ",
      "clock_hz": 14000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/maximeborges/ttsky-spi2ws2811x8",
      "commit": "acf9a5e5b22cae0928a1204efddb8fc94c5c83aa",
      "pinout": {
        "ui[0]": "cs",
        "ui[1]": "copi",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "led_0",
        "uo[1]": "led_1",
        "uo[2]": "led_2",
        "uo[3]": "led_3",
        "uo[4]": "led_4",
        "uo[5]": "led_5",
        "uo[6]": "led_6",
        "uo[7]": "led_7",
        "uio[0]": "led_8",
        "uio[1]": "led_9",
        "uio[2]": "led_10",
        "uio[3]": "led_11",
        "uio[4]": "led_12",
        "uio[5]": "led_13",
        "uio[6]": "led_14",
        "uio[7]": "led_15"
      }
    },
    {
      "macro": "tt_um_stochastic_addmultiply_CL123abc",
      "address": 198,
      "title": "Stochastic Multiplier, Adder and Self-Multiplier",
      "author": "Ciecen Lestari, Chih-Kuan Ho, David Parent",
      "description": "Multiplier, Adder and Self-Multiplier using stochastic computing",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/CL-123-abc/tt_um_stochastic_addmultiply_CL123abc",
      "commit": "ae89a3ed48bd1d37f3f6353b1e5293a4bd4b490d",
      "pinout": {
        "ui[0]": "serial_input_1",
        "ui[1]": "serial_input_2",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "serial_output_mul",
        "uo[1]": "serial_output_add",
        "uo[2]": "serial_output_smul",
        "uo[3]": "clk_counter_reset",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_stochastic_integrator_tt9_CL123abc",
      "address": 328,
      "title": "Stochastic Integrator",
      "author": "Ciecen Lestari, Chih-Kuan Ho, David Parent",
      "description": "Use stochastic computing to implement integration",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/CL-123-abc/tt_um_stochastic_integrator_tt9_CL123abc",
      "commit": "cea538aa6f4891f22ffc4d7c739e2aa8aeb97f6f",
      "pinout": {
        "ui[0]": "serial_input_1",
        "ui[1]": "serial_input_2",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "serial_output_seq_integrator_a",
        "uo[1]": "serial_output_seq_integrator_b",
        "uo[2]": "serial_output_seq_integrator_c",
        "uo[3]": "serial_output_system_integrator_a",
        "uo[4]": "serial_output_system_integrator_b",
        "uo[5]": "serial_output_test_integrator_a",
        "uo[6]": "serial_output_test_integrator_b",
        "uo[7]": "output_sn_bit_seq_integrator_c",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_stopwatchtop",
      "address": 943,
      "title": "Stopwatch with 7-seg Display",
      "author": "Manoranjan",
      "description": "A simple stopwatch with minutes and seconds display on 7-seg, implemented for TinyTapeout.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Manoranjan513/CF-TT12-15",
      "commit": "48020d6e7868b69b3e6790ae1277660f9431a003",
      "pinout": {
        "ui[0]": "start",
        "ui[1]": "stop",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "seg[0]",
        "uo[1]": "seg[1]",
        "uo[2]": "seg[2]",
        "uo[3]": "seg[3]",
        "uo[4]": "seg[4]",
        "uo[5]": "seg[5]",
        "uo[6]": "seg[6]",
        "uo[7]": "dp",
        "uio[0]": "an[0]",
        "uio[1]": "an[1]",
        "uio[2]": "an[2]",
        "uio[3]": "an[3]",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_stress_sensor",
      "address": 545,
      "title": "Tiny_Tapeout_2025_three_sensors",
      "author": "Liyue Yan",
      "description": "Three signal inputs need to be on within the same time frame (6s, assuming 100 MHz) to trigger an alarm output",
      "clock_hz": 100000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ly2019/Tiny_Tapeout_2025",
      "commit": "a547334787cb3c88ddc8224517ce9130b67f0595",
      "pinout": {
        "ui[0]": "sensor1",
        "ui[1]": "sensor2",
        "ui[2]": "sensor3",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "response",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_subdiduntil2_mixed_signal_classifier",
      "address": 518,
      "title": "Mixed-signal Classifier",
      "author": "Emmanouil Anastasios Serlis",
      "description": "A 2-class mixed-signal classifier based on gaussian circuits",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        7,
        9,
        8
      ],
      "repo": "https://github.com/subdiduntil2/tt-mixed-signal-classifier",
      "commit": "4518b38e3f88b1b273fffb81837f0a00687c1ad8",
      "pinout": {
        "ui[0]": "Vin1",
        "ui[1]": "Vin2",
        "ui[2]": "Vin3",
        "ui[3]": "Vin4",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "Vr",
        "ua[1]": "Iout0",
        "ua[2]": "Iout1",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_swangust",
      "address": 175,
      "title": "posit8_add",
      "author": "Gustaf Swansen",
      "description": "Addition circuit for <8,0> posit numbers",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/swangust/ttsky-posit8",
      "commit": "3b8a0d336cd74c46282ece0c044ff6acae07c608",
      "pinout": {
        "ui[0]": "A[0]",
        "ui[1]": "A[1]",
        "ui[2]": "A[2]",
        "ui[3]": "A[3]",
        "ui[4]": "A[4]",
        "ui[5]": "A[5]",
        "ui[6]": "A[6]",
        "ui[7]": "A[7]",
        "uo[0]": "SUM[0]",
        "uo[1]": "SUM[1]",
        "uo[2]": "SUM[2]",
        "uo[3]": "SUM[3]",
        "uo[4]": "SUM[4]",
        "uo[5]": "SUM[5]",
        "uo[6]": "SUM[6]",
        "uo[7]": "SUM[7]",
        "uio[0]": "B[0]",
        "uio[1]": "B[1]",
        "uio[2]": "B[2]",
        "uio[3]": "B[3]",
        "uio[4]": "B[4]",
        "uio[5]": "B[5]",
        "uio[6]": "B[6]",
        "uio[7]": "B[7]"
      }
    },
    {
      "macro": "tt_um_swangust2",
      "address": 171,
      "title": "posit8_mul",
      "author": "Gustaf Swansen",
      "description": "Multiplication circuit for <8,0> posit numbers",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/swangust/ttsky-posit8-mul",
      "commit": "fdf271042ea977f1b4f5e76cd5c21832c0c30dac",
      "pinout": {
        "ui[0]": "A[0]",
        "ui[1]": "A[1]",
        "ui[2]": "A[2]",
        "ui[3]": "A[3]",
        "ui[4]": "A[4]",
        "ui[5]": "A[5]",
        "ui[6]": "A[6]",
        "ui[7]": "A[7]",
        "uo[0]": "PROD[0]",
        "uo[1]": "PROD[1]",
        "uo[2]": "PROD[2]",
        "uo[3]": "PROD[3]",
        "uo[4]": "PROD[4]",
        "uo[5]": "PROD[5]",
        "uo[6]": "PROD[6]",
        "uo[7]": "PROD[7]",
        "uio[0]": "B[0]",
        "uio[1]": "B[1]",
        "uio[2]": "B[2]",
        "uio[3]": "B[3]",
        "uio[4]": "B[4]",
        "uio[5]": "B[5]",
        "uio[6]": "B[6]",
        "uio[7]": "B[7]"
      }
    },
    {
      "macro": "tt_um_swangust3",
      "address": 334,
      "title": "posit8_div",
      "author": "Gustaf Swansen",
      "description": "Division circuit for <8,0> posit numbers",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/swangust/ttsky-posit8-div",
      "commit": "5e6213c0ccb0a842bd07dd0add187eacf2531803",
      "pinout": {
        "ui[0]": "A[0]",
        "ui[1]": "A[1]",
        "ui[2]": "A[2]",
        "ui[3]": "A[3]",
        "ui[4]": "A[4]",
        "ui[5]": "A[5]",
        "ui[6]": "A[6]",
        "ui[7]": "A[7]",
        "uo[0]": "QUOT[0]",
        "uo[1]": "QUOT[1]",
        "uo[2]": "QUOT[2]",
        "uo[3]": "QUOT[3]",
        "uo[4]": "QUOT[4]",
        "uo[5]": "QUOT[5]",
        "uo[6]": "QUOT[6]",
        "uo[7]": "QUOT[7]",
        "uio[0]": "B[0]",
        "uio[1]": "B[1]",
        "uio[2]": "B[2]",
        "uio[3]": "B[3]",
        "uio[4]": "B[4]",
        "uio[5]": "B[5]",
        "uio[6]": "B[6]",
        "uio[7]": "B[7]"
      }
    },
    {
      "macro": "tt_um_tc503_countdown_timer",
      "address": 12,
      "title": "Countdown Timer",
      "author": "To Chan",
      "description": "Zero to ASIC Term Project",
      "clock_hz": 160000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tc503/ttsky25a-countdown-timer",
      "commit": "92359a85f4de08dd0aa06a5c112851d9a247d73c",
      "pinout": {
        "ui[0]": "enc0 a",
        "ui[1]": "enc0 b",
        "ui[2]": "enc1 a",
        "ui[3]": "enc1 b",
        "ui[4]": "enc2 a",
        "ui[5]": "enc2 b",
        "ui[6]": "",
        "ui[7]": "CTRL",
        "uo[0]": "AA",
        "uo[1]": "AB",
        "uo[2]": "AC",
        "uo[3]": "AD",
        "uo[4]": "AE",
        "uo[5]": "AF",
        "uo[6]": "AG",
        "uo[7]": "CAT",
        "uio[0]": "pwm 0",
        "uio[1]": "pwm 1",
        "uio[2]": "pwm 2",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_td4",
      "address": 166,
      "title": "tt-td04",
      "author": "KATO, Jinnosuke",
      "description": "A 4bit toy CPU TD4 from CPU\u306e\u5275\u308a\u65b9",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jinnosukeKato/tt-td4",
      "commit": "2708b75d1f05e774310f6928187716878ab3aaab",
      "pinout": {
        "ui[0]": "Load: OpCode(0) / Read: NC / Exe: Input(0)",
        "ui[1]": "Load: OpCode(1) / Read: NC / Exe: Input(1)",
        "ui[2]": "Load: OpCode(2) / Read: NC / Exe: Input(2)",
        "ui[3]": "Load: OpCode(3) / Read: NC / Exe: Input(3)",
        "ui[4]": "Always: NC",
        "ui[5]": "Always: NC",
        "ui[6]": "Load: Read / Read: Read / Exe: NC",
        "ui[7]": "Always: Execution",
        "uo[0]": "Load: NC / Read: OpCode(0) / Exe: RegA(0)",
        "uo[1]": "Load: NC / Read: OpCode(1) / Exe: RegA(1)",
        "uo[2]": "Load: NC / Read: OpCode(2) / Exe: RegA(2)",
        "uo[3]": "Load: NC / Read: OpCode(3) / Exe: RegA(3)",
        "uo[4]": "Load: NC / Read: Immediate(0) / Exe: RegB(0)",
        "uo[5]": "Load: NC / Read: Immediate(0) / Exe: RegB(1)",
        "uo[6]": "Load: NC / Read: Immediate(0) / Exe: RegB(2)",
        "uo[7]": "Load: NC / Read: Immediate(0) / Exe: RegB(3)",
        "uio[0]": "Load: Immediate(0) / Read: NC / Exe: Output(0)",
        "uio[1]": "Load: Immediate(1) / Read: NC / Exe: Output(1)",
        "uio[2]": "Load: Immediate(2) / Read: NC / Exe: Output(2)",
        "uio[3]": "Load: Immediate(3) / Read: NC / Exe: Output(3)",
        "uio[4]": "Load: Address(0) / Read: Address(0)/ Exe: NC",
        "uio[5]": "Load: Address(1) / Read: Address(1)/ Exe: NC",
        "uio[6]": "Load: Address(2) / Read: Address(2)/ Exe: NC",
        "uio[7]": "Load: Address(3) / Read: Address(3)/ Exe: Carry"
      }
    },
    {
      "macro": "tt_um_tdctest_container",
      "address": 296,
      "title": "Micro tile container",
      "author": "Arna",
      "description": "Example Experimental microtile TDC container",
      "clock_hz": 20000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Secure-Embedded-Systems/tt09-microtile-final_TDC",
      "commit": "56b4fba969b84f6ae602e32ac9d684be9393625b",
      "pinout": {
        "ui[0]": "in[0]",
        "ui[1]": "in[1]",
        "ui[2]": "in[2]",
        "ui[3]": "in[3]",
        "ui[4]": "in[4]",
        "ui[5]": "in[5]",
        "ui[6]": "in[6]",
        "ui[7]": "in[7]",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "sel[0]",
        "uio[1]": "sel[1]",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tgrillz_sixSidedDie",
      "address": 8,
      "title": "Six Sided Die",
      "author": "tgrillz",
      "description": "Outputs a Random Number 1-6 to simulate a dice roll.",
      "clock_hz": 10,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tgrillz/tt_um_sixSidedDie",
      "commit": "4041db1f8a1d9142de43bc214d833a884d7505d3",
      "pinout": {
        "ui[0]": "roll dice",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "7 segment ouput bit 0",
        "uo[1]": "7 segment ouput bit 1",
        "uo[2]": "7 segment ouput bit 2",
        "uo[3]": "7 segment ouput bit 3",
        "uo[4]": "7 segment ouput bit 4",
        "uo[5]": "7 segment ouput bit 5",
        "uo[6]": "7 segment ouput bit 6",
        "uo[7]": "unused - set to 0",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_thexeno_rgbw_controller",
      "address": 322,
      "title": "RGBW Color Processor",
      "author": "Enrico Sanino",
      "description": "Color processor for RGBW LEDs, with generation of hue, tint and intensity based on a color index. Is also a direct SPI to 4 channels PWM converter.",
      "clock_hz": 66000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/thexeno/ttsky-rgbw-controller",
      "commit": "ae8974d8945da9fe93520690e32629f2c5b58993",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "test_pin",
        "ui[4]": "cs_n",
        "ui[5]": "sck",
        "ui[6]": "mosi",
        "ui[7]": "clk_div_en",
        "uo[0]": "red_pwm",
        "uo[1]": "green_pwm",
        "uo[2]": "blue_pwm",
        "uo[3]": "white_pwm",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "test_out_0",
        "uio[1]": "test_out_1",
        "uio[2]": "test_out_2",
        "uio[3]": "test_out_3",
        "uio[4]": "test_out_4",
        "uio[5]": "test_out_5",
        "uio[6]": "test_out_6",
        "uio[7]": "test_out_7"
      }
    },
    {
      "macro": "tt_um_tiny_pll",
      "address": 128,
      "title": "Tiny PLL",
      "author": "LegumeEmittingDiode",
      "description": "4-channel fractional-N frequency synthesizer",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/LegumeEmittingDiode/tt08-tiny-pll",
      "commit": "bd6c5a8295551ab6afdfa9e23cf88f8e32cccde5",
      "pinout": {
        "ui[0]": "csr_data_in[0]: Data input for PLL control registers",
        "ui[1]": "csr_data_in[1]: Data input for PLL control registers",
        "ui[2]": "csr_data_in[2]: Data input for PLL control registers",
        "ui[3]": "csr_data_in[3]: Data input for PLL control registers",
        "ui[4]": "csr_addr_in[0]: Address input for PLL control registers",
        "ui[5]": "csr_addr_in[1]: Address input for PLL control registers",
        "ui[6]": "csr_addr_in[2]: Address input for PLL control registers",
        "ui[7]": "csr_addr_in[3]: Address input for PLL control registers",
        "uo[0]": "clk_out[0]: Channel 0 PLL clock output",
        "uo[1]": "clk_out[1]: Channel 1 PLL clock output",
        "uo[2]": "clk_out[2]: Channel 2 PLL clock output",
        "uo[3]": "clk_out[3]: Channel 3 PLL clock output",
        "uo[4]": "adc_out: Channel 0 control voltage ADC output",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "clk_csr: Clock input for PLL control registers",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tinytapeout_logo_screensaver",
      "address": 965,
      "title": "VGA Screensaver with Tiny Tapeout Logo",
      "author": "Uri Shaked",
      "description": "Tiny Tapeout Logo bouncing around the screen (640x480, TinyVGA Pmod)",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/tt10-logo-screensaver",
      "commit": "970bb35f0b91c8ed0aaecd27e0810c1ac1f1b3b0",
      "pinout": {
        "ui[0]": "tile",
        "ui[1]": "solid_color",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "gamepad_latch",
        "ui[5]": "gamepad_clk",
        "ui[6]": "gamepad_data",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tnt_mosbius",
      "address": 239,
      "title": "tnt's variant of SKY130 mini-MOSbius",
      "author": "Sylvain Munaut",
      "description": "Alternative layout for Andrew Kang's mini-MOSbius for SKY130 TinyTapeout",
      "clock_hz": 0,
      "tiles": "3x2",
      "analog_pins": [
        5,
        0,
        4,
        1,
        3,
        2
      ],
      "repo": "https://github.com/smunaut/ttsky-mini-mosbius",
      "commit": "2f30c95fb3ef77437496d091b54b11a58ddcee83",
      "pinout": {
        "ui[0]": "data_in",
        "ui[1]": "enable",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "data_out",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "Reference Bias",
        "ua[1]": "Bus 1A",
        "ua[2]": "Bus 2A",
        "ua[3]": "Bus 3A",
        "ua[4]": "Bus 4A",
        "ua[5]": "Bus 5A"
      }
    },
    {
      "macro": "tt_um_tnt_rf_test",
      "address": 196,
      "title": "TTSKY25A Register File Test",
      "author": "Sylvain Munaut",
      "description": "Test structures for a future register file macro",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/smunaut/ttsky25a-rf-test",
      "commit": "b1f9bfb2768a4fd98287686bf7ec1143ed168cf6",
      "pinout": {
        "ui[0]": "tbd",
        "ui[1]": "tbd",
        "ui[2]": "tbd",
        "ui[3]": "tbd",
        "ui[4]": "tbd",
        "ui[5]": "tbd",
        "ui[6]": "tbd",
        "ui[7]": "tbd",
        "uo[0]": "tbd",
        "uo[1]": "tbd",
        "uo[2]": "tbd",
        "uo[3]": "tbd",
        "uo[4]": "tbd",
        "uo[5]": "tbd",
        "uo[6]": "tbd",
        "uo[7]": "tbd",
        "uio[0]": "tbd",
        "uio[1]": "tbd",
        "uio[2]": "tbd",
        "uio[3]": "tbd",
        "uio[4]": "tbd",
        "uio[5]": "tbd",
        "uio[6]": "tbd",
        "uio[7]": "tbd",
        "ua[0]": "",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_tnt_rom_nolvt_test",
      "address": 14,
      "title": "TT09 SKY130 ROM Test (no LVT variant)",
      "author": "Sylvain Munaut",
      "description": "Test of some prototype ROM macros modified to remove LVT implant on bitcell",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/smunaut/tt09-rom-nolvt-test",
      "commit": "c93f53a54d04d702b6348879cef0fbed04b4c25e",
      "pinout": {
        "ui[0]": "addr_in[0]",
        "ui[1]": "addr_in[1]",
        "ui[2]": "addr_in[2]",
        "ui[3]": "addr_in[3]",
        "ui[4]": "addr_in[4]",
        "ui[5]": "addr_in[5]",
        "ui[6]": "addr_in[6]",
        "ui[7]": "clk of addr_ld[13:7] register",
        "uo[0]": "data[0]",
        "uo[1]": "data[1]",
        "uo[2]": "data[2]",
        "uo[3]": "data[3]",
        "uo[4]": "data[4]",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "data[5]",
        "uio[1]": "data[6]",
        "uio[2]": "data[7]",
        "uio[3]": "data[8]",
        "uio[4]": "data[9]",
        "uio[5]": "clk of data register",
        "uio[6]": "clk of addr register",
        "uio[7]": "clk of addr_ld[6:0] register",
        "ua[0]": "",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_tnt_rom_test",
      "address": 206,
      "title": "TT09 SKY130 ROM Test",
      "author": "Sylvain Munaut",
      "description": "Test of some prototype ROM macros",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/smunaut/tt09-rom-test",
      "commit": "7587b3aa6703d6394fb02277422e50458eef1f98",
      "pinout": {
        "ui[0]": "addr_in[0]",
        "ui[1]": "addr_in[1]",
        "ui[2]": "addr_in[2]",
        "ui[3]": "addr_in[3]",
        "ui[4]": "addr_in[4]",
        "ui[5]": "addr_in[5]",
        "ui[6]": "addr_in[6]",
        "ui[7]": "clk of addr_ld[13:7] register",
        "uo[0]": "data[0]",
        "uo[1]": "data[1]",
        "uo[2]": "data[2]",
        "uo[3]": "data[3]",
        "uo[4]": "data[4]",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "data[5]",
        "uio[1]": "data[6]",
        "uio[2]": "data[7]",
        "uio[3]": "data[8]",
        "uio[4]": "data[9]",
        "uio[5]": "clk of data register",
        "uio[6]": "clk of addr register",
        "uio[7]": "clk of addr_ld[6:0] register",
        "ua[0]": "",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_tobi_mckellar_top",
      "address": 38,
      "title": "Capacitive Touch Sensor",
      "author": "Tobi McKellar",
      "description": "Senses capacitive touches.",
      "clock_hz": 24000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Tobi-McKellar/ttsky-capacitive-touch",
      "commit": "74e95334bd7eb6c812ba7a8ceb418ac8d5d85fa6",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "PTI_0",
        "ui[7]": "PTI_0",
        "uo[0]": "BTNO_0.",
        "uo[1]": "BTNO_1",
        "uo[2]": "BTNO_2",
        "uo[3]": "BTNO_3",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "PTO_0",
        "uo[7]": "PTO_1",
        "uio[0]": "CIO_0.",
        "uio[1]": "CIO_1",
        "uio[2]": "CIO_2",
        "uio[3]": "CIO_3",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_toivoh_pwl_synth",
      "address": 450,
      "title": "PiecewiseOrionSynth Deluxe",
      "author": "Toivo Henningsson",
      "description": "4 channel chip tune/synth - deluxe version (stand alone)",
      "clock_hz": 64000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/toivoh/ttsky25a-pwl-synth",
      "commit": "5613cd9365eae6343090a681a2a44d61fc4b8ea4",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "pwm_out_l",
        "uo[1]": "pwm_out_r",
        "uo[2]": "pwm_out_l",
        "uo[3]": "pwm_out_r",
        "uo[4]": "pwm_out_l",
        "uo[5]": "pwm_out_r",
        "uo[6]": "pwm_out_l",
        "uo[7]": "pwm_out_r",
        "uio[0]": "user_interrupt",
        "uio[1]": "data_ready",
        "uio[2]": "",
        "uio[3]": "spi_miso",
        "uio[4]": "spi_cs_n",
        "uio[5]": "spi_clk",
        "uio[6]": "spi_mosi",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_top_layer",
      "address": 718,
      "title": "Spike Detection and Classification System",
      "author": "Gabriel Galeote Checa",
      "description": "Serialized input buffering with 4 parallel spike detectors + classifiers",
      "clock_hz": 0,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/GGChe/ttsky-zdrode",
      "commit": "6a4224e4e8d2a808ca6f2ee125bd772f114c8b35",
      "pinout": {
        "ui[0]": "unit_sel[0]   (LSB of 2-bit channel selector)",
        "ui[1]": "unit_sel[1]   (MSB of 2-bit channel selector)",
        "ui[2]": "byte_valid    (strobe, 1 clk-wide when uio contains a byte)",
        "ui[3]": "reserved      (drive 0 externally)",
        "ui[4]": "reserved",
        "ui[5]": "reserved",
        "ui[6]": "reserved",
        "ui[7]": "reserved",
        "uo[0]": "spike          (spike of the SELECTED unit)",
        "uo[1]": "event[0]       (LSB of 2-bit event code)",
        "uo[2]": "event[1]       (MSB of 2-bit event code)",
        "uo[3]": "const0         (always 0)",
        "uo[4]": "const0         (always 0)",
        "uo[5]": "const0         (always 0)",
        "uo[6]": "const0         (always 0)",
        "uo[7]": "const0         (always 0)",
        "uio[0]": "sample_byte[0]  (LSB)",
        "uio[1]": "sample_byte[1]",
        "uio[2]": "sample_byte[2]",
        "uio[3]": "sample_byte[3]",
        "uio[4]": "sample_byte[4]",
        "uio[5]": "sample_byte[5]",
        "uio[6]": "sample_byte[6]",
        "uio[7]": "sample_byte[7]  (MSB)"
      }
    },
    {
      "macro": "tt_um_torurstrom_async_lock",
      "address": 168,
      "title": "Asynchronous Locking Unit",
      "author": "T\u00f3rur Biskopst\u00f8 Str\u00f8m",
      "description": "An asynchronous lock with 8 request signals and 8 grant signals",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/torurstrom/tt10-async-lock",
      "commit": "f93c97a78cf4f2442d3a6f9c3c8392b9144c2073",
      "pinout": {
        "ui[0]": "req0",
        "ui[1]": "req1",
        "ui[2]": "req2",
        "ui[3]": "req3",
        "ui[4]": "req4",
        "ui[5]": "req5",
        "ui[6]": "req6",
        "ui[7]": "req7",
        "uo[0]": "ack0",
        "uo[1]": "ack1",
        "uo[2]": "ack2",
        "uo[3]": "ack3",
        "uo[4]": "ack4",
        "uo[5]": "ack5",
        "uo[6]": "ack6",
        "uo[7]": "ack7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tpu",
      "address": 330,
      "title": "Tiny Tapeout Tensor Processing Unit",
      "author": "William Zhang, Yash Karthik, Guhan Iyer, Ethan Leung",
      "description": "multiplies matrices",
      "clock_hz": 50000000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/WilliamZhang20/ECE298A-TPU",
      "commit": "bb35b879368edef70232d867b44fd75627aa1f1e",
      "pinout": {
        "ui[0]": "IN0",
        "ui[1]": "IN1",
        "ui[2]": "IN2",
        "ui[3]": "IN3",
        "ui[4]": "IN4",
        "ui[5]": "IN5",
        "ui[6]": "IN6",
        "ui[7]": "IN7",
        "uo[0]": "OUT0",
        "uo[1]": "OUT1",
        "uo[2]": "OUT2",
        "uo[3]": "OUT3",
        "uo[4]": "OUT4",
        "uo[5]": "OUT5",
        "uo[6]": "OUT6",
        "uo[7]": "OUT7",
        "uio[0]": "LOAD_EN (input)",
        "uio[1]": "TRANSPOSE (input)",
        "uio[2]": "ACTIVATION (input)",
        "uio[3]": "Unused",
        "uio[4]": "Unused",
        "uio[5]": "Unused",
        "uio[6]": "Unused",
        "uio[7]": "DONE (output)"
      }
    },
    {
      "macro": "tt_um_tqv_peripheral_harness",
      "address": 32,
      "title": "Rotary Encoder Peripheral",
      "author": "Matt Venn",
      "description": "Reads a rotary encoder and stores the result in a register",
      "clock_hz": 64000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/ttsky25a-riscv-compo-encoder",
      "commit": "494a26f18b72a800b2c8ef5a82cc6434da7210b9",
      "pinout": {
        "ui[0]": "enc0 a",
        "ui[1]": "enc0 b",
        "ui[2]": "enc1 a",
        "ui[3]": "enc1 b",
        "ui[4]": "enc2 a",
        "ui[5]": "enc2 b",
        "ui[6]": "enc3 a",
        "ui[7]": "enc3 b",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "spi_miso",
        "uio[4]": "spi_cs_n",
        "uio[5]": "spi_clk",
        "uio[6]": "spi_mosi",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_trivium_stream_processor",
      "address": 33,
      "title": "Trivium Stream",
      "author": "Hithesh S, Eresh, Neeshu Yadav, Abhishek M, Venu Kumar Reddy and Shylashree N, of RV College of Engineering, Bangalore",
      "description": "A lightweight, stream cipher using Trivium keystream generation with XOR-based encryption and decryption.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE/TT10_TSC",
      "commit": "418299e6dc642d36753f757e07c8480982485324",
      "pinout": {
        "ui[0]": "Data[0] (Input Byte LSB)",
        "ui[1]": "Data[1]",
        "ui[2]": "Data[2]",
        "ui[3]": "Data[3]",
        "ui[4]": "Data[4]",
        "ui[5]": "Data[5]",
        "ui[6]": "Data[6]",
        "ui[7]": "Data[7] (Input Byte MSB)",
        "uo[0]": "stream_out[0] (Output Byte LSB)",
        "uo[1]": "stream_out[1]",
        "uo[2]": "stream_out[2]",
        "uo[3]": "stream_out[3]",
        "uo[4]": "stream_out[4]",
        "uo[5]": "stream_out[5]",
        "uo[6]": "stream_out[6]",
        "uo[7]": "stream_out[7] (Output Byte MSB)",
        "uio[0]": "Control[0] (Seed/Input/Reset LSB)",
        "uio[1]": "Control[1]",
        "uio[2]": "Control[2]",
        "uio[3]": "Control[3]",
        "uio[4]": "Control[4]",
        "uio[5]": "Control[5]",
        "uio[6]": "Control[6]",
        "uio[7]": "Control[7] (Seed/Input/Reset MSB)"
      }
    },
    {
      "macro": "tt_um_tt_tinyQV",
      "address": 495,
      "title": "TinyQV 'Asteroids' - Crowdsourced Risc-V SoC",
      "author": "Michael Bell, et al",
      "description": "A Risc-V SoC with peripherals from the Tiny Tapeout Risc-V challenge, codename 'Asteroids'",
      "clock_hz": 64000000,
      "tiles": "8x4",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/ttsky25a-tinyQV",
      "commit": "ab17e06cfc890ac15a1176cb943808f09685fa0a",
      "pinout": {
        "ui[0]": "Interrupt 0",
        "ui[1]": "Interrupt 1",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "UART RX",
        "uo[0]": "UART TX",
        "uo[1]": "UART RTS",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "Debug UART TX",
        "uo[7]": "Debug signal / PWM",
        "uio[0]": "Flash CS",
        "uio[1]": "SD0",
        "uio[2]": "SD1",
        "uio[3]": "SCK",
        "uio[4]": "SD2",
        "uio[5]": "SD3",
        "uio[6]": "RAM A CS",
        "uio[7]": "RAM B CS / PWM"
      }
    },
    {
      "macro": "tt_um_tt_tinyQVb",
      "address": 687,
      "title": "TinyQV 'Berzerk' - Crowdsourced Risc-V SoC",
      "author": "Michael Bell, et al",
      "description": "A Risc-V SoC with peripherals from the Tiny Tapeout Risc-V challenge, codename 'Berzerk'",
      "clock_hz": 64000000,
      "tiles": "4x4",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/ttsky25a-tinyQVb",
      "commit": "35c3ce544d42dfc19e71f3e91d1702eced712014",
      "pinout": {
        "ui[0]": "Interrupt 0",
        "ui[1]": "Interrupt 1",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "UART RX",
        "uo[0]": "UART TX",
        "uo[1]": "UART RTS",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "Debug UART TX",
        "uo[7]": "Debug signal / PWM",
        "uio[0]": "Flash CS",
        "uio[1]": "SD0",
        "uio[2]": "SD1",
        "uio[3]": "SCK",
        "uio[4]": "SD2",
        "uio[5]": "SD3",
        "uio[6]": "RAM A CS",
        "uio[7]": "RAM B CS / PWM"
      }
    },
    {
      "macro": "tt_um_tv_b_gone",
      "address": 78,
      "title": "TV-B-Gone-EU",
      "author": "Embelon",
      "description": "TV-B-Gone shuts down many TVs by sending IR codes",
      "clock_hz": 8000000,
      "tiles": "3x4",
      "analog_pins": [],
      "repo": "https://github.com/SemiQa/ttsky25a-tv-b-gone-eu",
      "commit": "9b8c06b73f6a0d6e5dc26bf2c49e674ce5531b49",
      "pinout": {
        "ui[0]": "Start_Button_N",
        "ui[1]": "Loop_Forever",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "IR_LED_OUT",
        "uo[1]": "IR_LED_OUT_N",
        "uo[2]": "ACTIVE_LED_N",
        "uo[3]": "FAILURE_LED_N",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tv_b_gone_rom",
      "address": 462,
      "title": "TV-B-Gone-EU (ROM Macro variant)",
      "author": "Embelon",
      "description": "TV-B-Gone shuts down many TVs by sending IR codes",
      "clock_hz": 8000000,
      "tiles": "2x2",
      "analog_pins": [],
      "repo": "https://github.com/smunaut/ttsky25a-tv-b-gone-eu",
      "commit": "f2d2a23145e4114ffdbad168d61adfd1d0d921c9",
      "pinout": {
        "ui[0]": "Start_Button_N",
        "ui[1]": "Loop_Forever",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "IR_LED_OUT",
        "uo[1]": "IR_LED_OUT_N",
        "uo[2]": "ACTIVE_LED_N",
        "uo[3]": "FAILURE_LED_N",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_tx_fsm",
      "address": 868,
      "title": "Design and Functional Verification of Error-Correcting FIFO Buffer with SECDED and ARQ ",
      "author": "Rishi Gowda A, Manjunath Umesh Kudalagi, Akshay Urs and Shylashree N, RV College of Engineering, Bengaluru",
      "description": "FSM-based hazard detector with 4-bit FIFO buffering and lightweight SECDED ECC, providing ACK/NACK handshake.",
      "clock_hz": 10,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE/TTSKY25a-FIFO-ARQ",
      "commit": "3d20b57264da894dd20a27a8806eeae1b6013c4a",
      "pinout": {
        "ui[0]": "ui_in[0]",
        "ui[1]": "ui_in[1]",
        "ui[2]": "ui_in[2]",
        "ui[3]": "ui_in[3]",
        "ui[4]": "ui_in[4]",
        "ui[5]": "ui_in[5]",
        "ui[6]": "ui_in[6]",
        "ui[7]": "ui_in[7]",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "uo_out[2]",
        "uo[3]": "uo_out[3]",
        "uo[4]": "uo_out[4]",
        "uo[5]": "uo_out[5]",
        "uo[6]": "uo_out[6]",
        "uo[7]": "uo_out[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_uart",
      "address": 291,
      "title": "UART Controller with FIFO and Interrupts",
      "author": "Jagadish",
      "description": "Full-featured UART with configurable baud rate, FIFO buffering, and interrupt generation",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tapeoutcutm/UART-protocol",
      "commit": "e85f7168ba3f4eb5549660d60cf399bb82c1c7f7",
      "pinout": {
        "ui[0]": "TR_EN",
        "ui[1]": "MODE_OSL",
        "ui[2]": "CLK_SEL",
        "ui[3]": "TX_WR_EN",
        "ui[4]": "TR_DATA_LOAD",
        "ui[5]": "RX_RD_EN",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "RX_DATA[0]",
        "uo[1]": "RX_DATA[1]",
        "uo[2]": "RX_DATA[2]",
        "uo[3]": "RX_DATA[3]",
        "uo[4]": "RX_DATA[4]",
        "uo[5]": "RX_DATA[5]",
        "uo[6]": "RX_DATA[6]",
        "uo[7]": "RX_DATA[7]",
        "uio[0]": "RX_IN/TX_OUT",
        "uio[1]": "TX_FIFO[1]/TX_I_INT",
        "uio[2]": "TX_FIFO[2]/RX_I_INT",
        "uio[3]": "TX_FIFO[3]/TX_O_INT",
        "uio[4]": "TX_FIFO[4]/RX_O_INT",
        "uio[5]": "TX_FIFO[5]/TR_BUSY",
        "uio[6]": "TX_FIFO[6]",
        "uio[7]": "TX_FIFO[7]"
      }
    },
    {
      "macro": "tt_um_uart_spi",
      "address": 879,
      "title": "UART and SPI Communication blocks with loopback",
      "author": "Vivek Chiranjit",
      "description": "UART and SPI Communication blocks with loopback",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/ChiranjitPatel/ttsky_multiplier_uart_spi",
      "commit": "e111aca3aa1c44befc79fb69b9b03b921df632fc",
      "pinout": {
        "ui[0]": "frequency control 00,01,10,11",
        "ui[1]": "frequency control 00,01,10,11",
        "ui[2]": "serial input to UART",
        "ui[3]": "UART Tx start signal",
        "ui[4]": "Chip select bar",
        "ui[5]": "serial input to SPI",
        "ui[6]": "SPI start signal",
        "ui[7]": "Loopback, set to 1",
        "uo[0]": "Serial output from UART",
        "uo[1]": "Serial output from SPI",
        "uo[2]": "UART Rx valid",
        "uo[3]": "UART Tx ready",
        "uo[4]": "SPI Rx valid",
        "uo[5]": "SPI Rx done",
        "uo[6]": "SPI sclk",
        "uo[7]": "NC",
        "uio[0]": "SPI slave Rx start",
        "uio[1]": "SPI slave Tx start",
        "uio[2]": "NC",
        "uio[3]": "NC",
        "uio[4]": "NC",
        "uio[5]": "NC",
        "uio[6]": "NC",
        "uio[7]": "NC"
      }
    },
    {
      "macro": "tt_um_upalermo_simple_analog_circuit",
      "address": 517,
      "title": "Simple Analog Circuit",
      "author": "Guido Baitelman- Universidad de Palermo",
      "description": "A simple analog circuit",
      "clock_hz": 0,
      "tiles": "1x2",
      "analog_pins": [
        11
      ],
      "repo": "https://github.com/gbaitelman/TTSKY25A-UP-analog-circuit",
      "commit": "8e990666ff41f608b36612eaf6e18e51bd69f623",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "OUT",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_updown_counter",
      "address": 747,
      "title": "8bit_up-down_counter",
      "author": "Gopi Krishnan M",
      "description": "An 8-bit up/down counter that increments or decrements its value from 0 to 255 based on a control input",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Dullbi/8bit_up-down_counter",
      "commit": "d0e6485f4578b2b1da64d66e02ddbc277e2e7412",
      "pinout": {
        "ui[0]": "enable",
        "ui[1]": "up_down",
        "ui[2]": "clk",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "q[0]",
        "uo[1]": "q[1]",
        "uo[2]": "q[2]",
        "uo[3]": "q[3]",
        "uo[4]": "q[4]",
        "uo[5]": "q[5]",
        "uo[6]": "q[6]",
        "uo[7]": "q[7]",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_urish_charge_pump",
      "address": 768,
      "title": "Dickson Charge Pump",
      "author": "Uri Shaked",
      "description": "Pumps the input voltage up to ~8V",
      "clock_hz": 2000000,
      "tiles": "1x2",
      "analog_pins": [
        10
      ],
      "repo": "https://github.com/urish/tt09-charge-pump",
      "commit": "9cec4795f878498c5274d33161dcd4957b8067d0",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": "",
        "ua[0]": "vout_div",
        "ua[1]": "",
        "ua[2]": "",
        "ua[3]": "",
        "ua[4]": "",
        "ua[5]": ""
      }
    },
    {
      "macro": "tt_um_urish_giant_ringosc",
      "address": 132,
      "title": "Giant Ring Oscillator (3853 inverters)",
      "author": "Uri Shaked",
      "description": "Configurable ring oscillator with up to 3853 inverters",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt09-giant-ring-oscillator",
      "commit": "795542b21e69c8b2479923dda0255edc4ad700d6",
      "pinout": {
        "ui[0]": "ring_in",
        "ui[1]": "internal_loopback",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "len1",
        "uo[1]": "len3",
        "uo[2]": "len5",
        "uo[3]": "len7",
        "uo[4]": "len11",
        "uo[5]": "len21",
        "uo[6]": "len51",
        "uo[7]": "len101",
        "uio[0]": "len201",
        "uio[1]": "len501",
        "uio[2]": "len1001",
        "uio[3]": "len2001",
        "uio[4]": "len3001",
        "uio[5]": "len3853",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_urish_sic1",
      "address": 679,
      "title": "SIC-1 8-bit SUBLEQ Single Instruction Computer",
      "author": "Uri Shaked",
      "description": "Hardware implementation of the 8-bit Single Instruction Computer",
      "clock_hz": 0,
      "tiles": "4x2",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt09-sic1",
      "commit": "7cc59c0c6ec12d5453afa262029ec16824d49a7e",
      "pinout": {
        "ui[0]": "in[0]",
        "ui[1]": "in[1]",
        "ui[2]": "in[2]",
        "ui[3]": "in[3]",
        "ui[4]": "in[4]",
        "ui[5]": "in[5]",
        "ui[6]": "in[6]",
        "ui[7]": "in[7]",
        "uo[0]": "out[0]",
        "uo[1]": "out[1]",
        "uo[2]": "out[2]",
        "uo[3]": "out[3]",
        "uo[4]": "out[4]",
        "uo[5]": "out[5]",
        "uo[6]": "out[6]",
        "uo[7]": "out[7]",
        "uio[0]": "run",
        "uio[1]": "halted",
        "uio[2]": "set_pc",
        "uio[3]": "load_data",
        "uio[4]": "out_strobe",
        "uio[5]": "dbg[0]",
        "uio[6]": "dbg[1]",
        "uio[7]": "dbg[2]"
      }
    },
    {
      "macro": "tt_um_urish_simon",
      "address": 911,
      "title": "Simon Says memory game",
      "author": "Uri Shaked",
      "description": "Repeat the sequence of colors and sounds to win the game",
      "clock_hz": 50000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/urish/tt10-simon-game",
      "commit": "65503b0b79194df60467ceb5cb9955efa73a087b",
      "pinout": {
        "ui[0]": "btn1",
        "ui[1]": "btn2",
        "ui[2]": "btn3",
        "ui[3]": "btn4",
        "ui[4]": "seginv",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "clk_sel",
        "uo[0]": "led1",
        "uo[1]": "led2",
        "uo[2]": "led3",
        "uo[3]": "led4",
        "uo[4]": "speaker",
        "uo[5]": "dig1",
        "uo[6]": "dig2",
        "uo[7]": "clk_internal",
        "uio[0]": "seg_a",
        "uio[1]": "seg_b",
        "uio[2]": "seg_c",
        "uio[3]": "seg_d",
        "uio[4]": "seg_e",
        "uio[5]": "seg_f",
        "uio[6]": "seg_g",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_uwasic_dinogame",
      "address": 264,
      "title": "UW ASIC - Optimized Dino",
      "author": "University of Waterloo ASIC Design Team",
      "description": "Dino game, but only 2 tiles!",
      "clock_hz": 25175000,
      "tiles": "1x2",
      "analog_pins": [],
      "repo": "https://github.com/UW-ASIC/Dino",
      "commit": "5dd4233c7f66dda5a460c9b535351f3ac6103591",
      "pinout": {
        "ui[0]": "ui0",
        "ui[1]": "ui1",
        "ui[2]": "ui2",
        "ui[3]": "ui3",
        "ui[4]": "ui4",
        "ui[5]": "ui5",
        "ui[6]": "ui6",
        "ui[7]": "ui7",
        "uo[0]": "uo0",
        "uo[1]": "uo1",
        "uo[2]": "uo2",
        "uo[3]": "uo3",
        "uo[4]": "uo4",
        "uo[5]": "uo5",
        "uo[6]": "uo6",
        "uo[7]": "uo7",
        "uio[0]": "uio0",
        "uio[1]": "uio1",
        "uio[2]": "uio2",
        "uio[3]": "uio3",
        "uio[4]": "uio4",
        "uio[5]": "uio5",
        "uio[6]": "uio6",
        "uio[7]": "uio7"
      }
    },
    {
      "macro": "tt_um_vedic_4x4",
      "address": 295,
      "title": "High-Speed-4x4-Vedic-Multiplier-for-Efficient-Arithmetic-Operations",
      "author": "Shruthi Rekhana",
      "description": "Implements a 4x4 Vedic multiplier using Verilog.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/tapeoutcutm/High-Speed-8-8-Vedic-Multiplier-for-Efficient-Arithmetic-Operations",
      "commit": "b90c43d04809161ea047b3d26a277ccd61ed72eb",
      "pinout": {
        "ui[0]": "A0",
        "ui[1]": "A1",
        "ui[2]": "A2",
        "ui[3]": "A3",
        "ui[4]": "B0",
        "ui[5]": "B1",
        "ui[6]": "B2",
        "ui[7]": "B3",
        "uo[0]": "P0",
        "uo[1]": "P1",
        "uo[2]": "P2",
        "uo[3]": "P3",
        "uo[4]": "P4",
        "uo[5]": "P5",
        "uo[6]": "P6",
        "uo[7]": "P7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_vga_clock",
      "address": 6,
      "title": "VGA clock",
      "author": "Matt Venn",
      "description": "Shows the time on a VGA screen",
      "clock_hz": 31500000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/tt08-vga-clock",
      "commit": "97ec2cbcc19ea98e582b6762527f00247460f663",
      "pinout": {
        "ui[0]": "adjust hours",
        "ui[1]": "adjust minutes",
        "ui[2]": "adjust seconds",
        "ui[3]": "PMOD type select",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "hsync / R1",
        "uo[1]": "vsync / G1",
        "uo[2]": "B0 / B1",
        "uo[3]": "B1 / VS",
        "uo[4]": "G0 / R0",
        "uo[5]": "G1 / G0",
        "uo[6]": "R0 / B0",
        "uo[7]": "R1 / HS",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_vga_example",
      "address": 586,
      "title": "Jabulani Ball VGA Demo ",
      "author": "Jonathan Cortez",
      "description": "Makes a Circle",
      "clock_hz": 25175000,
      "tiles": "3x2",
      "analog_pins": [],
      "repo": "https://github.com/JonathanEC1105/tt_um_JonathanCortez_hdl",
      "commit": "b8d1b67edae432c9709bde60aa6e423f9c7463fb",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSYNC",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSYNC",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_vga_glyph_mode",
      "address": 559,
      "title": "VGA Glyph Mode",
      "author": "James Ross",
      "description": "Improved Matrix digital rain animation with 4 VGA modes",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jar/ttsky25a_vga_glyph_mode",
      "commit": "6bd4e3284579c76d281f7f27b7ea443a6203f208",
      "pinout": {
        "ui[0]": "Palette 0",
        "ui[1]": "Palette 1",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "VGA Mode bit 0",
        "ui[7]": "VGA Mode bit 1",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_vga_hello_world",
      "address": 427,
      "title": "VGA HELLO WORLD",
      "author": "Enmanuel Rodriguez",
      "description": "Display 'HELLO WORLD' on a VGA monitor",
      "clock_hz": 25175000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/enmanuelrdgz/ttsky25a-vga-hello-world",
      "commit": "2b782e4d0383939ba92f488c2f0e314ac1212ad5",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "R1",
        "uo[1]": "G1",
        "uo[2]": "B1",
        "uo[3]": "VSync",
        "uo[4]": "R0",
        "uo[5]": "G0",
        "uo[6]": "B0",
        "uo[7]": "HSync",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_virantha_enigma",
      "address": 971,
      "title": "Enigma - 52-bit Key Length",
      "author": "Virantha Ekanayake",
      "description": "Silicon implementation of an Enigma I machine with a limited plugboard supporting 3 wires",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/virantha/tt10-enigma",
      "commit": "68fa823334eb5ea6d0d9c3d47a0dbd165aac67ad",
      "pinout": {
        "ui[0]": "din[0]",
        "ui[1]": "din[1]",
        "ui[2]": "din[2]",
        "ui[3]": "din[3]",
        "ui[4]": "din[4]",
        "ui[5]": "cmd[0]",
        "ui[6]": "cmd[1]",
        "ui[7]": "cmd[2]",
        "uo[0]": "seg[0]",
        "uo[1]": "seg[1]",
        "uo[2]": "seg[2]",
        "uo[3]": "seg[3]",
        "uo[4]": "seg[4]",
        "uo[5]": "seg[5]",
        "uo[6]": "seg[6]",
        "uo[7]": "GND",
        "uio[0]": "dout[0]",
        "uio[1]": "dout[1]",
        "uio[2]": "dout[3]",
        "uio[3]": "dout[4]",
        "uio[4]": "dout[5]",
        "uio[5]": "ready",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_voting_machine",
      "address": 745,
      "title": "Digital Voting Machine",
      "author": "Tandale Karthik",
      "description": "A 4-bit digital voting machine that records votes for up to 4 candidates, counts them, shows the winner in one-hot form, and provides debug vote totals.",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/jeet2212/voting",
      "commit": "64d7d951580d442157cc05b98b117867c43d4955",
      "pinout": {
        "ui[0]": "voter",
        "ui[1]": "voter",
        "ui[2]": "voter",
        "ui[3]": "voter",
        "ui[4]": "confirm",
        "ui[5]": "rst",
        "ui[6]": "mode",
        "ui[7]": "mode",
        "uo[0]": "winner",
        "uo[1]": "winner",
        "uo[2]": "winner",
        "uo[3]": "winner",
        "uo[4]": "voting_complete",
        "uo[5]": "debug",
        "uo[6]": "debug",
        "uo[7]": "debug",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_weighted_majority",
      "address": 35,
      "title": "Weighted Majority Voter / Trend Detector",
      "author": "Aditya Varma, Nischay B S, Santhosh V, Syed Abdur Rahman, Meghana P Manru, Shylashree N, RV College of Engineering, Bengaluru",
      "description": "Detects input trend using a weighted voting algorithm with hysteresis.",
      "clock_hz": 50000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/RVCE-ECE/TT_WMVTD",
      "commit": "ac512f78afdd703aded1f6c943f44532a9e8dc32",
      "pinout": {
        "ui[0]": "bit stream input",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "trend output",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_will_keen_solitaire",
      "address": 870,
      "title": "solitaire",
      "author": "Will Keen",
      "description": "Peg solitaire board simulation",
      "clock_hz": 1000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/will-keen/tiny-tapeout",
      "commit": "6df1ad255514c941040ce4d475cdb62c7ab5b110",
      "pinout": {
        "ui[0]": "x coordinate of peg to move - bit 0",
        "ui[1]": "x coordinate of peg to move - bit 1",
        "ui[2]": "x coordinate of peg to move - bit 2",
        "ui[3]": "y coordinate of peg to move - bit 0",
        "ui[4]": "y coordinate of peg to move - bit 1",
        "ui[5]": "y coordinate of peg to move - bit 2",
        "ui[6]": "direction to move peg in - bit 0",
        "ui[7]": "direction to move peg in - bit 1",
        "uo[0]": "remaining piece count - bit 0",
        "uo[1]": "remaining piece count - bit 1",
        "uo[2]": "remaining piece count - bit 2",
        "uo[3]": "remaining piece count - bit 3",
        "uo[4]": "remaining piece count - bit 4",
        "uo[5]": "remaining piece count - bit 5",
        "uo[6]": "game over bit",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_412635532198550529",
      "address": 429,
      "title": "ttsky-pettit-wokproc-trainer",
      "author": "Ken Pettit",
      "description": "An 8-bit CPU trainer",
      "clock_hz": 10000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/kdp1965/ttsky-um-pettit-wokproc",
      "commit": "5ceba8f27308ef7f972e2b46de76781d568340f1",
      "pinout": {
        "ui[0]": "op/imm[0]",
        "ui[1]": "op/imm[1]",
        "ui[2]": "op/imm[2]",
        "ui[3]": "op/imm[3]",
        "ui[4]": "op/imm[4]",
        "ui[5]": "op/imm[5]",
        "ui[6]": "op/imm[6]",
        "ui[7]": "op/imm[7]",
        "uo[0]": "seg_a",
        "uo[1]": "seg_b",
        "uo[2]": "seg_c",
        "uo[3]": "seg_d",
        "uo[4]": "seg_e",
        "uo[5]": "seg_f",
        "uo[6]": "seg_g",
        "uo[7]": "seg_dp",
        "uio[0]": "load_opcode",
        "uio[1]": "execute_opcode",
        "uio[2]": "sevenSeg_binary",
        "uio[3]": "digit_select",
        "uio[4]": "manual_digit",
        "uio[5]": "digit_a_reg",
        "uio[6]": "carry_out",
        "uio[7]": "zero_out"
      }
    },
    {
      "macro": "tt_um_wokwi_414120207283716097",
      "address": 939,
      "title": "fulladder",
      "author": "Keoni Gandall",
      "description": "A full adder made with wokwi",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/TinyTapeout/TinyTapeoutFullAdder",
      "commit": "87869804c49b247c0dc0868607f0e23d29a2ef67",
      "pinout": {
        "ui[0]": "IN0",
        "ui[1]": "IN1",
        "ui[2]": "IN2",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "OUT0",
        "uo[1]": "OUT1",
        "uo[2]": "OUT2",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_414123795172381697",
      "address": 684,
      "title": "TinySnake",
      "author": "Ken Pettit",
      "description": "A snake slithers around the 7-Seg display plus PRISM",
      "clock_hz": 10000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/kdp1965/ttsky-um-pettit-tinysnake",
      "commit": "34bbff00b186fcd5710a52148ca61ab7b30b9f0e",
      "pinout": {
        "ui[0]": "speed[0]/prism_enable",
        "ui[1]": "speed[1]/prism_cfg_data",
        "ui[2]": "speed[2]",
        "ui[3]": "speed[3]",
        "ui[4]": "speed[4]",
        "ui[5]": "speed[5]",
        "ui[6]": "speed[6]",
        "ui[7]": "speed[7]",
        "uo[0]": "seg_a",
        "uo[1]": "seg_b",
        "uo[2]": "seg_c",
        "uo[3]": "seg_d",
        "uo[4]": "seg_e",
        "uo[5]": "seg_f",
        "uo[6]": "seg_g",
        "uo[7]": "prism_debug",
        "uio[0]": "prism_in[0]",
        "uio[1]": "prism_in[1]",
        "uio[2]": "prism_in[2]",
        "uio[3]": "prism_out[0]",
        "uio[4]": "prism_out[1]",
        "uio[5]": "prism_out[2]",
        "uio[6]": "prism_out[3]",
        "uio[7]": "prism_cfg_clk"
      }
    },
    {
      "macro": "tt_um_wokwi_438920793944579073",
      "address": 555,
      "title": "Multiple digital design structures",
      "author": "A Ghani -Emirates Chips Competence- Design 2",
      "description": "This design includes multiple digital designs such as positive and negative edge trigger circuits, an LFSR and spike counter and output trigger circuits",
      "clock_hz": 50,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/arfanghani/ttsky25a_RAK_design2",
      "commit": "8cc3c4b63264fd6519379f8b850ee288145b4500",
      "pinout": {
        "ui[0]": "IN0",
        "ui[1]": "IN1",
        "ui[2]": "IN2",
        "ui[3]": "RST_N",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "OUT0",
        "uo[1]": "OUT1",
        "uo[2]": "OUT2",
        "uo[3]": "OUT3",
        "uo[4]": "OUT4",
        "uo[5]": "OUT5",
        "uo[6]": "OUT6",
        "uo[7]": "",
        "uio[0]": "D0",
        "uio[1]": "D1",
        "uio[2]": "D2",
        "uio[3]": "D3",
        "uio[4]": "D4",
        "uio[5]": "D5",
        "uio[6]": "D6",
        "uio[7]": "D7"
      }
    },
    {
      "macro": "tt_um_wokwi_440004235377529857",
      "address": 548,
      "title": "Latched 4-bits adder",
      "author": "Adan Kvitschal",
      "description": "4-bits added with lacthed output, sum result is updated every clock rising edge",
      "clock_hz": 1,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/adankvitschal/tt-4bit-adder",
      "commit": "b308c10abaa34a093ce140e7b71a1ecc04343ee7",
      "pinout": {
        "ui[0]": "a[0]",
        "ui[1]": "a[1]",
        "ui[2]": "a[2]",
        "ui[3]": "a[3]",
        "ui[4]": "b[0]",
        "ui[5]": "b[1]",
        "ui[6]": "b[2]",
        "ui[7]": "b[3]",
        "uo[0]": "s[0]",
        "uo[1]": "s[1]",
        "uo[2]": "s[2]",
        "uo[3]": "s[3]",
        "uo[4]": "cout",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_441378095886546945",
      "address": 550,
      "title": "Sequential Circuit for 7-Segment Display",
      "author": "Kevin Andre Lopez Arellano",
      "description": "Sequential Circuit shows name Andre on 7 segment display",
      "clock_hz": 1,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/kevinandrelopezarellano-collab/sky130-sequentialcircuit",
      "commit": "35b6e259559bc10a73e3726d594fa6ada87101f2",
      "pinout": {
        "ui[0]": "",
        "ui[1]": "",
        "ui[2]": "",
        "ui[3]": "",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "7A",
        "uo[1]": "7B",
        "uo[2]": "7C",
        "uo[3]": "7D",
        "uo[4]": "7E",
        "uo[5]": "7F",
        "uo[6]": "7G",
        "uo[7]": "7DP",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_441382314812372993",
      "address": 552,
      "title": "Sumador/restador de 4 bits",
      "author": "UABC",
      "description": "adder/substracter to a 7 segments display",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/Kokko00/Sumador_restador_7seg",
      "commit": "87730eee7da9a17219c44a1fb458a6d8a50190d1",
      "pinout": {
        "ui[0]": "IN0",
        "ui[1]": "IN1",
        "ui[2]": "IN2",
        "ui[3]": "IN3",
        "ui[4]": "IN4",
        "ui[5]": "IN5",
        "ui[6]": "IN6",
        "ui[7]": "IN7",
        "uo[0]": "OUT0",
        "uo[1]": "OUT1",
        "uo[2]": "OUT2",
        "uo[3]": "OUT3",
        "uo[4]": "OUT4",
        "uo[5]": "OUT5",
        "uo[6]": "OUT6",
        "uo[7]": "OUT7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_441564414591667201",
      "address": 544,
      "title": "tt-parity-detector",
      "author": "Arthur",
      "description": "It is a Switch parity detector, when there is an odd number of Switches onn it will turn off Parity",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/arthur-moranski/workshop-Teste",
      "commit": "f72a8c3c5b64a60bb862ee336a92081c5a281028",
      "pinout": {
        "ui[0]": "B0",
        "ui[1]": "B1",
        "ui[2]": "B2",
        "ui[3]": "B3",
        "ui[4]": "B4",
        "ui[5]": "B5",
        "ui[6]": "B6",
        "ui[7]": "B7",
        "uo[0]": "Parity",
        "uo[1]": "",
        "uo[2]": "",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_441835796137492481",
      "address": 864,
      "title": "TESVG Binary Counter and shif register ",
      "author": "INGENIERIA ELECTRONICA TESVG",
      "description": "8 binary counter and shift register with flipflops type D and one more versi\u00f3n with RS",
      "clock_hz": 1,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/felipe-SD/8Bit-counter_TESVG_10",
      "commit": "5b48f9100406c3ef1572080be2be63fb5eb85401",
      "pinout": {
        "ui[0]": "Set_Counter",
        "ui[1]": "Reset_Counter",
        "ui[2]": "Select_Reset_Counter",
        "ui[3]": "Select_Counter_D_RS",
        "ui[4]": "",
        "ui[5]": "out_salidas",
        "ui[6]": "D_Shift_Register",
        "ui[7]": "Select_Counter_ShiftRegister",
        "uo[0]": "LED0",
        "uo[1]": "LED1",
        "uo[2]": "LED2",
        "uo[3]": "LED3",
        "uo[4]": "LED4",
        "uo[5]": "LED5",
        "uo[6]": "LED6",
        "uo[7]": "LED7",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_wokwi_442131619043064833",
      "address": 751,
      "title": "Encoder 7 segments display",
      "author": "TECNM.TESVG EQUIPO 5511",
      "description": "Encoder for test 7 segment",
      "clock_hz": 0,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/felipe-SD/Encoder-7-segment-display",
      "commit": "1ba218c196ce4a80da69e89b6097e6f7532f7af4",
      "pinout": {
        "ui[0]": "BIT3",
        "ui[1]": "BIT2",
        "ui[2]": "BIT1",
        "ui[3]": "BIT0",
        "ui[4]": "",
        "ui[5]": "",
        "ui[6]": "",
        "ui[7]": "",
        "uo[0]": "a",
        "uo[1]": "b",
        "uo[2]": "c",
        "uo[3]": "d",
        "uo[4]": "e",
        "uo[5]": "f",
        "uo[6]": "g",
        "uo[7]": "dp",
        "uio[0]": "",
        "uio[1]": "",
        "uio[2]": "",
        "uio[3]": "",
        "uio[4]": "",
        "uio[5]": "",
        "uio[6]": "",
        "uio[7]": ""
      }
    },
    {
      "macro": "tt_um_z2a_rgb_mixer",
      "address": 42,
      "title": "RGB Mixer demo",
      "author": "Matt Venn",
      "description": "Zero to ASIC demo project",
      "clock_hz": 10000000,
      "tiles": "1x1",
      "analog_pins": [],
      "repo": "https://github.com/mattvenn/ttsky25a-rgb-mixer",
      "commit": "424cad023dd67c9ea43c2155643a5780e27689dc",
      "pinout": {
        "ui[0]": "enc0 a",
        "ui[1]": "enc0 b",
        "ui[2]": "enc1 a",
        "ui[3]": "enc1 b",
        "ui[4]": "enc2 a",
        "ui[5]": "enc2 b",
        "ui[6]": "debug bit 0",
        "ui[7]": "debug bit 1",
        "uo[0]": "pwm0",
        "uo[1]": "pwm1",
        "uo[2]": "pwm2",
        "uo[3]": "",
        "uo[4]": "",
        "uo[5]": "",
        "uo[6]": "",
        "uo[7]": "",
        "uio[0]": "encoder bit 0",
        "uio[1]": "encoder bit 1",
        "uio[2]": "encoder bit 2",
        "uio[3]": "encoder bit 3",
        "uio[4]": "encoder bit 4",
        "uio[5]": "encoder bit 5",
        "uio[6]": "encoder bit 6",
        "uio[7]": "encoder bit 7"
      }
    }
  ]
}